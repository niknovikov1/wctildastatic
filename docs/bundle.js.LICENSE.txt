/*

   this index.js file is used for including the faker library as a CommonJS module, instead of a bundle

   you can include the faker library into your existing node.js application by requiring the entire /faker directory

    var faker = require(./faker);
    var randomName = faker.name.findName();

   you can also simply include the "faker.js" file which is the auto-generated bundled version of the faker library

    var faker = require(./customAppPath/faker);
    var randomName = faker.name.findName();


  if you plan on modifying the faker library you should be performing your changes in the /lib/ directory

*/

/*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

/*

Copyright (c) 2012-2014 Jeffrey Mealo

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated
documentation files (the "Software"), to deal in the Software without restriction, including without limitation
the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and
to permit persons to whom the Software is furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial portions of the
Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

------------------------------------------------------------------------------------------------------------------------

Based loosely on Luka Pusic's PHP Script: http://360percents.com/posts/php-random-user-agent-generator/

The license for that script is as follows:

"THE BEER-WARE LICENSE" (Revision 42):

<pusic93@gmail.com> wrote this file. As long as you retain this notice you can do whatever you want with this stuff.
If we meet some day, and you think this stuff is worth it, you can buy me a beer in return. Luka Pusic

*/

/*

The MIT License (MIT)

Copyright (c) 2014 Jonathan Ong me@jongleberry.com

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.

Definitions from mime-db v1.21.0
For updates check: https://github.com/jshttp/mime-db/blob/master/db.json

*/

/*
        if (DEV) {
          const footer = document.createElement("div");
          footer.style.backgroundColor = "green";
          footer.style.height = "100px";
          footer.style.padding = "10px";
          footer.style.margin = "10px";
          body.lastChild.after(footer);
        }
    */

/*
        if (DEV) {
          const header = document.createElement("div");
          header.style.backgroundColor = "yellow";
          header.style.height = "100px";
          header.style.padding = "10px";
          header.style.margin = "10px";
          body.insertBefore(header, body.firstChild);
        }
    */

/*
      * password-generator ( function )
      * Copyright(c) 2011-2013 Bermi Ferrer <bermi@bermilabs.com>
      * MIT Licensed
      */

/*
     Return from inflate(), updating the total counts and the check value.
     If there was no progress during the inflate() call, return a buffer
     error.  Call updatewindow() to create and/or update the window state.
     Note: a memory error from inflate() is non-recoverable.
   */

/*
   A C-program for MT19937, with initialization improved 2002/1/26.
   Coded by Takuji Nishimura and Makoto Matsumoto.

   Before using, initialize the state by using init_genrand(seed)
   or init_by_array(init_key, key_length).

   Copyright (C) 1997 - 2002, Makoto Matsumoto and Takuji Nishimura,
   All rights reserved.

   Redistribution and use in source and binary forms, with or without
   modification, are permitted provided that the following conditions
   are met:

     1. Redistributions of source code must retain the above copyright
        notice, this list of conditions and the following disclaimer.

     2. Redistributions in binary form must reproduce the above copyright
        notice, this list of conditions and the following disclaimer in the
        documentation and/or other materials provided with the distribution.

     3. The names of its contributors may not be used to endorse or promote
        products derived from this software without specific prior written
        permission.

   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
   A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
   EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
   PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


   Any feedback is very welcome.
   http://www.math.sci.hiroshima-u.ac.jp/~m-mat/MT/emt.html
   email: m-mat @ math.sci.hiroshima-u.ac.jp (remove space)
*/

/*
   Create and fill in decoding tables.  In this loop, the table being
   filled is at next and has curr index bits.  The code being used is huff
   with length len.  That code is converted to an index by dropping drop
   bits off of the bottom.  For codes where len is less than drop + curr,
   those top drop + curr - len bits are incremented through all values to
   fill the table with replicated entries.

   root is the number of index bits for the root table.  When len exceeds
   root, sub-tables are created pointed to by the root entry with an index
   of the low root bits of huff.  This is saved in low to check for when a
   new sub-table should be started.  drop is zero when the root table is
   being filled, and drop is root when sub-tables are being filled.

   When a new sub-table is needed, it is necessary to look ahead in the
   code lengths to determine what size sub-table is needed.  The length
   counts are used for this, and so count[] is decremented as codes are
   entered in the tables.

   used keeps track of how many table entries have been allocated from the
   provided *table space.  It is checked for LENS and DIST tables against
   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in
   the initial root table size constants.  See the comments in inftrees.h
   for more information.

   sym increments through all symbols, and the loop terminates when
   all codes of length max, i.e. all codes, have been processed.  This
   routine permits incomplete codes, so another loop after this one fills
   in the rest of the decoding tables with invalid code markers.
   */

/*
   Decode literal, length, and distance codes and write out the resulting
   literal and match bytes until either not enough input or output is
   available, an end-of-block is encountered, or a data error is encountered.
   When large enough input and output buffers are supplied to inflate(), for
   example, a 16K input buffer and a 64K output buffer, more than 95% of the
   inflate execution time is spent in this routine.

   Entry assumptions:

        state.mode === LEN
        strm.avail_in >= 6
        strm.avail_out >= 258
        start >= strm.avail_out
        state.bits < 8

   On return, state.mode is one of:

        LEN -- ran out of enough output space or enough available input
        TYPE -- reached end of block code, inflate() to interpret next block
        BAD -- error in block data

   Notes:

    - The maximum input bits used by a length/distance pair is 15 bits for the
      length code, 5 bits for the length extra, 15 bits for the distance code,
      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.
      Therefore if strm.avail_in >= 6, then there is enough input to avoid
      checking for available input while decoding.

    - The maximum bytes that a single length/distance pair can output is 258
      bytes, which is the maximum length that can be coded.  inflate_fast()
      requires strm.avail_out >= 258 for each loop to avoid checking for
      output space.
 */

/*
   Process a set of code lengths to create a canonical Huffman code.  The
   code lengths are lens[0..codes-1].  Each length corresponds to the
   symbols 0..codes-1.  The Huffman code is generated by first sorting the
   symbols by length from short to long, and retaining the symbol order
   for codes with equal lengths.  Then the code starts with all zero bits
   for the first code of the shortest length, and the codes are integer
   increments for the same length, and zeros are appended as the length
   increases.  For the deflate format, these bits are stored backwards
   from their more natural integer increment ordering, and so when the
   decoding tables are built in the large loop below, the integer codes
   are incremented backwards.

   This routine assumes, but does not check, that all of the entries in
   lens[] are in the range 0..MAXBITS.  The caller must assure this.
   1..MAXBITS is interpreted as that code length.  zero means that that
   symbol does not occur in this code.

   The codes are sorted by computing a count of codes for each length,
   creating from that a table of starting indices for each length in the
   sorted table, and then entering the symbols in order in the sorted
   table.  The sorted table is work[], with that space being provided by
   the caller.

   The length counts are used for other purposes as well, i.e. finding
   the minimum and maximum length codes, determining if there are any
   codes at all, checking for a valid set of lengths, and looking ahead
   at length counts to determine sub-table sizes when building the
   decoding tables.
   */

/*
   because we don't have pointers in js, we use lencode and distcode directly
   as buffers so we don't need codes
  */

/*
  fake.js - generator method for combining faker methods based on string input

*/

/*
  self.categories = function(num) {
      var categories = [];

      do {
          var category = faker.random.arrayElement(faker.definitions.commerce.department);
          if(categories.indexOf(category) === -1) {
              categories.push(category);
          }
      } while(categories.length < num);

      return categories;
  };

  */

/*
  self.mergeCategories = function(categories) {
      var separator = faker.definitions.separator || " &";
      // TODO: find undefined here
      categories = categories || faker.definitions.commerce.categories;
      var commaSeparated = categories.slice(0, -1).join(', ');

      return [commaSeparated, categories[categories.length - 1]].join(separator + " ");
  };
  */

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */

/*
 Modernizr 3.0.0pre (Custom Build) | MIT
*/

/*
 Return state with length and distance decoding tables and index sizes set to
 fixed code decoding.  Normally this returns fixed tables from inffixed.h.
 If BUILDFIXED is defined, then instead this routine builds the tables the
 first time it's called, and returns those tables the first time and
 thereafter.  This reduces the size of the code by about 2K bytes, in
 exchange for a little execution time.  However, BUILDFIXED should not be
 used for threaded applications, since the rewriting of the tables and virgin
 may not be thread-safe.
 */

/*
 Update the window with the last wsize (normally 32K) bytes written before
 returning.  If window does not exist yet, create it.  This is only called
 when a window is already in use, or when output has been written during this
 inflate call, but the end of the deflate stream has not been reached yet.
 It is also called to create a window for dictionary data when a dictionary
 is loaded.

 Providing output buffers larger than 32K to inflate() should provide a speed
 advantage, since only the last 32K of output is copied to the sliding window
 upon return from inflate(), and since all distances after the first 32K of
 output will fall in the output data, making match copies simpler and faster.
 The advantage may be dependent on the size of the processor's data caches.
 */

/*
String.prototype.capitalize = function () { //v1.0
    return this.replace(/\w+/g, function (a) {
        return a.charAt(0).toUpperCase() + a.substr(1).toLowerCase();
    });
};
*/

/*
function unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {
    if (typeof(value) === "string" && value.length % 2 && value.substring(0, 2) === "0x") {
        return "0x0" + value.substring(2);
    }
    return value;
}
*/

/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

/*      good lazy nice chain */

/* != Z_NULL*/

/* -1 -1 */

/* -1 0 */

/* -1 1 */

/* .Buffer */

/* .MersenneTwister19937 */

/* .StringDecoder */

/* .codes */

/* .codes.ERR_INVALID_OPT_VALUE */

/* .codes.ERR_STREAM_PREMATURE_CLOSE */

/* .default */

/* 0 -1 */

/* 0 0 */

/* 0 1 */

/* 0 store only */

/* 1 */

/* 1 -1 */

/* 1 0 */

/* 1 max speed, no lazy matches */

/* 16K elements by default */

/* 2 */

/* 2002/01/09 modified by Makoto Matsumoto             */

/* 2nd level distance code */

/* 2nd level length code */

/* 3 */

/* 4 lazy matches */

/* 4: two words for the lengths */

/* 5 */

/* 6 */

/* 7 */

/* 8 */

/* 9 max compression */

/* </replacement> */

/* == Z_NULL */

/* =========================================================================
 * Flush as much pending output as possible. All deflate() output goes
 * through this function so some applications may wish to modify it
 * to avoid allocating a large strm->output buffer and copying into it.
 * (See also read_buf()).
 */

/* =========================================================================
 * Initializes the compression dictionary from the given byte
 * sequence without producing any compressed output.
 */

/* =========================================================================
 * Put a short in the pending buffer. The 16-bit value is put in MSB order.
 * IN assertion: the stream state is correct and there is enough room in
 * pending_buf.
 */

/* ===========================================================================
 * Check if the data type is TEXT or BINARY, using the following algorithm:
 * - TEXT if the two conditions below are satisfied:
 *    a) There are no non-portable control characters belonging to the
 *       "black list" (0..6, 14..25, 28..31).
 *    b) There is at least one printable character belonging to the
 *       "white list" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).
 * - BINARY otherwise.
 * - The following partially-portable control characters form a
 *   "gray list" that is ignored in this detection algorithm:
 *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).
 * IN assertion: the fields Freq of dyn_ltree are set.
 */

/* ===========================================================================
 * Compares to subtrees, using the tree depth as tie breaker when
 * the subtrees have equal frequency. This minimizes the worst case length.
 */

/* ===========================================================================
 * Compress as much as possible from the input stream, return the current
 * block state.
 * This function does not perform lazy evaluation of matches and inserts
 * new strings in the dictionary only for unmatched strings or for short
 * matches. It is used only for the fast compression options.
 */

/* ===========================================================================
 * Compute the optimal bit lengths for a tree and update the total bit length
 * for the current block.
 * IN assertion: the fields freq and dad are set, heap[heap_max] and
 *    above are the tree nodes sorted by increasing frequency.
 * OUT assertions: the field len is set to the optimal bit length, the
 *     array bl_count contains the frequencies for each bit length.
 *     The length opt_len is updated; static_len is also updated if stree is
 *     not null.
 */

/* ===========================================================================
 * Construct one Huffman tree and assigns the code bit strings and lengths.
 * Update the total bit length for the current block.
 * IN assertion: the field freq is set for all tree elements.
 * OUT assertions: the fields len and code are set to the optimal bit length
 *     and corresponding code. The length opt_len is updated; static_len is
 *     also updated if stree is not null. The field max_code is set.
 */

/* ===========================================================================
 * Construct the Huffman tree for the bit lengths and return the index in
 * bl_order of the last bit length code to send.
 */

/* ===========================================================================
 * Copy a stored block, storing first the length and its
 * one's complement if requested.
 */

/* ===========================================================================
 * Copy without compression as much as possible from the input stream, return
 * the current block state.
 * This function does not insert new strings in the dictionary since
 * uncompressible data is probably not useful. This function is used
 * only for the level=0 compression option.
 * NOTE: this function should be optimized to avoid extra copying from
 * window to pending_buf.
 */

/* ===========================================================================
 * Determine the best encoding for the current block: dynamic trees, static
 * trees or store, and output the encoded block to the zip file.
 */

/* ===========================================================================
 * Fill the window when the lookahead becomes insufficient.
 * Updates strstart and lookahead.
 *
 * IN assertion: lookahead < MIN_LOOKAHEAD
 * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD
 *    At least one byte has been read, or avail_in == 0; reads are
 *    performed for at least two bytes (required for the zip translate_eol
 *    option -- not supported here).
 */

/* ===========================================================================
 * Flush the bit buffer and align the output on a byte boundary
 */

/* ===========================================================================
 * Flush the bit buffer, keeping at most 7 bits in it.
 */

/* ===========================================================================
 * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.
 * (It will be regenerated if this run of deflate switches away from Huffman.)
 */

/* ===========================================================================
 * For Z_RLE, simply look for runs of bytes, generate matches only of distance
 * one.  Do not maintain a hash table.  (It will be regenerated if this run of
 * deflate switches away from Z_RLE.)
 */

/* ===========================================================================
 * Generate the codes for a given tree and bit counts (which need not be
 * optimal).
 * IN assertion: the array bl_count contains the bit length statistics for
 * the given tree and the field len is set for all tree elements.
 * OUT assertion: the field code is set for all tree elements of non
 *     zero code length.
 */

/* ===========================================================================
 * Initialize a new block.
 */

/* ===========================================================================
 * Initialize the "longest match" routines for a new zlib stream
 */

/* ===========================================================================
 * Initialize the tree data structures for a new zlib stream.
 */

/* ===========================================================================
 * Initialize the various 'constant' tables.
 */

/* ===========================================================================
 * Output a short LSB first on the stream.
 * IN assertion: there is enough room in pendingBuf.
 */

/* ===========================================================================
 * Read a new buffer from the current input stream, update the adler32
 * and total number of bytes read.  All deflate() input goes through
 * this function so some applications may wish to modify it to avoid
 * allocating a large strm->input buffer and copying from it.
 * (See also flush_pending()).
 */

/* ===========================================================================
 * Restore the heap property by moving down the tree starting at node k,
 * exchanging a node with the smallest of its two sons if necessary, stopping
 * when the heap property is re-established (each father smaller than its
 * two sons).
 */

/* ===========================================================================
 * Reverse the first len bits of a code, using straightforward code (a faster
 * method would use a table)
 * IN assertion: 1 <= len <= 15
 */

/* ===========================================================================
 * Same as above, but achieves better compression. We use a lazy
 * evaluation for matches: a match is finally adopted only if there is
 * no better match at the next window position.
 */

/* ===========================================================================
 * Save the match info and tally the frequency counts. Return true if
 * the current block must be flushed.
 */

/* ===========================================================================
 * Scan a literal or distance tree to determine the frequencies of the codes
 * in the bit length tree.
 */

/* ===========================================================================
 * Send a literal or distance tree in compressed form, using the codes in
 * bl_tree.
 */

/* ===========================================================================
 * Send a stored block
 */

/* ===========================================================================
 * Send a value on a given number of bits.
 * IN assertion: length <= 16 and value fits in length bits.
 */

/* ===========================================================================
 * Send one empty static block to give enough lookahead for inflate.
 * This takes 10 bits, of which 7 may remain in the bit buffer.
 */

/* ===========================================================================
 * Send the block data compressed using the given Huffman trees
 */

/* ===========================================================================
 * Send the header for a block using dynamic Huffman trees: the counts, the
 * lengths of the bit length codes, the literal tree and the distance tree.
 * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.
 */

/* ===========================================================================
 * Set match_start to the longest match starting at the given string and
 * return its length. Matches shorter or equal to prev_length are discarded,
 * in which case the result is equal to prev_length and match_start is
 * garbage.
 * IN assertions: cur_match is the head of the hash chain for the current
 *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1
 * OUT assertion: the match length is not greater than s->lookahead.
 */

/* ===========================================================================*/

/* Actual size of window: 2*wSize, except when the user input buffer
   * is directly used as sliding window.
   */

/* Allowed flush values; see deflate() and inflate() below for details */

/* And continue down the tree, setting j to the left son of k */

/* At this point, opt_len and static_len are the total bit lengths of
     * the compressed block data, excluding the tree representations.
     */

/* At this point, the fields freq and dad are set. We can now
   * generate the bit lengths.
   */

/* Attempt to find a better match only when the current match is strictly
   * smaller than this value. This mechanism is used only for compression
   * levels >= 4.
   */

/* Buffer index for distances. To simplify the code, d_buf and l_buf have
   * the same number of elements. To use different lengths, an extra flag
   * array would be necessary.
   */

/* Build the Huffman trees unless a stored block is forced */

/* Build the bit length tree for the above two trees, and get the index
     * in bl_order of the last bit length code to send.
     */

/* Build the bit length tree: */

/* Check for non-textual ("black-listed") bytes. */

/* Check for textual ("white-listed") bytes. */

/* Check if the file is binary or text */

/* Check that the bit counts in bl_count are consistent. The last code
   * must be all ones.
   */

/* Codes 286 and 287 do not exist, but we must include them in the
   * tree construction to get a canonical Huffman tree (longest code
   * all ones)
   */

/* Construct the Huffman tree by repeatedly combining the least two
   * frequent nodes.
   */

/* Construct the codes of the static literal tree */

/* Construct the initial heap, with least frequent element in
   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].
   * heap[0] is not used.
   */

/* Construct the literal and distance trees */

/* Copy as much as possible from input to output: */

/* Create a new node father of n and m */

/* DISTS */

/* Deal with !@#$% 64K limit: */

/* Depth of each subtree used as tie breaker for trees of equal frequency
   */

/* Determine the best encoding. Compute the block lengths in bytes. */

/* Determine the bit length frequencies for literal and distance trees */

/* Determine the number of bit length codes to send. The pkzip format
   * requires that at least 4 bit length codes be sent. (appnote.txt says
   * 3 but the actual value used is 4.)
   */

/* Didn't use ct_data typedef below to suppress compiler warning */

/* Distance codes 0..29 base */

/* Distance codes 0..29 extra */

/* Distance codes. The first 256 values correspond to the distances
 * 3 .. 258, the last 256 values correspond to the top 8 bits of
 * the 15 bit distances.
 */

/* Do not insert strings in hash table beyond this. */

/* Do not look for matches beyond the end of the input. This is necessary
   * to make deflate deterministic.
   */

/* Do not waste too much time if we already have a good match: */

/* Emit a stored block if pending_buf will be full: */

/* Emit match if have run of MIN_MATCH or longer, else emit literal */

/* Exchange v with the smallest son */

/* Exit if v is smaller than both sons */

/* FULL_FLUSH or SYNC_FLUSH */

/* Fill the window as much as possible: */

/* Find the first bit length which could increase: */

/* Find the longest match, discarding those <= prev_length.
     * At this point we have always match_length < MIN_MATCH
     */

/* Find the longest match, discarding those <= prev_length.
     */

/* First normalized distance for each code (0 = distance of 1) */

/* First normalized length for each code (0 = MIN_MATCH) */

/* Flush as much pending output as possible */

/* Flush if we may have to slide, otherwise block_start may become
     * negative and the data will be gone:
     */

/* For a full flush, this empty block will be recognized
         * as a special marker by inflate_sync().
         */

/* For some embedded targets, global variables are not initialized: */

/* Heads of the hash chains or NIL. */

/* Here, lc is the match length - MIN_MATCH */

/* If avail_out is zero, the application will call deflate again
   * to flush the rest.
   */

/* If flush != Z_NO_FLUSH && avail_out == 0, the next call
       * of deflate should use the same flush parameter to make sure
       * that the flush is complete. So we don't have to output an
       * empty block here, this will be done at next call. This also
       * ensures that for a very small output buffer, we emit at most
       * one empty block.
       */

/* If prev_match is also MIN_MATCH, match_start is garbage
         * but we will ignore the current match anyway.
         */

/* If the WIN_INIT bytes after the end of the current data have never been
   * written, then zero those bytes in order to avoid memory check reports of
   * the use of uninitialized (or uninitialised as Julian writes) bytes by
   * the longest match routines.  Update the high water mark for the next
   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match
   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.
   */

/* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,
     * but this is not important since only literal bytes will be emitted.
     */

/* If the window is almost full and there is insufficient lookahead,
     * move the upper half to the lower one to make room in the upper half.
     */

/* If there was a match at the previous step and the current
     * match is not better, output the previous match:
     */

/* If there was no match at the previous position, output a
       * single literal. If there was a match but the current match
       * is longer, truncate the previous match to a single literal.
       */

/* If there was no sliding:
     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&
     *    more == window_size - lookahead - strstart
     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)
     * => more >= window_size - 2*WSIZE + 2
     * In the BIG_MEM or MMAP case (not yet supported),
     *   window_size == input_size + MIN_LOOKAHEAD  &&
     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.
     * Otherwise, window_size == 2*WSIZE so more >= 2.
     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.
     */

/* In a first pass, compute the optimal bit lengths (which may
   * overflow in the case of the bit length tree).
   */

/* In the previous versions, MSBs of the seed affect   */

/* Initialize the first block of the first file: */

/* Initialize the hash value now that we have some input: */

/* Initialize the mapping dist (0..32K) -> dist code (0..29) */

/* Initialize the mapping length (0..255) -> length code (0..28) */

/* Initialize the trees. */

/* Insert in hash table all strings up to the end of the match.
       * strstart-1 and strstart are already inserted. If there is not
       * enough lookahead, the last two strings are not inserted in
       * the hash table.
       */

/* Insert new strings in the hash table only if the match length
       * is not too large. This saves time but degrades compression.
       */

/* Insert new strings in the hash table only if the match length is not
   * greater than this length. This saves time but degrades compression.
   * max_insert_length is used only for compression levels <= 3.
   */

/* Insert the string window[strstart .. strstart+2] in the
     * dictionary, and set hash_head to the head of the hash chain:
     */

/* LZ77 window size (32K by default) */

/* Length codes 257..285 base */

/* Length codes 257..285 extra */

/* Length of the best match at previous step. Matches not greater than this
   * are discarded. This is used in the lazy match evaluation.
   */

/* Link to older string with same hash index. To limit the size of this
   * array to 64K, this link is maintained only for the last 32K strings.
   * An index in this array is thus a window index modulo 32K.
   */

/* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the longest run, plus one for the unrolled loop.
     */

/* Make sure that we always have enough lookahead, except
     * at the end of the input file. We need MAX_MATCH bytes
     * for the next match, plus MIN_MATCH bytes to insert the
     * string following the next match.
     */

/* Make sure that we have a literal to write. */

/* Make sure there is something to do and avoid duplicate consecutive
     * flushes. For repeated and useless calls with Z_FINISH, we keep
     * returning Z_STREAM_END instead of Z_BUF_ERROR.
     */

/* No match, output a literal byte */

/* Not implemented
exports.deflateBound = deflateBound;
exports.deflateCopy = deflateCopy;
exports.deflateParams = deflateParams;
exports.deflatePending = deflatePending;
exports.deflatePrime = deflatePrime;
exports.deflateTune = deflateTune;
*/

/* Not implemented
exports.inflateCopy = inflateCopy;
exports.inflateGetDictionary = inflateGetDictionary;
exports.inflateMark = inflateMark;
exports.inflatePrime = inflatePrime;
exports.inflateSync = inflateSync;
exports.inflateSyncPoint = inflateSyncPoint;
exports.inflateUndermine = inflateUndermine;
*/

/* Note that the length 255 (match length 258) can be represented
   * in two different ways: code 284 + 5 bits or code 285, so we
   * overwrite length_code[255] to use the best encoding:
   */

/* Now recompute all bit lengths, scanning in increasing frequency.
   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all
   * lengths instead of fixing only the wrong ones. This idea is taken
   * from 'ar' written by Haruhiko Okumura.)
   */

/* Now reverse the bits */

/* Number of bits by which ins_h must be shifted at each input
   * step. It must be such that after MIN_MATCH steps, the oldest
   * byte no longer takes part in the hash key, that is:
   *   hash_shift * MIN_MATCH >= hash_bits
   */

/* Output a literal byte */

/* Output buffer. bits are inserted starting at the bottom (least
   * significant bits).
   */

/* Period parameters */

/* Possible values of the data_type field (though see inflate()) */

/* Process the input block. */

/* Pseudo-class applied to the `component`'s `focusVisibleClassName` prop if `button={true}`. */

/* Pseudo-class applied to the inner `component` element if `disabled={true}`. */

/* Pseudo-class applied to the root element if `disabled={true}`. */

/* Pseudo-class applied to the root element if `selected={true}`. */

/* Pseudo-class applied to the root element if keyboard focused. */

/* Public constants ==========================================================*/

/* Return codes for the compression/decompression functions. Negative values
  * are errors, positive values are used for special but normal events.
  */

/* RuleList */

/* Save the adler32 of the preset dictionary: */

/* See Knuth TAOCP Vol2. 3rd Ed. P.106 for multiplier. */

/* See how many times the previous byte repeats */

/* Set j to the smallest of the two sons: */

/* Set the default configuration parameters:
   */

/* Since avail_out is 0, deflate will be called again with
       * more output space, but possibly with both pending and
       * avail_in equal to zero. There won't be anything to do,
       * but this is not an error situation so make sure we
       * return OK instead of BUF_ERROR at next call of deflate:
       */

/* Size of match buffer for literals/lengths.  There are 4 reasons for
   * limiting lit_bufsize to 64K:
   *   - frequencies can be kept in 16 bit counters
   *   - if compression is not successful for the first block, all input
   *     data is still in the window so we can still emit a stored block even
   *     when input comes from standard input.  (This can also be done for
   *     all blocks if lit_bufsize is not greater than 32K.)
   *   - if compression is not successful for a file smaller than 64K, we can
   *     even emit a stored file instead of a stored block (saving 5 bytes).
   *     This is applicable only for zip (not gzip or zlib).
   *   - creating new Huffman trees less frequently may not provide fast
   *     adaptation to changes in the input data statistics. (Take for
   *     example a binary file with poorly compressible code followed by
   *     a highly compressible string table.) Smaller buffer sizes give
   *     fast adaptation but have of course the overhead of transmitting
   *     trees more frequently.
   *   - I can't count above 4
   */

/* Skip to next match if the match length cannot increase
     * or if the match length is less than 2.  Note that the checks below
     * for insufficient lookahead only occur occasionally for performance
     * reasons.  Therefore uninitialized memory will be accessed, and
     * conditional jumps will be made that depend on those values.
     * However the length of the match is limited to the lookahead, so
     * the output of deflate is not affected by the uninitialized values.
     */

/* Slide the hash table (could be avoided with 32 bit values
       at the expense of memory usage). We slide even when level == 0
       to keep the hash table consistent if we switch back to level > 0
       later. (Using level 0 permanently is not an optimal usage of
       zlib, so we don't care about this pathological case.)
       */

/* Sliding window. Input bytes are read into the second half of the window,
   * and move to the first half later to keep a dictionary of at least wSize
   * bytes. With this organization, matches are limited to a distance of
   * wSize-MAX_MATCH bytes, but this ensures that IO is always
   * performed with a length multiple of the block size.
   */

/* Start a new block or continue the current one.
   */

/* Stop searching when current match exceeds this */

/* Stored blocks are limited to 0xffff bytes, pending_buf is limited
   * to pending_buf_size, and each stored block has a 5 byte header:
   */

/* Styles applied to the (normally root) `component` element. May be wrapped by a `container`. */

/* Styles applied to the `Modal` component. */

/* Styles applied to the `Paper` component if `anchor="bottom"` and `variant` is not "temporary". */

/* Styles applied to the `Paper` component if `anchor="bottom"`. */

/* Styles applied to the `Paper` component if `anchor="left"` and `variant` is not "temporary". */

/* Styles applied to the `Paper` component if `anchor="left"`. */

/* Styles applied to the `Paper` component if `anchor="right"` and `variant` is not "temporary". */

/* Styles applied to the `Paper` component if `anchor="right"`. */

/* Styles applied to the `Paper` component if `anchor="top"` and `variant` is not "temporary". */

/* Styles applied to the `Paper` component if `anchor="top"`. */

/* Styles applied to the `Paper` component. */

/* Styles applied to the `Typography` components if dense. */

/* Styles applied to the `Typography` components if primary and secondary are set. */

/* Styles applied to the `component` element if `alignItems="flex-start"`. */

/* Styles applied to the `component` element if `children` includes `ListItemSecondaryAction`. */

/* Styles applied to the `component` element if dense. */

/* Styles applied to the `container` element if `children` includes `ListItemSecondaryAction`. */

/* Styles applied to the children container element. */

/* Styles applied to the inner `component` element if `button={true}`. */

/* Styles applied to the inner `component` element if `disableGutters={false}`. */

/* Styles applied to the inner `component` element if `divider={true}`. */

/* Styles applied to the internal `Ripple` components `childLeaving` class. */

/* Styles applied to the internal `Ripple` components `childPulsate` class. */

/* Styles applied to the internal `Ripple` components `child` class. */

/* Styles applied to the internal `Ripple` components `ripplePulsate` class. */

/* Styles applied to the internal `Ripple` components `rippleVisible` class. */

/* Styles applied to the internal `Ripple` components `ripple` class. */

/* Styles applied to the primary `Typography` component. */

/* Styles applied to the root element if `absolute={true}`. */

/* Styles applied to the root element if `align="center"`. */

/* Styles applied to the root element if `align="justify"`. */

/* Styles applied to the root element if `align="left"`. */

/* Styles applied to the root element if `align="right"`. */

/* Styles applied to the root element if `color="action"`. */

/* Styles applied to the root element if `color="default"`. */

/* Styles applied to the root element if `color="disabled"`. */

/* Styles applied to the root element if `color="error"`. */

/* Styles applied to the root element if `color="inherit"`. */

/* Styles applied to the root element if `color="primary"`. */

/* Styles applied to the root element if `color="secondary"`. */

/* Styles applied to the root element if `color="textPrimary"`. */

/* Styles applied to the root element if `color="textSecondary"`. */

/* Styles applied to the root element if `color="transparent"`. */

/* Styles applied to the root element if `disableGutters={false}`. */

/* Styles applied to the root element if `disableGutters={true}`. */

/* Styles applied to the root element if `disablePadding={false}`. */

/* Styles applied to the root element if `display="block"`. */

/* Styles applied to the root element if `display="inline"`. */

/* Styles applied to the root element if `edge="end"`. */

/* Styles applied to the root element if `edge="start"`. */

/* Styles applied to the root element if `fixed={true}`. */

/* Styles applied to the root element if `flexItem={true}`. */

/* Styles applied to the root element if `fontSize="inherit"`. */

/* Styles applied to the root element if `fontSize="large"`. */

/* Styles applied to the root element if `fontSize="small"`. */

/* Styles applied to the root element if `gutterBottom={true}`. */

/* Styles applied to the root element if `inset={true}`. */

/* Styles applied to the root element if `invisible={true}`. */

/* Styles applied to the root element if `light={true}`. */

/* Styles applied to the root element if `maxWidth="lg"`. */

/* Styles applied to the root element if `maxWidth="md"`. */

/* Styles applied to the root element if `maxWidth="sm"`. */

/* Styles applied to the root element if `maxWidth="xl"`. */

/* Styles applied to the root element if `maxWidth="xs"`. */

/* Styles applied to the root element if `nowrap={true}`. */

/* Styles applied to the root element if `orientation="vertical"`. */

/* Styles applied to the root element if `paragraph={true}`. */

/* Styles applied to the root element if `position="absolute"`. */

/* Styles applied to the root element if `position="fixed"`. */

/* Styles applied to the root element if `position="relative"`. */

/* Styles applied to the root element if `position="static"`. */

/* Styles applied to the root element if `position="sticky"`. */

/* Styles applied to the root element if `size="small"`. */

/* Styles applied to the root element if `square={false}`. */

/* Styles applied to the root element if `variant="body1"`. */

/* Styles applied to the root element if `variant="body2"`. */

/* Styles applied to the root element if `variant="button"`. */

/* Styles applied to the root element if `variant="caption"`. */

/* Styles applied to the root element if `variant="dense"`. */

/* Styles applied to the root element if `variant="h1"`. */

/* Styles applied to the root element if `variant="h2"`. */

/* Styles applied to the root element if `variant="h3"`. */

/* Styles applied to the root element if `variant="h4"`. */

/* Styles applied to the root element if `variant="h5"`. */

/* Styles applied to the root element if `variant="h6"`. */

/* Styles applied to the root element if `variant="inset"`. */

/* Styles applied to the root element if `variant="middle"`. */

/* Styles applied to the root element if `variant="outlined"`. */

/* Styles applied to the root element if `variant="overline"`. */

/* Styles applied to the root element if `variant="permanent or persistent"`. */

/* Styles applied to the root element if `variant="regular"`. */

/* Styles applied to the root element if `variant="srOnly"`. Only accessible to screen readers. */

/* Styles applied to the root element if `variant="subtitle1"`. */

/* Styles applied to the root element if `variant="subtitle2"`. */

/* Styles applied to the root element if a `subheader` is provided. */

/* Styles applied to the root element if dense. */

/* Styles applied to the root element if the `Modal` has exited. */

/* Styles applied to the root element when the parent `ListItem` uses `alignItems="flex-start"`. */

/* Styles applied to the root element. */

/* Styles applied to the secondary `Typography` component. */

/* StylesContext */

/* Tempering */

/* The above check is made mod 2^32, for files larger than 512 MB
   * and uLong implemented on 32 bits.
   */

/* The brother of the overflow item also moves one step up,
     * but this does not affect bl_count[max_length]
     */

/* The check at best_len-1 can be removed because it will be made
     * again later. (This heuristic is not always a win.)
     * It is not necessary to compare scan[2] and match[2] since they
     * are always equal when the other bytes match, given that
     * the hash keys are equal and that HASH_BITS >= 8.
     */

/* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.
   * It is easy to get rid of this optimization if necessary.
   */

/* The deflate compression method */

/* The distribution counts are first used to generate the code values
   * without bit reversal.
   */

/* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,
   * establish sub-heaps of increasing lengths:
   */

/* The field len is now set, we can generate the bit codes */

/* The pkzip format requires that at least one distance code exists,
   * and that at least one bit should be sent even if there is only one
   * possible code. So to avoid special checks later on we force at least
   * two codes of non zero frequency.
   */

/* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.
   * The same heap array is used to build all trees.
   */

/* The static distance tree is trivial: */

/* The static distance tree. (Actually a trivial tree since all codes use
 * 5 bits.)
 */

/* The static literal tree. Since the bit lengths are imposed, there is no
 * need for the L_CODES extra codes used during heap construction. However
 * The codes 286 and 287 are needed to build a canonical tree (see _tr_init
 * below).
 */

/* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.
     * Otherwise we can't have processed more than WSIZE input bytes since
     * the last block flush, because compression would have been
     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to
     * transform a block into a stored block.
     */

/* There are no "black-listed" or "white-listed" bytes:
   * this stream either is empty or has tolerated ("gray-listed") bytes only.
   */

/* There is no previous match to compare with, wait for
       * the next step to decide.
       */

/* These real versions are due to Isaku Wada, 2002/01/09 added */

/* This happens for example on obj2 and pic of the Calgary corpus */

/* To simplify the code, we prevent matches with the string
       * of window index 0 (in particular we have to avoid a match
       * of the string with itself at the start of the input file).
       */

/* To speed up deflation, hash chains are never searched beyond this
   * length.  A higher limit improves compression ratio but degrades the
   * speed.
   */

/* TouchRipple is only needed client-side, x2 boost on the server. */

/* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */

/* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */

/* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */

/* Update opt_len to include the bit length tree and counts */

/* Use a faster search when the previous match is longer than this */

/* User must not provide more input after the first FINISH: */

/* Values for max_lazy_match, good_match and max_chain_length, depending on
 * the desired pack level (0..9). The values given below have been tuned to
 * exclude worst case performance for pathological files. Better values may be
 * found for specific files.
 */

/* We avoid equality with lit_bufsize because of wraparound at 64K
   * on 16 bit machines and because stored blocks are restricted to
   * 64K-1 bytes.
   */

/* We check for insufficient lookahead only every 8th comparison;
     * the 256th check will be made at strstart+258.
     */

/* We overwrite tree[n].Dad which is no longer needed */

/* Window position at the beginning of the current output block. Gets
   * negative when the window is moved backwards.
   */

/* Write the header */

/* Write the trailer */

/* Z+1 */

/* Z_BUF_ERROR     (-5) */

/* Z_DATA_ERROR    (-3) */

/* Z_ERRNO         (-1) */

/* Z_MEM_ERROR     (-4) */

/* Z_NEED_DICT       2  */

/* Z_OK              0  */

/* Z_STREAM_END      1  */

/* Z_STREAM_ERROR  (-2) */

/* Z_VERSION_ERROR (-6) */

/* a default initial seed is used */

/* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */

/* adler32 value of the uncompressed data */

/* adler32(strm->adler, dictionary, dictLength); */

/* align on byte boundary */

/* allocated sliding window, if needed */

/* alpha */

/* already empty otherwise */

/* and insert the new node in the heap */

/* as the name implies */

/* avoid BUF_ERROR at next call, see above */

/* avoid computing Adler-32 in read_buf */

/* backwards increment the len-bit code huff */

/* base index for extra_bits */

/* best guess about the data type: binary or text */

/* binding */

/* bit 0 true for zlib, bit 1 true for gzip */

/* bit accumulator */

/* bit length of current block with optimal trees */

/* bit length of current block with static trees */

/* bits back of last unprocessed length/lit */

/* black_mask is the bit mask of black-listed bytes
   * set bits 0..6, 14..25, and 28..31
   * 0xf3ffc07f = binary 11110011111111111100000001111111
   */

/* bound code lengths, force root to be within code lengths */

/* buffer index for literals or lengths */

/* build code tables -- note: do not change the lenbits or distbits
           values here (9 and 6) without reading the comments in inftrees.h
           concerning the ENOUGH constants, which depend on those values */

/* build fixed huffman tables if first call (may not be thread safe) */

/* bytes at end of window left to insert */

/* can only be DEFLATED */

/* check available table space */

/* check for an over-subscribed or incomplete set of lengths */

/* check for correct dictionary identifier */

/* check for end-of-block code (better have one) */

/* check for enough space */

/* check if zlib header allowed */

/* check state */

/* code index */

/* compression level (1..9) */

/* compression levels */

/* constant vector a */

/* constants should be scoped inside the class */

/* contiguous in window */

/* copy dictionary to window using updatewindow(), which will amend the
   existing dictionary if appropriate */

/* copy direct from output */

/* copy from output */

/* copy from window */

/* copy state to local variables */

/* copy state->wsize or less output bytes into the circular window */

/* create */

/* create new sub-table if needed */

/* create table entry */

/* createRule */

/* createUnarySpacing */

/* current bits to drop from code for index */

/* current inflate mode */

/* current table index bits */

/* current table to fill in */

/* darken */

/* decode codes */

/* decode literals and length/distances until end-of-block or not enough
     input data or output space */

/* default */

/* default.Provider */

/* desc. for bit length tree */

/* desc. for distance tree */

/* desc. for literal tree */

/* determine length of next table */

/* dist = match distance - 1 */

/* dist is now the match distance - 1 */

/* distance back in window */

/* distance back to copy string from */

/* distance base */

/* distance of matched string */

/* distance table */

/* divided by 2^32 */

/* divided by 2^32-1 */

/* do this just once */

/* dummy value--not used */

/* duration.enteringScreen */

/* duration.leavingScreen */

/* dynamic block */

/* dynamic table building */

/* dynamic table for distance codes (JS specific) */

/* dynamic table for length/literal codes (JS specific) */

/* element of largest frequency */

/* end of block */

/* end-of-block */

/* eslint complexity: [2, 18], max-statements: [2, 33] */

/* eslint no-invalid-this: 1 */

/* eslint node-core/alphabetize-errors: "error" */

/* eslint node-core/documented-errors: "error" */

/* eslint node-core/prefer-util-format-errors: "error" */

/* eslint-disable consistent-return, jsx-a11y/no-noninteractive-tabindex, camelcase */

/* eslint-disable no-proto */

/* eslint-disable no-restricted-properties */

/* eslint-disable no-restricted-syntax */

/* eslint-disable no-unused-vars */

/* eslint-disable no-use-before-define */

/* eslint-disable no-var, prefer-template */

/* eslint-disable node/no-deprecated-api */

/* eslint-disable prefer-template */

/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */

/* eslint-disable react/forbid-foreign-prop-types */

/* eslint-disable space-unary-ops */

/* eslint-disable-next-line jsx-a11y/anchor-has-content */

/* eslint-enable */

/* eslint-enable no-unused-vars */

/* eslint-enable prefer-template */

/* eslint-enable react/forbid-foreign-prop-types */

/* expect zlib header */

/* export default binding */

/* extra bits for each bit length code */

/* extra bits for each code or NULL */

/* extra bits for each distance code */

/* extra bits for each length code */

/* extra bits needed */

/* extract wrap request from windowBits parameter */

/* falls through */

/* favor or force Huffman coding*/

/* fill in remaining table entry if code is incomplete (guaranteed to have
   at most one remaining entry, since if the code is incomplete, the
   maximum code length that was allowed to get this far is one bit) */

/* fixed and dynamic code tables */

/* fixed block */

/* flush the current block */

/* for string and stored block copying */

/* for table and code decoding */

/* forget history */

/* from now on, all distances are divided by 128 */

/* generate N words at one time */

/* generate offsets into symbol table for each length for sorting */

/* generates a random number on (0,1)-real-interval */

/* generates a random number on [0,0x7fffffff]-interval */

/* generates a random number on [0,0xffffffff]-interval */

/* generates a random number on [0,1) with 53-bit resolution*/

/* generates a random number on [0,1)-real-interval */

/* generates a random number on [0,1]-real-interval */

/* get the state */

/* getContrastRatio */

/* getDynamicStyles */

/* getWindowMetadata */

/* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */

/* global window */

/* go to next symbol, update count, len */

/* guard */

/* guard already set */

/* gzip header */

/* gzip header information to write */

/* gzip header method and flags (0 if zlib) */

/* handle error breaks in while */

/* handleBreakpoints */

/* harmony default export */

/* harmony export */

/* harmony import */

/* hasCSSTOMSupport */

/* hash index of string to be inserted */

/* hash_size-1 */

/* head of hash chain */

/* head of the hash chain */

/* heap used to build the Huffman trees */

/* here min is 1 << curr */

/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */

/* i: waiting for type bits, including last-flag bit */

/* if dictionary would fill window, just replace the history */

/* if false, allow invalid distance too far */

/* if first time, transition to sub-tables */

/* if it hasn't been done already, allocate space for the window */

/* incomplete set */

/* increment past last table */

/* index bits for distcode */

/* index bits for lencode */

/* index in bl_order */

/* index of last bit length code of non zero freq */

/* init_key is the array for initializing keys */

/* initialize by an array with array-length */

/* initialize opts for loop */

/* initializes mt[N] with a seed */

/* input bit accumulator */

/* insert dictionary into window and hash */

/* istanbul ignore if */

/* istanbul ignore next */

/* iterates over all tree elements */

/* iterates over tree elements */

/* jshint maxdepth : false */

/* just in case */

/* k = 0 */

/* k = 1 */

/* k = 10 */

/* k = 11 */

/* k = 12 */

/* k = 13 */

/* k = 14 */

/* k = 15 */

/* k = 16 */

/* k = 17 */

/* k = 18 */

/* k = 2 */

/* k = 3 */

/* k = 4 */

/* k = 5 */

/* k = 6 */

/* k = 7 */

/* k = 8 */

/* k = 9 */

/* keep the nodes sorted by frequency */

/* key_length is its length */

/* largest code with non zero frequency */

/* last error message, NULL if no error */

/* lc is the unmatched char */

/* least significant r bits */

/* left son of k */

/* legacy: obj, showHidden, depth, colors*/

/* length base */

/* length code for each normalized match length (0 == MIN_MATCH) */

/* length of best match */

/* lighten */

/* literal */

/* literal or length of data to copy */

/* literal tree */

/* literal/length table */

/* log base 2 of requested window size */

/* log2(hash_size) */

/* log2(w_size)  (8..16) */

/* longest_match() sets match_start */

/* m = node of next least frequency */

/* mag01[x] = x * MATRIX_A  for x=0,1 */

/* mask for comparing low */

/* max bit length for the codes */

/* max distance in output */

/* max hash chain length */

/* max number of elements in the tree */

/* min repeat count */

/* minimum length is three */

/* module decorator */

/* most significant w-r bits */

/* move one leaf down the tree */

/* move one overflow item as its brother */

/* moved outside of genrand_int32() by jwatte 2010-11-17; generate less garbage */

/* mti==N+1 means mt[N] is not initialized */

/* n */

/* nb of bytes in the pending buffer */

/* new node being created */

/* next available space in codes[] */

/* next code value for each bit length */

/* next input byte */

/* next internal node of the tree */

/* next output byte should be put there */

/* next pending byte to output to the stream */

/* no symbols to code at all */

/* no symbols, but wait for decoding to report error */

/* node is 0 or 1 so it does not have extra bits */

/* not +255 as stated in appnote.txt */

/* not -3 as stated in appnote.txt */

/* not a leaf node */

/* not visible by applications */

/* number of bits in "in" */

/* number of bytes available at input */

/* number of code length code lengths */

/* number of code lengths in lens[] */

/* number of codes at each bit length for an optimal tree */

/* number of distance code lengths */

/* number of elements in hash table */

/* number of elements in the heap */

/* number of elements with bit length too large */

/* number of extra bits */

/* number of extra bits to send */

/* number of length code lengths */

/* number of string matches in current block */

/* number of valid bytes ahead in window */

/* o */

/* only MSBs of the array mt[].                        */

/* opt_len and static_len in bytes */

/* opt_len now includes the length of the tree representations, except
   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.
   */

/* output still pending */

/* over-subscribed */

/* permutation of code lengths */

/* point entry in root table to sub-table */

/* pointer back to this zlib stream */

/* previous match */

/* process all codes and make table entries */

/* protected copy of check value */

/* protected copy of output count */

/* provided dependency */

/* reexport */

/* remaining free space at output */

/* replicate for those indices with low len bits equal to huff */

/* rest from output */

/* return unused bytes (on entry, bits < 8, so in won't go too far back) */

/* root of the heap */

/* running index in l_buf */

/* save header structure */

/* save offset to next table */

/* see if copy from window */

/* send block type */

/* send the distance code */

/* send the length code */

/* set if current block must be flushed */

/* set if previous match exists */

/* set number of window bits, free window if different */

/* set return parameters */

/* set up for code type */

/* size of pending_buf */

/* skip check */

/* sliding window */

/* slight change for C++, 2004/2/26 */

/* some from end of window */

/* some from start of window */

/* some from window */

/* sort symbols by length, by symbol order within each length */

/* start of bytes to update crc */

/* start of matching string */

/* start of string to insert */

/* starting code */

/* starting code length */

/* starting code symbol */

/* starting table for distance codes */

/* starting table for length/literal codes */

/* static tree or NULL */

/* stored block */

/* string at strstart already in table */

/* strstart == 0 is possible when wraparound on 16-bit machine */

/* suppress zlib wrapper */

/* temporary storage for code lengths */

/* the array for the state vector  */

/* the dynamic tree */

/* this is IE 8. */

/* to support ill-conceived Java test suite */

/* toCssValue */

/* total number of bytes output so far */

/* total number of input bytes read so far */

/* tree[max_code+1].Len = -1; */

/* trigger new sub-table when len > root */

/* true if dictionary provided */

/* true if processing last block */

/* until 256-byte window bug fixed */

/* unused harmony export easing */

/* unused harmony export isBrowser */

/* unused harmony export isPlainObject */

/* unused harmony export teardown */

/* unused harmony exports SheetsManager, SheetsRegistry, createGenerateId, sheets */

/* unused harmony exports hexToRgb, rgbToHex, hslToRgb, decomposeColor, recomposeColor, getLuminance, emphasize, fade */

/* update state and reset the rest of it */

/* update state and return */

/* use constant limit because in js we should not preallocate memory */

/* use root table entries */

/* use the tail */

/* used by trees.c: */

/* valid bytes in the window */

/* value of flush param for previous deflate call */

/* very common case */

/* w_size - 1 */

/* we now have strstart >= MAX_DIST */

/* webpack/runtime/amd options */

/* when using zlib wrappers, compute Adler-32 for provided dictionary */

/* where in extra, name, or comment */

/* where to save gzip header information */

/* window size or zero if not using window */

/* window write index */

/* work area for code table building */

/* wrap around window */

/* write gzip wrapper instead */

/* write the trailer only once! */

/* zlib header max distance (INFLATE_STRICT) */

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */

/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */

/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */

/*#__PURE__*/

/*#ifdef NO_INIT_GLOBAL_POINTERS
  static_l_desc.static_tree = static_ltree;
  static_l_desc.extra_bits = extra_lbits;
  static_d_desc.static_tree = static_dtree;
  static_d_desc.extra_bits = extra_dbits;
  static_bl_desc.extra_bits = extra_blbits;
#endif*/

/**
     *  Counter object for CTR common mode of operation
     */

/**
     *  Mode Of Operation - Cipher Block Chaining (CBC)
     */

/**
     *  Mode Of Operation - Cipher Feedback (CFB)
     */

/**
     *  Mode Of Operation - Counter (CTR)
     */

/**
     *  Mode Of Operation - Electonic Codebook (ECB)
     */

/**
     *  Mode Of Operation - Output Feedback (OFB)
     */

/**
     *  Static methods to create Wallet instances.
     */

/**
     *  This constructor should not be called directly.
     *
     *  Please use:
     *   - fromMnemonic
     *   - fromSeed
     */

/**
     * Add a new item to the queue and ensure the highest priority element
     * is at the front of the queue.
     */

/**
     * Current highest index number.
     */

/**
     * Get selector string.
     */

/**
     * Return a random time zone
     * @method faker.address.timeZone
     */

/**
     * Return the highest priority element in the queue.
     */

/**
     * Returns a string, containing UTF-16 chars between 33 and 125 ('!' to '}')
     *
     *
     * @method faker.datatype.string
     * @param { number } length: length of generated string, default = 10, max length = 2^20
     */

/**
     * avatar
     *
     * @method faker.image.lorempicsum.avatar
     */

/**
     * boolean
     *
     * @method faker.datatype.boolean
     */

/**
     * genre
     *
     * @method faker.music.genre
     */

/**
     * hexaDecimal
     *
     * @method faker.datatype.hexaDecimal
     * @param {number} count defaults to 1
     */

/**
     * image
     *
     * @param {number} width
     * @param {number} height
     * @param {boolean} grayscale
     * @param {number} blur 1-10
     * @method faker.image.lorempicsum.image
     * @description search image from unsplash
     */

/**
     * imageBlurred
     *
     * @param {number} width
     * @param {number} height
     * @param {number} blur 1-10
     * @method faker.image.lorempicsum.imageBlurred
     * @description search blurred image from unsplash
     */

/**
     * imageGrayscaled
     *
     * @param {number} width
     * @param {number} height
     * @param {boolean} grayscale
     * @method faker.image.lorempicsum.imageGrayscaled
     * @description search grayscale image from unsplash
     */

/**
     * imageRandomSeeded
     *
     * @param {number} width
     * @param {number} height
     * @param {boolean} grayscale
     * @param {number} blur 1-10
     * @param {string} seed
     * @method faker.image.lorempicsum.imageRandomSeeded
     * @description search same random image from unsplash, based on a seed
     */

/**
     * imageUrl
     *
     * @param {number} width
     * @param {number} height
     * @param {boolean} grayscale
     * @param {number} blur 1-10
     * @param {string} seed
     * @method faker.image.lorempicsum.imageUrl
     */

/**
     * method returns a Date object using a random number of milliseconds since 1. Jan 1970 UTC
     * Caveat: seeding is not working
     *
     * @method faker.datatype.datetime
     * @param {mixed} options, pass min OR max as number of milliseconds since 1. Jan 1970 UTC
     */

/**
     * returns a single random floating-point number based on a max number or range
     *
     * @method faker.datatype.float
     * @param {mixed} options
     */

/**
     * returns a single random number based on a max number or range
     *
     * @method faker.datatype.number
     * @param {mixed} options {min, max, precision}
     */

/**
     * returns an array with values generated by faker.datatype.number and faker.datatype.string
     *
     * @method faker.datatype.array
     * @param { number } length of the returned array
     */

/**
     * returns json object with 7 pre-defined properties
     *
     * @method faker.datatype.json
     */

/**
     * uuid
     *
     * @method faker.datatype.uuid
     */

/**
     * vrm
     *
     * @method faker.vehicle.vrm
     */

/**
    * parse string patterns in a similar way to RegExp
    *
    * e.g. "#{3}test[1-5]" -> "###test4"
    *
    * @method faker.helpers.regexpStyleStringParse
    * @param {string} string
    */

/**
   *  direction
   *
   * @method faker.address.direction
   * @param {Boolean} useAbbr return direction abbreviation. defaults to false
   */

/**
   * @Deprecated
   * hexaDecimal
   *
   * @method faker.random.hexaDecimal
   * @param {number} count defaults to 1
   */

/**
   * @Deprecated
   * returns a single random floating-point number based on a max number or range
   *
   * @method faker.random.float
   * @param {mixed} options
   */

/**
   * @Deprecated
   * returns a single random number based on a max number or range
   *
   * @method faker.random.number
   * @param {mixed} options {min, max, precision}
   */

/**
   * @Deprecated
   * uuid
   *
   * @method faker.random.uuid
   */

/**
   * A very naive priority queue implementation.
   */

/**
   * Add a rule to the current stylesheet.
   * Will insert a rule also after the stylesheet has been rendered first time.
   */

/**
   * Apply rule to an element inline.
   */

/**
   * Attach renderable to the render tree.
   */

/**
   * Call `onChangeValue` hooks.
   */

/**
   * Call `onCreateRule` hooks and return an object if returned by a hook.
   */

/**
   * Call `onProcessRule` hooks.
   */

/**
   * Call `onProcessSheet` hooks.
   */

/**
   * Call `onProcessStyle` hooks.
   */

/**
   * Call `onUpdate` hooks.
   */

/**
   * Contains rules objects and allows adding/removing etc.
   * Is used for e.g. by `StyleSheet` or `ConditionalRule`.
   */

/**
   * Convert all attached sheets to a CSS string.
   */

/**
   * Convert rules to a CSS string.
   */

/**
   * Create a Style Sheet.
   */

/**
   * Create a rule without a Style Sheet.
   * [Deprecated] will be removed in the next major version.
   */

/**
   * Create and add rules.
   * Will render also after Style Sheet was rendered the first time.
   */

/**
   * Create and register rule, run plugins.
   */

/**
   * Create and register rule.
   *
   * Will not render after Style Sheet was rendered the first time.
   */

/**
   * Credit card CVV
   * @method faker.finance.creditCardCVV
  */

/**
   * Credit card number
   * @method faker.finance.creditCardNumber
   * @param {string} provider | scheme
  */

/**
   * Delete a rule by name.
   * Returns `true`: if rule has been deleted from the DOM.
   */

/**
   * Delete a rule.
   */

/**
   * Deploy pure CSS string to a renderable.
   */

/**
   * Detach the Style Sheet and remove it from the registry.
   */

/**
   * Execute plugins, update rule props.
   */

/**
   * Generate a new CSS rule and replace the existing one.
   *
   * Only used for some old browsers because they can't set a selector.
   */

/**
   * Generates a CSS string.
   */

/**
   * Generates a random localized city name. The format string can contain any
   * method provided by faker wrapped in `{{}}`, e.g. `{{name.firstName}}` in
   * order to build the city name.
   *
   * If no format string is provided one of the following is randomly used:
   *
   * * `{{address.cityPrefix}} {{name.firstName}}{{address.citySuffix}}`
   * * `{{address.cityPrefix}} {{name.firstName}}`
   * * `{{name.firstName}}{{address.citySuffix}}`
   * * `{{name.lastName}}{{address.citySuffix}}`
   * * `{{address.cityName}}` when city name is available
   *
   * @method faker.address.city
   * @param {String} format
   */

/**
   * Generates random zipcode from format. If format is not specified, the
   * locale's zip format is used.
   *
   * @method faker.address.zipCode
   * @param {String} format
   */

/**
   * Generates random zipcode from state abbreviation. If state abbreviation is
   * not specified, a random zip code is generated according to the locale's zip format.
   * Only works for locales with postcode_by_state definition. If a locale does not
   * have a postcode_by_state definition, a random zip code is generated according
   * to the locale's zip format.
   *
   * @method faker.address.zipCodeByState
   * @param {String} state
   */

/**
   * Generator method for combining faker methods based on string input
   *
   * __Example:__
   *
   * ```
   * console.log(faker.fake('{{name.lastName}}, {{name.firstName}} {{name.suffix}}'));
   * //outputs: "Marks, Dean Sr."
   * ```
   *
   * This will interpolate the format string with the value of methods
   * [name.lastName]{@link faker.name.lastName}, [name.firstName]{@link faker.name.firstName},
   * and [name.suffix]{@link faker.name.suffix}
   *
   * @method faker.fake
   * @param {string} str
   */

/**
   * Get a rule by name.
   */

/**
   * Get a rule.
   */

/**
   * Get all rules elements.
   */

/**
   * Get index of a CSS Rule.
   */

/**
   * Get index of a rule.
   */

/**
   * Get or set a style property.
   */

/**
   * Inject CSS string into element.
   */

/**
   * Insert RuleList into an element.
   */

/**
   * Insert a rule into element.
   */

/**
   * Insert rule into the StyleSheet
   */

/**
   * Insert style element into render tree.
   */

/**
   * Prepares various options, applies plugins.
   * Should not be used twice on the same instance, because there is no plugins
   * deduplication logic.
   */

/**
   * Register a Style Sheet.
   */

/**
   * Register a plugin.
   */

/**
   * Register a rule in `.map`, `.classes` and `.keyframes` maps.
   */

/**
   * Register plugin. Passed function will be invoked with a rule instance.
   */

/**
   * Remove a Style Sheet.
   */

/**
   * Remove renderable from render tree.
   */

/**
   * Remove style element from render tree.
   */

/**
   * Reset the registry.
   */

/**
   * Return a random localized city prefix
   * @method faker.address.cityPrefix
   */

/**
   * Return a random localized city suffix
   *
   * @method faker.address.citySuffix
   */

/**
   * Returns JSON representation of the rule.
   * Fallbacks are not supported.
   * Useful for inline styles.
   */

/**
   * Returns a random city name
   * 
   * @method faker.address.cityName
   */

/**
   * Returns a random localized street address
   *
   * @method faker.address.streetAddress
   * @param {Boolean} useFullAddress
   */

/**
   * Returns a random localized street name
   *
   * @method faker.address.streetName
   */

/**
   * Run `onProcessRule()` plugins on every rule.
   */

/**
   * Set selector string.
   * Attention: use this with caution. Most browsers didn't implement
   * selectorText setter, so this may result in rerendering of entire Style Sheet.
   */

/**
   * This will create a new function if the ref props change and are defined.
   * This means react will call the old forkRef with `null` and the new forkRef
   * with the ref. Cleanup naturally emerges from this behavior
   */

/**
   * Unregister a rule.
   */

/**
   * Update the function values with a new data.
   */

/**
   * Updates a single rule.
   */

/**
   * abbreviation
   *
   * @method faker.hacker.abbreviation
   */

/**
   * abstract
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.abstract
   */

/**
   * abstract
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.lorempixel.abstract
   */

/**
   * account
   *
   * @method faker.finance.account
   * @param {number} length
   */

/**
   * accountName
   *
   * @method faker.finance.accountName
   */

/**
   * adjective
   *
   * @method faker.hacker.adjective
   */

/**
   * alpha. returns lower/upper alpha characters based count and upcase options
   *
   * @method faker.random.alpha
   * @param {mixed} options // defaults to { count: 1, upcase: false, bannedChars: [] }
   */

/**
   * alphaNumeric
   *
   * @method faker.random.alphaNumeric
   * @param {number} count defaults to 1
   * {mixed} options // defaults to { bannedChars: [] }
   * options.bannedChars - array of characters which should be banned in new string
   */

/**
   * amount
   *
   * @method faker.finance.amount
   * @param {number} min
   * @param {number} max
   * @param {number} dec
   * @param {string} symbol
   *
   * @return {string}
   */

/**
   * animals
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.animals
   */

/**
   * animals
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.lorempixel.animals
   */

/**
   * avatar
   *
   * @method faker.image.avatar
   */

/**
   * avatar
   *
   * @method faker.image.lorempixel.avatar
   */

/**
   * avatar
   *
   * @method faker.image.unsplash.avatar
   */

/**
   * avatar
   *
   * @method faker.internet.avatar
   */

/**
   * backward-compatibility
   *
   * @method faker.helpers.randomize
   * @param {array} array
   */

/**
   * bear  
   *
   * @method faker.animal.bear
   */

/**
   * between
   *
   * @method faker.date.between
   * @param {date} from
   * @param {date} to
   */

/**
   * betweens
   *
   * @method faker.date.between
   * @param {date} from
   * @param {date} to
   */

/**
   * bic
   *
   * @method  faker.finance.bic
   */

/**
   * bird
   *
   * @method faker.animal.bird
   */

/**
   * bitcoinAddress
   *
   * @method  faker.finance.bitcoinAddress
   */

/**
   * boolean
   *
   * @method faker.random.boolean
   */

/**
   * branch
   *
   * @method faker.git.branch
   */

/**
   * bs
   *
   * @method faker.company.bs
   */

/**
   * bsAdjective
   *
   * @method faker.company.bsAdjective
   */

/**
   * bsBuzz
   *
   * @method faker.company.bsBuzz
   */

/**
   * bsNoun
   *
   * @method faker.company.bsNoun
   */

/**
   * buildings
   *
   * @param {number} width
   * @param {number} height
   * @param {string} keyword
   * @method faker.image.unsplash.buildings
   */

/**
   * business
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.business
   */

/**
   * business
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.lorempixel.business
   */

/**
   * cardinal direction
   *
   * @method faker.address.cardinalDirection
   * @param {Boolean} useAbbr return direction abbreviation. defaults to false
   */

/**
   * cat
   *
   * @method faker.animal.cat
   */

/**
   * catchPhrase
   *
   * @method faker.company.catchPhrase
   */

/**
   * catchPhraseAdjective
   *
   * @method faker.company.catchPhraseAdjective
   */

/**
   * catchPhraseDescriptor
   *
   * @method faker.company.catchPhraseDescriptor
   */

/**
   * catchPhraseNoun
   *
   * @method faker.company.catchPhraseNoun
   */

/**
   * cats
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.cats
   */

/**
   * cats
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.lorempixel.cats
   */

/**
   * cetacean  
   *
   * @method faker.animal.cetacean
   */

/**
   * city
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.city
   */

/**
   * city
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.lorempixel.city
   */

/**
   * collation
   *
   * @method faker.database.collation
   */

/**
   * color
   *
   * @method faker.commerce.color
   */

/**
   * color
   *
   * @method faker.internet.color
   * @param {number} baseRed255
   * @param {number} baseGreen255
   * @param {number} baseBlue255
   */

/**
   * color
   *
   * @method faker.vehicle.color
   */

/**
   * column
   *
   * @method faker.database.column
   */

/**
   * commitEntry
   *
   * @method faker.git.commitEntry
   * @param {object} options
   */

/**
   * commitMessage
   *
   * @method faker.git.commitMessage
   */

/**
   * commitSha
   *
   * @method faker.git.commitSha
   */

/**
   * commonFileName
   *
   * @method faker.system.commonFileName
   * @param {string} ext
   */

/**
   * companyName
   *
   * @method faker.company.companyName
   * @param {string} format
   */

/**
   * companySuffix
   *
   * @method faker.company.companySuffix
   */

/**
   * contextualCard
   *
   * @method faker.helpers.contextualCard
   */

/**
   * country
   *
   * @method faker.address.country
   */

/**
   * countryCode
   *
   * @method faker.address.countryCode
   * @param {string} alphaCode default alpha-2
   */

/**
   * county
   *
   * @method faker.address.county
   */

/**
   * cow 
   *
   * @method faker.animal.cow
   */

/**
   * createCard
   *
   * @method faker.helpers.createCard
   */

/**
   * createTransaction
   *
   * @method faker.helpers.createTransaction
   */

/**
   * crocodilia
   *
   * @method faker.animal.crocodilia
   */

/**
   * currencyCode
   *
   * @method faker.finance.currencyCode
   */

/**
   * currencyName
   *
   * @method faker.finance.currencyName
   */

/**
   * currencySymbol
   *
   * @method faker.finance.currencySymbol
   */

/**
   * dataUri
   *
   * @param {number} width
   * @param {number} height
   * @param {string} color
   * @method faker.image.dataUri
   */

/**
   * department
   *
   * @method faker.commerce.department
   */

/**
   * description
   *
   * @method  faker.finance.transactionDescription
   */

/**
   * dog
   *
   * @method faker.animal.dog
   */

/**
   * domainName
   *
   * @method faker.internet.domainName
   */

/**
   * domainSuffix
   *
   * @method faker.internet.domainSuffix
   */

/**
   * domainWord
   *
   * @method faker.internet.domainWord
   */

/**
   * email
   *
   * @method faker.internet.email
   * @param {string} firstName
   * @param {string} lastName
   * @param {string} provider
   */

/**
   * engine
   *
   * @method faker.database.engine
   */

/**
   * ethereumAddress
   *
   * @method  faker.finance.ethereumAddress
   */

/**
   * exampleEmail
   *
   * @method faker.internet.exampleEmail
   * @param {string} firstName
   * @param {string} lastName
   */

/**
   * fashion
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.fashion
   */

/**
   * fashion
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.lorempixel.fashion
   */

/**
   * fileExt
   *
   * @method faker.system.fileExt
   * @param {string} mimeType
   */

/**
   * findName
   *
   * @method findName
   * @param {string} firstName
   * @param {string} lastName
   * @param {mixed} gender
   * @memberof faker.name
   */

/**
   * firstName
   *
   * @method firstName
   * @param {mixed} gender
   * @memberof faker.name
   */

/**
   * fish
   *
   * @method faker.animal.fish
   */

/**
   * food
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.food
   */

/**
   * food
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.lorempixel.food
   */

/**
   * food
   *
   * @param {number} width
   * @param {number} height
   * @param {string} keyword
   * @method faker.image.unsplash.food
   */

/**
   * fuel
   *
   * @method faker.vehicle.fuel
   */

/**
   * future
   *
   * @method faker.date.future
   * @param {number} years
   * @param {date} refDate
   */

/**
   * gender
   *
   * @method gender
   * @memberof faker.name
   */

/**
   * generates a file name
   *
   * @method faker.system.fileName
   */

/**
   * generates a space separated list of words
   *
   * @method faker.lorem.words
   * @param {number} num number of words, defaults to 3
   */

/**
   * generates a word of a specified length
   *
   * @method faker.lorem.word
   * @param {number} length length of the word that should be returned. Defaults to a random length
   */

/**
   * horse 
   *
   * @method faker.animal.horse
   */

/**
   * iban
   *
   * @param {boolean} [formatted=false] - Return a formatted version of the generated IBAN.
   * @param {string} [countryCode] - The country code from which you want to generate an IBAN, if none is provided a random country will be used.
   * @throws Will throw an error if the passed country code is not supported.
   *
   * @method  faker.finance.iban
   */

/**
   * image
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.image
   */

/**
   * image
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.lorempixel.image
   */

/**
   * image
   *
   * @param {number} width
   * @param {number} height
   * @param {string} keyword
   * @method faker.image.unsplash.image
   * @description search image from unsplash
   */

/**
   * imageUrl
   *
   * @param {number} width
   * @param {number} height
   * @param {string} category
   * @param {boolean} randomize
   * @method faker.image.imageUrl
   */

/**
   * imageUrl
   *
   * @param {number} width
   * @param {number} height
   * @param {string} category
   * @param {boolean} randomize
   * @method faker.image.lorempixel.imageUrl
   */

/**
   * imageUrl
   *
   * @param {number} width
   * @param {number} height
   * @param {string} category
   * @param {string} keyword
   * @method faker.image.unsplash.imageUrl
   */

/**
   * ingverb
   *
   * @method faker.hacker.ingverb
   */

/**
   * insect  
   *
   * @method faker.animal.insect
   */

/**
   * ip
   *
   * @method faker.internet.ip
   */

/**
   * ipv6
   *
   * @method faker.internet.ipv6
   */

/**
   * jobArea
   *
   * @method jobArea
   * @memberof faker.name
   */

/**
   * jobDescriptor
   *
   * @method jobDescriptor
   * @memberof faker.name
   */

/**
   * jobTitle
   *
   * @method jobTitle
   * @memberof faker.name
   */

/**
   * jobType
   *
   * @method jobType
   * @memberof faker.name
   */

/**
   * lastName
   *
   * @method lastName
   * @param {mixed} gender
   * @memberof faker.name
   */

/**
   * latitude
   *
   * @method faker.address.latitude
   * @param {Double} max default is 90
   * @param {Double} min default is -90
   * @param {number} precision default is 4
   */

/**
   * lion  
   *
   * @method faker.animal.lion
   */

/**
   * locale
   *
   * @method faker.random.image
   */

/**
   * locale
   *
   * @method faker.random.locale
   */

/**
   * longitude
   *
   * @method faker.address.longitude
   * @param {Double} max default is 180
   * @param {Double} min default is -180
   * @param {number} precision default is 4
   */

/**
   * mac
   *
   * @method faker.internet.mac
   * @param {string} sep
   */

/**
   * manufacturer
   *
   * @method faker.vehicle.manufacturer
   */

/**
   * mask
   *
   * @method faker.finance.mask
   * @param {number} length
   * @param {boolean} parens
   * @param {boolean} ellipsis
   */

/**
   * method
   *
   * @method faker.internet.httpMethod
   */

/**
   * middleName
   *
   * @method middleName
   * @param {mixed} gender
   * @memberof faker.name
   */

/**
   * mimeType
   *
   * @method faker.system.mimeType
   */

/**
   * model
   *
   * @method faker.vehicle.model
   */

/**
   * month
   *
   * @method faker.date.month
   * @param {object} options
   */

/**
   * mustache
   *
   * @method faker.helpers.mustache
   * @param {string} str
   * @param {object} data
   */

/**
   * nature
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.lorempixel.nature
   */

/**
   * nature
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.nature
   */

/**
   * nature
   *
   * @param {number} width
   * @param {number} height
   * @param {string} keyword
   * @method faker.image.unsplash.nature
   */

/**
   * nightlife
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.lorempixel.nightlife
   */

/**
   * nightlife
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.nightlife
   */

/**
   * noun
   *
   * @method faker.hacker.noun
   */

/**
   * objects
   *
   * @param {number} width
   * @param {number} height
   * @param {string} keyword
   * @method faker.image.unsplash.objects
   */

/**
   * ordinal direction
   *
   * @method faker.address.ordinalDirection
   * @param {Boolean} useAbbr return direction abbreviation. defaults to false
   */

/**
   * paragraph
   *
   * @method faker.lorem.paragraph
   * @param {number} sentenceCount defaults to 3
   */

/**
   * paragraphs
   *
   * @method faker.lorem.paragraphs
   * @param {number} paragraphCount defaults to 3
   * @param {string} separator defaults to `'\n \r'`
   */

/**
   * parses string for a symbol and replace it with a random number from 1-10
   *
   * @method faker.helpers.replaceSymbolWithNumber
   * @param {string} string
   * @param {string} symbol defaults to `"#"`
   */

/**
   * parses string for symbols (numbers or letters) and replaces them appropriately (# will be replaced with number,
   * ? with letter and * will be replaced with number or letter)
   *
   * @method faker.helpers.replaceSymbols
   * @param {string} string
   */

/**
   * password
   *
   * @method faker.internet.password
   * @param {number} len
   * @param {boolean} memorable
   * @param {string} pattern
   * @param {string} prefix
   */

/**
   * past
   *
   * @method faker.date.past
   * @param {number} years
   * @param {date} refDate
   */

/**
   * people
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.lorempixel.people
   */

/**
   * people
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.people
   */

/**
   * people
   *
   * @param {number} width
   * @param {number} height
   * @param {string} keyword
   * @method faker.image.unsplash.people
   */

/**
   * phoneFormats
   *
   * @method faker.phone.phoneFormats
   */

/**
   * phoneNumber
   *
   * @method faker.phone.phoneNumber
   * @param {string} format
   * @memberOf faker.phone
   */

/**
   * phoneNumberFormat
   *
   * @method faker.phone.phoneFormatsArrayIndex
   * @param phoneFormatsArrayIndex
   * @memberOf faker.phone
   */

/**
   * phrase
   *
   * @method faker.hacker.phrase
   */

/**
   * port
   * 
   * @method faker.internet.port
   */

/**
   * prefix
   *
   * @method prefix
   * @param {mixed} gender
   * @memberof faker.name
   */

/**
   * price
   *
   * @method faker.commerce.price
   * @param {number} min
   * @param {number} max
   * @param {number} dec
   * @param {string} symbol
   *
   * @return {string}
   */

/**
   * product
   *
   * @method faker.commerce.product
   */

/**
   * productAdjective
   *
   * @method faker.commerce.productAdjective
   */

/**
   * productDescription
   *
   * @method faker.commerce.productDescription
   */

/**
   * productMaterial
   *
   * @method faker.commerce.productMaterial
   */

/**
   * productName
   *
   * @method faker.commerce.productName
   */

/**
   * protocol
   *
   * @method faker.internet.protocol
   */

/**
   * rabbit 
   *
   * @method faker.animal.rabbit
   */

/**
   * randomWords
   *
   * @method faker.random.words
   * @param {number} count defaults to a random value between 1 and 3
   */

/**
   * recent
   *
   * @method faker.date.recent
   * @param {number} days
   * @param {date} refDate
   */

/**
   * recent
   *
   * @method faker.time.recent
   * @param {string} outputType - 'abbr' || 'wide' || 'unix' (default choice)
   */

/**
   * replace symbols in a credit card schems including Luhn checksum
   *
   * @method faker.helpers.replaceCreditCardSymbols
   * @param {string} string
   * @param {string} symbol
   */

/**
   * returns a commonly used file extension
   *
   * @method faker.system.commonFileExt
   */

/**
   * returns a commonly used file type
   *
   * @method faker.system.commonFileType
   */

/**
   * returns any file type available as mime-type
   *
   * @method faker.system.fileType
   */

/**
   * returns directory path
   *
   * @method faker.system.directoryPath
   */

/**
   * returns file path
   *
   * @method faker.system.filePath
   */

/**
   * returns lines of lorem separated by `'\n'`
   *
   * @method faker.lorem.lines
   * @param {number} lineCount defaults to a random number between 1 and 5
   */

/**
   * returns random text based on a random lorem method
   *
   * @method faker.lorem.text
   * @param {number} times
   */

/**
   * routingNumber
   *
   * @method faker.finance.routingNumber
   */

/**
   * secondaryAddress
   *
   * @method faker.address.secondaryAddress
   */

/**
   * semver
   *
   * @method faker.system.semver
   */

/**
   * sentence
   *
   * @method faker.lorem.sentence
   * @param {number} wordCount defaults to a random number between 3 and 10
   * @param {number} range
   */

/**
   * sentences
   *
   * @method faker.lorem.sentences
   * @param {number} sentenceCount defautls to a random number between 2 and 6
   * @param {string} separator defaults to `' '`
   */

/**
   * shortSha
   *
   * @method faker.git.shortSha
   */

/**
   * slug
   *
   * @method faker.lorem.slug
   * @param {number} wordCount number of words, defaults to 3
   */

/**
   * slugifies string
   *
   * @method faker.helpers.slugify
   * @param {string} string
   */

/**
   * snake  
   *
   * @method faker.animal.snake
   */

/**
   * soon
   *
   * @method faker.date.soon
   * @param {number} days
   * @param {date} refDate
   */

/**
   * sports
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.lorempixel.sports
   */

/**
   * sports
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.sports
   */

/**
   * state
   *
   * @method faker.address.state
   * @param {Boolean} useAbbr
   */

/**
   * stateAbbr
   *
   * @method faker.address.stateAbbr
   */

/**
   * streetPrefix
   *
   * @method faker.address.streetPrefix
   */

/**
   * streetSuffix
   *
   * @method faker.address.streetSuffix
   */

/**
   * suffix
   *
   * @method suffix
   * @memberof faker.name
   */

/**
   * suffixes
   *
   * @method faker.company.suffixes
   */

/**
   * takes an array and randomizes it in place then returns it
   * 
   * uses the modern version of the Fisher–Yates algorithm
   *
   * @method faker.helpers.shuffle
   * @param {array} o
   */

/**
   * takes an array and returns a random element of the array
   *
   * @method faker.random.arrayElement
   * @param {array} array
   */

/**
   * takes an array and returns a subset with random elements of the array
   *
   * @method faker.random.arrayElements
   * @param {array} array
   * @param {number} count number of elements to pick
   */

/**
   * takes an object and returns a random key or value
   *
   * @method faker.random.objectElement
   * @param {object} object
   * @param {mixed} field
   */

/**
   * technics
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.lorempixel.technics
   */

/**
   * technics
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.technics
   */

/**
   * technology
   *
   * @param {number} width
   * @param {number} height
   * @param {string} keyword
   * @method faker.image.unsplash.technology
   */

/**
   * title
   *
   * @method title
   * @memberof faker.name
   */

/**
   * transactionType
   *
   * @method faker.finance.transactionType
   */

/**
   * transport
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.lorempixel.transport
   */

/**
   * transport
   *
   * @param {number} width
   * @param {number} height
   * @param {boolean} randomize
   * @method faker.image.transport
   */

/**
   * type
   *
   * @method faker.database.type
   */

/**
   * type
   *
   * @method faker.vehicle.type
   */

/**
   * type 
   *
   * @method faker.animal.type
   */

/**
   * unique
   *
   * @method unique
   */

/**
   * url
   *
   * @method faker.internet.url
   */

/**
   * userAgent
   *
   * @method faker.internet.userAgent
   */

/**
   * userCard
   *
   * @method faker.helpers.userCard
   */

/**
   * userName
   *
   * @method faker.internet.userName
   * @param {string} firstName
   * @param {string} lastName
   */

/**
   * vehicle
   *
   * @method faker.vehicle.vehicle
   */

/**
   * verb
   *
   * @method faker.hacker.verb
   */

/**
   * vin
   *
   * @method faker.vehicle.vin
   */

/**
   * weekday
   *
   * @param {object} options
   * @method faker.date.weekday
   */

/**
   * word
   *
   * @method faker.random.word
   * @param {string} type
   */

/**
  * bicycle
  *
  * @method faker.vehicle.bicycle
  */

/**
 *
 * @deprecated
 * The css style function is deprecated. Use the `styleFunctionSx` instead.
 */

/**
 *
 * @namespace faker
 */

/**
 *
 * @namespace faker.address
 */

/**
 *
 * @namespace faker.datatype
 */

/**
 *
 * @namespace faker.internet
 */

/**
 *
 * @namespace faker.name
 */

/**
 *
 * @namespace faker.random
 */

/**
 *
 * @namespace faker.system
 */

/**
 *
 * @namespace faker.unique
 */

/**
 *  BigNumber
 *
 *  A wrapper around the BN.js object. We use the BN.js library
 *  because it is used by elliptic, so it is required regardless.
 *
 */

/**
 * @ignore - do not document.
 *
 * Proper state management for containers and the modals in those containers.
 * Simplified, but inspired by react-overlay's ModalManager class.
 * Used by the Modal to ensure proper styling of containers.
 */

/**
 * @ignore - do not document.
 */

/**
 * @ignore - internal component.
 */

/**
 * @param {string|Array} props
 * @param {object} param
 * @param {string} param.prop
 * @param {number} param.duration
 * @param {string} param.easing
 * @param {number} param.delay
 */

/**
 * @see @link{https://material.io/design/typography/the-type-system.html}
 * @see @link{https://material.io/design/typography/understanding-typography.html}
 */

/**
 * A <Link> wrapper that knows if it's "active" or not.
 */

/**
 * A better abstraction over CSS.
 *
 * @copyright Oleg Isonen (Slobodskoi) / Isonen 2014-present
 * @website https://github.com/cssinjs/jss
 * @license MIT
 */

/**
 * A public higher-order component to access the imperative API
 */

/**
 * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.
 */

/**
 * Add alignment patterns bits to matrix
 *
 * Note: this function must be called after {@link setupTimingPattern}
 *
 * @param  {BitMatrix} matrix  Modules matrix
 * @param  {Number}    version QR Code version
 */

/**
 * Add encoded data bits to matrix
 *
 * @param  {BitMatrix} matrix Modules matrix
 * @param  {Buffer}    data   Data codewords
 */

/**
 * Add finder patterns bits to matrix
 *
 * @param  {BitMatrix} matrix  Modules matrix
 * @param  {Number}    version QR Code version
 */

/**
 * Add format info bits to matrix
 *
 * @param  {BitMatrix} matrix               Modules matrix
 * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level
 * @param  {Number}    maskPattern          Mask pattern reference value
 */

/**
 * Add timing pattern bits to matrix
 *
 * Note: this function must be called before {@link setupAlignmentPattern}
 *
 * @param  {BitMatrix} matrix Modules matrix
 */

/**
 * Add unit to numeric values.
 */

/**
 * Add vendor prefix to a property name when needed.
 *
 * @api public
 */

/**
 * Add version info bits to matrix
 *
 * @param  {BitMatrix} matrix  Modules matrix
 * @param  {Number}    version QR Code version
 */

/**
 * Alignment pattern are fixed reference pattern in defined positions
 * in a matrix symbology, which enables the decode software to re-synchronise
 * the coordinate mapping of the image modules in the event of moderate amounts
 * of distortion of the image.
 *
 * Alignment patterns are present only in QR Code symbols of version 2 or larger
 * and their number depends on the symbol version.
 */

/**
 * Allow camel cased property names by converting them back to dasherized.
 *
 * @param {Rule} rule
 */

/**
 * Alphanumeric mode encodes data from a set of 45 characters,
 * i.e. 10 numeric digits (0 - 9),
 *      26 alphabetic characters (A - Z),
 *   and 9 symbols (SP, $, %, *, +, -, ., /, :).
 * Normally, two input characters are represented by 11 bits.
 *
 * @type {Object}
 */

/**
 * Applies xor operator at specified location
 * (used during masking process)
 *
 * @param {Number}  row
 * @param {Number}  col
 * @param {Boolean} value
 */

/**
 * Apply a mask pattern to a BitMatrix
 *
 * @param  {Number}    pattern Pattern reference number
 * @param  {BitMatrix} data    BitMatrix data
 */

/**
 * Array of characters available in alphanumeric mode
 *
 * As per QR Code specification, to each character
 * is assigned a value from 0 to 44 which in this case coincides
 * with the array index
 *
 * @type {Array}
 */

/**
 * Attach the keys as a property of the regexp.
 *
 * @param  {!RegExp} re
 * @param  {Array}   keys
 * @return {!RegExp}
 */

/**
 * Build QR Code symbol
 *
 * @param  {String} data                 Input string
 * @param  {Number} version              QR Code version
 * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level
 * @param  {MaskPattern} maskPattern     Mask pattern
 * @return {Object}                      Object containing symbol data
 */

/**
 * Builds a graph from a list of nodes.
 * All segments in each node group will be connected with all the segments of
 * the next group and so on.
 *
 * At each connection will be assigned a weight depending on the
 * segment's byte length.
 *
 * @param  {Array} nodes    Array of object with segments data
 * @param  {Number} version QR Code version
 * @return {Object}         Graph of all possible segments
 */

/**
 * Builds a list of segments from an array.
 * Array can contain Strings or Objects with segment's info.
 *
 * For each item which is a string, will be generated a segment with the given
 * string and the more appropriate encoding mode.
 *
 * For each item which is an object, will be generated a segment with the given
 * data and mode.
 * Objects must contain at least the property "data".
 * If property "mode" is not present, the more suitable mode will be used.
 *
 * @param  {Array} array Array of objects with segments data
 * @return {Array}       Array of Segments
 */

/**
 * Builds a segment from a specified data and mode.
 * If a mode is not specified, the more suitable will be used.
 *
 * @param  {String} data             Input data
 * @param  {Mode | String} modesHint Data mode
 * @return {Segment}                 Segment
 */

/**
 * Builds an optimized sequence of segments from a string,
 * which will produce the shortest possible bitstream.
 *
 * @param  {String} data    Input string
 * @param  {Number} version QR Code version
 * @return {Array}          Array of segments
 */

/**
 * Calculate proportion of dark modules in entire symbol
 *
 * Points: N4 * k
 *
 * k is the rating of the deviation of the proportion of dark modules
 * in the symbol from 50% in steps of 5%
 */

/**
 * Calculate the remainder of polynomials division
 *
 * @param  {Buffer} divident Polynomial
 * @param  {Buffer} divisor  Polynomial
 * @return {Buffer}          Remainder
 */

/**
 * Calculate the row/column coordinates of the center module of each alignment pattern
 * for the specified QR Code version.
 *
 * The alignment patterns are positioned symmetrically on either side of the diagonal
 * running from the top left corner of the symbol to the bottom right corner.
 *
 * Since positions are simmetrical only half of the coordinates are returned.
 * Each item of the array will represent in turn the x and y coordinate.
 * @see {@link getPositions}
 *
 * @param  {Number} version QR Code version
 * @return {Array}          Array of coordinate
 */

/**
 * Calculates the contrast ratio between two colors.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 *
 * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} A contrast ratio value in the range 0 - 21.
 */

/**
 * Check if QR Code version is valid
 *
 * @param  {Number}  version QR Code version
 * @return {Boolean}         true if valid version, false otherwise
 */

/**
 * Check if bit at specified location is reserved
 *
 * @param {Number}   row
 * @param {Number}   col
 * @return {Boolean}
 */

/**
 * Check if input param is a valid mode object
 *
 * @param   {Mode}    mode Mode object
 * @returns {Boolean} True if valid mode, false otherwise
 */

/**
 * Check if mask pattern value is valid
 *
 * @param  {Number}  mask    Mask pattern
 * @return {Boolean}         true if valid, false otherwise
 */

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

/**
 * Clones the object and adds a camel cased property version.
 */

/**
 * Code refactored from Mozilla Developer Network:
 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign
 */

/**
 * Compile a string to a template function for the path.
 *
 * @param  {string}             str
 * @param  {Object=}            options
 * @return {!function(Object=, Object=)}
 */

/**
 * Convert a typed array to a Buffer without a copy
 *
 * Author:   Feross Aboukhadijeh <https://feross.org>
 * License:  MIT
 *
 * `npm install typedarray-to-buffer`
 */

/**
 * Convert camel cased property names to dash separated.
 *
 * @param {Object} style
 * @return {Object}
 */

/**
 * Convert dash separated strings to camel-cased.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */

/**
 * Convert dash separated strings to pascal cased.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */

/**
 * Convert nested rules to separate, remove them from original styles.
 *
 * @param {Rule} rule
 * @api public
 */

/**
 * Converts a Rule to CSS string.
 */

/**
 * Converts a color from CSS hex format to CSS rgb format.
 *
 * @param {string} color - Hex color, i.e. #nnn or #nnnnnn
 * @returns {string} A CSS rgb color string
 */

/**
 * Converts a color from hsl format to rgb format.
 *
 * @param {string} color - HSL color values
 * @returns {string} rgb color values
 */

/**
 * Converts a color object with type and values to a string.
 *
 * @param {object} color - Decomposed color
 * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla'
 * @param {array} color.values - [n,n,n] or [n,n,n,n]
 * @returns {string} A CSS color string
 */

/**
 * Converts array values to string.
 *
 * `margin: [['5px', '10px']]` > `margin: 5px 10px;`
 * `border: ['1px', '2px']` > `border: 1px, 2px;`
 * `margin: [['5px', '10px'], '!important']` > `margin: 5px 10px !important;`
 * `color: ['red', !important]` > `color: red !important;`
 */

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Copyright 2015, Yahoo! Inc.
 * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
 */

/**
 * Create a path regexp from string input.
 *
 * @param  {string}  path
 * @param  {!Array}  keys
 * @param  {!Object} options
 * @return {!RegExp}
 */

/**
 * Create a rule instance.
 */

/**
 * Create encoded codewords from data input
 *
 * @param  {Number}   version              QR Code version
 * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level
 * @param  {ByteData} data                 Data input
 * @return {Buffer}                        Buffer containing encoded codewords
 */

/**
 * Creates a history object that stores locations in memory.
 */

/**
 * Creates a history object that uses the HTML5 history API including
 * pushState, replaceState, and the popstate event.
 */

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/

/**
 * Darken or lighten a color, depending on its luminance.
 * Light colors are darkened, dark colors are lightened.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient=0.15 - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

/**
 * Darkens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

/**
 * Data mask pattern reference
 * @type {Object}
 */

/**
 * Echos the value of a value. Trys to print the value out
 * in the best way possible given the different types.
 *
 * @param {Object} obj The object to print out.
 * @param {Object} opts Optional options object that alters the output.
 */

/**
 * Emulate Node's zlib C++ layer for use by the JS layer in index.js
 */

/**
 * Encode data with Bose-Chaudhuri-Hocquenghem
 *
 * @param  {Number} data Value to encode
 * @return {Number}      Encoded value
 */

/**
 * Encode input data with Reed-Solomon and return codewords with
 * relative error correction bits
 *
 * @param  {BitBuffer} bitBuffer            Data to encode
 * @param  {Number}    version              QR Code version
 * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level
 * @return {Buffer}                         Buffer containing encoded codewords
 */

/**
 * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.
 *
 * @param  {string}
 * @return {string}
 */

/**
 * Encodes a chunk of data
 *
 * @param  {Buffer} data Buffer containing input data
 * @return {Buffer}      Buffer containing encoded data
 */

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */

/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */

/**
 * Escape a regular expression string.
 *
 * @param  {string} str
 * @return {string}
 */

/**
 * Escape the capturing group by escaping special characters and meaning.
 *
 * @param  {string} group
 * @return {string}
 */

/**
 * Export a constant indicating if this browser has CSSTOM support.
 * https://developers.google.com/web/updates/2018/03/cssom
 */

/**
 * Expose `pathToRegexp`.
 */

/**
 * Expose a function for taking tokens and returning a RegExp.
 *
 * @param  {!Array}          tokens
 * @param  {(Array|Object)=} keys
 * @param  {Object=}         options
 * @return {!RegExp}
 */

/**
 * Expose a method for transforming tokens into the path function.
 */

/**
 * Extracts a series of segments with the appropriate
 * modes from a string
 *
 * @param  {String} dataStr Input string
 * @return {Array}          Array of object with segments data
 */

/**
 * Extracts a styles object with only props that contain function values.
 */

/**
 * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,
 * preceded or followed by light area 4 modules wide
 *
 * Points: N3 * number of pattern found
 */

/**
 * Find 2x2 blocks with the same color and assign a penalty value
 *
 * Points: N2 * (m - 1) * (n - 1)
 */

/**
 * Find a comment with "jss" inside.
 */

/**
 * Find a node before which we can insert the sheet.
 */

/**
 * Find attached sheet with an index higher than the passed one.
 */

/**
 * Find attached sheet with the highest index.
 */

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/

/**
 * Generate an irreducible generator polynomial of specified degree
 * (used by Reed-Solomon encoder)
 *
 * @param  {Number} degree Degree of the generator polynomial
 * @return {Buffer}        Buffer containing polynomial coefficients
 */

/**
 * Generates a list of all possible nodes combination which
 * will be used to build a segments graph.
 *
 * Nodes are divided by groups. Each group will contain a list of all the modes
 * in which is possible to encode the given text.
 *
 * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.
 * The group for '12345' will contain then 3 objects, one for each
 * possible encoding mode.
 *
 * Each node represents a possible segment.
 *
 * @param  {Array} segs Array of object with segments data
 * @return {Array}      Array of object with segments data
 */

/**
 * Get a list of segments of the specified mode
 * from a string
 *
 * @param  {Mode}   mode Segment mode
 * @param  {String} str  String to process
 * @return {Array}       Array of object with segments data
 */

/**
 * Get mode object from its name
 *
 * @param   {String} string Mode name
 * @returns {Mode}          Mode object
 */

/**
 * Get the flags for a regexp from the options.
 *
 * @param  {Object} options
 * @return {string}
 */

/**
 * Given `this.props.children`, return an object mapping key to child.
 *
 * @param {*} children `this.props.children`
 * @return {object} Mapping of key to child
 */

/**
 * Helper class to handle QR Code symbol modules
 *
 * @param {Number} size Symbol size
 */

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */

/**
 * If at any point a user clicks with a pointing device, ensure that we change
 * the modality away from keyboard.
 * This avoids the situation where a user presses a key on an already focused
 * element, and then clicks on a different element, focusing it with a
 * pointing device, while we still think we're in keyboard modality.
 */

/**
 * Implementation of a subset of node.js Buffer methods for the browser.
 * Based on https://github.com/feross/buffer
 */

/**
 * In byte mode, data is encoded at 8 bits per character.
 *
 * @type {Object}
 */

/**
 * Indent a string.
 * http://jsperf.com/array-join-vs-for
 */

/**
 * Inherit the prototype methods from one constructor into another.
 *
 * The Function.prototype.inherits from lang.js rewritten as a standalone
 * function (not on Function.prototype). NOTE: If this file is to be loaded
 * during bootstrapping this function needs to be rewritten using some native
 * functions as prototype setup using normal JavaScript does not work as
 * expected during bootstrapping (see mirror.js in r114903).
 *
 * @param {function} ctor Constructor function which needs to inherit the
 *     prototype.
 * @param {function} superCtor Constructor function to inherit prototype from.
 */

/**
 * Initialize the encoder.
 * The input param should correspond to the number of error correction codewords.
 *
 * @param  {Number} degree
 */

/**
 * Insert style element into the DOM.
 */

/**
 * Keep track of our keyboard modality state with `hadKeyboardEvent`.
 * If the most recent user interaction was via the keyboard;
 * and the key press did not include a meta, alt/option, or control key;
 * then the modality is keyboard. Otherwise, the modality is not keyboard.
 * @param {KeyboardEvent} event
 */

/**
 * Kickstart an elegant, consistent, and simple baseline to build upon.
 */

/**
 * Lightens a color.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} coefficient - multiplier in the range 0 - 1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

/**
 * Merges adjacent segments which have the same mode
 *
 * @param  {Array} segs Array of object with segments data
 * @return {Array}      Array of object with segments data
 */

/**
 * Method to reduce array of characters
 * @param arr existing array of characters
 * @param values array of characters which should be removed
 * @return {*} new array without banned characters
 */

/**
 * Mixed mode will contain a sequences of data in a combination of any of
 * the modes described above
 *
 * @type {Object}
 */

/**
 * Module exports.
 */

/**
 * Multiplies two number inside Galois Field
 *
 * @param  {Number} x
 * @param  {Number} y
 * @return {Number}
 */

/**
 * Multiplies two polynomials inside Galois Field
 *
 * @param  {Buffer} p1 Polynomial
 * @param  {Buffer} p2 Polynomial
 * @return {Buffer}    Product of p1 and p2
 */

/**
 * Normalize the given path string, returning a regular expression.
 *
 * An empty array can be passed in for the keys, which will hold the
 * placeholder key descriptions. For example, using `/user/:id`, `keys` will
 * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.
 *
 * @param  {(string|RegExp|Array)} path
 * @param  {(Array|Object)=}       keys
 * @param  {Object=}               options
 * @return {!RegExp}
 */

/**
 * Numeric mode encodes data from the decimal digit set (0 - 9)
 * (byte values 30HEX to 39HEX).
 * Normally, 3 data characters are represented by 10 bits.
 *
 * @type {Object}
 */

/**
 * Parse a string for the raw tokens.
 *
 * @param  {string}  str
 * @param  {Object=} options
 * @return {!Array}
 */

/**
 * Portals provide a first-class way to render children into a DOM node
 * that exists outside the DOM hierarchy of the parent component.
 */

/**
 * Precompute the log and anti-log tables for faster computation later
 *
 * For each possible value in the galois field 2^8, we will pre-compute
 * the logarithm and anti-logarithm (exponential) of this value
 *
 * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}
 */

/**
 * Prettier encoding of URI path segments.
 *
 * @param  {string}
 * @return {string}
 */

/**
 * Private module reserved for @material-ui/x packages.
 */

/**
 * Public API for generating a URL pathname from a path and parameters.
 */

/**
 * Public API for matching a URL pathname to a path.
 */

/**
 * Pull out keys from a regexp.
 *
 * @param  {!RegExp} path
 * @param  {!Array}  keys
 * @return {!RegExp}
 */

/**
 * QR Code
 *
 * @param {String | Array} data                 Input data
 * @param {Object} options                      Optional configurations
 * @param {Number} options.version              QR Code version
 * @param {String} options.errorCorrectionLevel Error correction level
 * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis
 */

/**
 * QRCode for JavaScript
 *
 * modified by Ryan Day for nodejs support
 * Copyright (c) 2011 Ryan Day
 *
 * Licensed under the MIT license:
 *   http://www.opensource.org/licenses/mit-license.php
 *
//---------------------------------------------------------------------
// QRCode for JavaScript
//
// Copyright (c) 2009 Kazuhiko Arase
//
// URL: http://www.d-project.com/
//
// Licensed under the MIT license:
//   http://www.opensource.org/licenses/mit-license.php
//
// The word "QR Code" is registered trademark of
// DENSO WAVE INCORPORATED
//   http://www.denso-wave.com/qrcode/faqpatent-e.html
//
//---------------------------------------------------------------------
*/

/**
 * Read jss nonce setting from the page if the user has set it.
 */

/**
 * Recursive deep style passing function
 */

/**
 * Refer to the [Icons](/components/icons/) section of the documentation
 * regarding the available icon options.
 */

/**
 * Replaces the letter with the capital letter
 *
 * @param {String} match
 * @param {String} c
 * @return {String}
 * @api private
 */

/**
 * Return mask value at given position
 *
 * @param  {Number} maskPattern Pattern reference value
 * @param  {Number} i           Row
 * @param  {Number} j           Column
 * @return {Boolean}            Mask value
 */

/**
 * Return mode name as string
 *
 * @param {Mode} mode Mode object
 * @returns {String}  Mode name
 */

/**
 * Returns UTF8 byte length
 *
 * @param  {String} str Input string
 * @return {Number}     Number of byte
 */

/**
 * Returns a number whose value is limited to the given range.
 *
 * @param {number} value The value to be clamped
 * @param {number} min The lower boundary of the output range
 * @param {number} max The upper boundary of the output range
 * @returns {number} A number in the range [min, max]
 */

/**
 * Returns an array containing the positions of each alignment pattern.
 * Each array's element represent the center point of the pattern as (x, y) coordinates
 *
 * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}
 * and filtering out the items that overlaps with finder pattern
 *
 * @example
 * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.
 * The alignment patterns, therefore, are to be centered on (row, column)
 * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).
 * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns
 * and are not therefore used for alignment patterns.
 *
 * var pos = getPositions(7)
 * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]
 *
 * @param  {Number} version QR Code version
 * @return {Array}          Array of coordinates
 */

/**
 * Returns an array containing the positions of each finder pattern.
 * Each array's element represent the top-left point of the pattern as (x, y) coordinates
 *
 * @param  {Number} version QR Code version
 * @return {Array}          Array of coordinates
 */

/**
 * Returns an object with the type and values of a color.
 *
 * Note: Does not support rgb % values.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {object} - A MUI color object: {type: string, values: number[]}
 */

/**
 * Returns anti-log value of n inside Galois Field
 *
 * @param  {Number} n
 * @return {Number}
 */

/**
 * Returns bit value at specified location
 *
 * @param  {Number}  row
 * @param  {Number}  col
 * @return {Boolean}
 */

/**
 * Returns format information with relative error correction bits
 *
 * The format information is a 15-bit sequence containing 5 data bits,
 * with 10 error correction bits calculated using the (15, 5) BCH code.
 *
 * @param  {Number} errorCorrectionLevel Error correction level
 * @param  {Number} mask                 Mask pattern
 * @return {Number}                      Encoded format information bits
 */

/**
 * Returns how many bits are needed to encode a string of
 * specified length with the specified mode
 *
 * @param  {Number} length String length
 * @param  {Mode} mode     Segment mode
 * @return {Number}        Bit length
 */

/**
 * Returns how much data can be stored with the specified QR code version
 * and error correction level
 *
 * @param  {Number} version              QR Code version (1-40)
 * @param  {Number} errorCorrectionLevel Error correction level
 * @param  {Mode}   mode                 Data mode
 * @return {Number}                      Quantity of storable data
 */

/**
 * Returns log value of n inside Galois Field
 *
 * @param  {Number} n
 * @return {Number}
 */

/**
 * Returns mask pattern from a value.
 * If value is not valid, returns undefined
 *
 * @param  {Number|String} value        Mask pattern value
 * @return {Number}                     Valid mask pattern or undefined
 */

/**
 * Returns mode from a value.
 * If value is not a valid mode, returns defaultValue
 *
 * @param  {Mode|String} value        Encoding mode
 * @param  {Mode}        defaultValue Fallback value
 * @return {Mode}                     Encoding mode
 */

/**
 * Returns prefixed value if needed. Returns `false` if value is not supported.
 *
 * @param {String} property
 * @param {String} value
 * @return {String|Boolean}
 * @api public
 */

/**
 * Returns prefixed value transition/transform if needed.
 *
 * @param {String} match
 * @param {String} p1
 * @param {String} p2
 * @return {String}
 * @api private
 */

/**
 * Returns the QR Code size for the specified version
 *
 * @param  {Number} version QR Code version
 * @return {Number}         size of QR code
 */

/**
 * Returns the best mask pattern for data
 *
 * @param  {BitMatrix} data
 * @return {Number} Mask pattern reference number
 */

/**
 * Returns the minimum version needed to contain the amount of data
 *
 * @param  {Segment} data                    Segment of data
 * @param  {Number} [errorCorrectionLevel=H] Error correction level
 * @param  {Mode} mode                       Data mode
 * @return {Number}                          QR Code version
 */

/**
 * Returns the most efficient mode to store the specified data
 *
 * @param  {String} dataStr Input data string
 * @return {Mode}           Best mode
 */

/**
 * Returns the number of bits needed to store the data length
 * according to QR Code specifications.
 *
 * @param  {Mode}   mode    Data mode
 * @param  {Number} version QR Code version
 * @return {Number}         Number of bits
 */

/**
 * Returns the number of error correction block that the QR Code should contain
 * for the specified version and error correction level.
 *
 * @param  {Number} version              QR Code version
 * @param  {Number} errorCorrectionLevel Error correction level
 * @return {Number}                      Number of error correction blocks
 */

/**
 * Returns the number of error correction codewords to use for the specified
 * version and error correction level.
 *
 * @param  {Number} version              QR Code version
 * @param  {Number} errorCorrectionLevel Error correction level
 * @return {Number}                      Number of error correction codewords
 */

/**
 * Returns the total number of codewords used to store data and EC information.
 *
 * @param  {Number} version QR Code version
 * @return {Number}         Data length in bits
 */

/**
 * Returns true if a given popstate event is an extraneous WebKit event.
 * Accounts for the fact that Chrome on iOS fires real popstate events
 * containing undefined state when pressing the back button.
 */

/**
 * Returns true if the HTML5 history API is supported. Taken from Modernizr.
 *
 * https://github.com/Modernizr/Modernizr/blob/master/LICENSE
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js
 * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586
 */

/**
 * Returns version information with relative error correction bits
 *
 * The version information is included in QR Code symbols of version 7 or larger.
 * It consists of an 18-bit sequence containing 6 data bits,
 * with 12 error correction bits calculated using the (18, 6) Golay code.
 *
 * @param  {Number} version QR Code version
 * @return {Number}         Encoded version info bits
 */

/**
 * Returns version number from a value.
 * If value is not a valid version, returns defaultValue
 *
 * @param  {Number|String} value        QR Code version
 * @param  {Number}        defaultValue Fallback value
 * @return {Number}                     QR Code version number
 */

/**
 * Safe chained function
 *
 * Will only create a new function if needed,
 * otherwise will pass back existing functions or null.
 *
 * @param {function} functions to chain
 * @returns {function|null}
 */

/**
 * Set bit value at specified location
 * If reserved flag is set, this bit will be ignored during masking process
 *
 * @param {Number}  row
 * @param {Number}  col
 * @param {Boolean} value
 * @param {Boolean} reserved
 */

/**
 * Set the absolute transparency of a color.
 * Any existing alpha value is overwritten.
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @param {number} value - value to set the alpha channel to in the range 0-1
 * @returns {string} A CSS color string. Hex input values are returned as rgb
 */

/**
 * SheetsManager is like a WeakMap which is designed to count StyleSheet
 * instances and attach/detach automatically.
 */

/**
 * Should be called if a blur event is fired on a focus-visible element
 */

/**
 * Sort props by length.
 */

/**
 * Splits a string in various segments with the modes which
 * best represent their content.
 * The produced segments are far from being optimized.
 * The output of this function is only used to estimate a QR Code version
 * which may contain the data.
 *
 * @param  {string} data Input string
 * @return {Array}       Array of segments
 */

/**
 * Test if a keyframe at-rule should be prefixed or not
 *
 * @param {String} vendor prefix string for the current browser.
 * @return {String}
 * @api public
 */

/**
 * Test if a property is supported, returns supported property with vendor
 * prefix if required. Returns `false` if not supported.
 *
 * @param {String} prop dash separated
 * @param {Object} [options]
 * @return {String|Boolean}
 * @api public
 */

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

/**
 * The Kanji mode efficiently encodes Kanji characters in accordance with
 * the Shift JIS system based on JIS X 0208.
 * The Shift JIS values are shifted from the JIS X 0208 values.
 * JIS X 0208 gives details of the shift coded representation.
 * Each two-byte character value is compacted to a 13-bit binary codeword.
 *
 * @type {Object}
 */

/**
 * The Slide transition is used by the [Drawer](/components/drawers/) component.
 * It uses [react-transition-group](https://github.com/reactjs/react-transition-group) internally.
 */

/**
 * The main path matching regexp utility.
 *
 * @type {RegExp}
 */

/**
 * The props of the [Modal](/api/modal/) component are available
 * when `variant="temporary"` is set.
 */

/**
 * The public API for a <Router> that stores location in memory.
 */

/**
 * The public API for a <Router> that uses HTML5 history.
 */

/**
 * The public API for a <Router> that uses window.location.hash.
 */

/**
 * The public API for matching a single path and rendering.
 */

/**
 * The public API for navigating programmatically with a component.
 */

/**
 * The public API for prompting the user before navigating away from a screen.
 */

/**
 * The public API for rendering a history-aware <a>.
 */

/**
 * The public API for rendering the first <Route> that matches.
 */

/**
 * The public top-level API for a "static" <Router>, so-called because it
 * can't actually change the current location. Instead, it just records
 * location changes in a context object. Useful mainly in testing and
 * server-rendering scenarios.
 */

/**
 * The relative brightness of any point in a color space,
 * normalized to 0 for darkest black and 1 for lightest white.
 *
 * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
 *
 * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()
 * @returns {number} The relative brightness of the color in the range 0 - 1
 */

/**
 * This component takes a `theme` prop.
 * It makes the `theme` available down the React tree thanks to React context.
 * This component should preferably be used at **the root of your component tree**.
 */

/**
 * Transform an array into a regexp.
 *
 * @param  {!Array}  path
 * @param  {Array}   keys
 * @param  {!Object} options
 * @return {!RegExp}
 */

/**
 * Utility component that locks focus inside the component.
 */

/**
 * Vendor prefix string for the current browser.
 *
 * @type {{js: String, css: String, vendor: String, browser: String}}
 * @api public
 */

/**
 * WARNING: Don't import this directly.
 * Use `MuiError` from `@material-ui/utils/macros/MuiError.macro` instead.
 * @param {number} code
 */

/**
 * Weighted penalty scores for the undesirable features
 * @type {Object}
 */

/**
 * When you're adding or removing children some may be added or removed in the
 * same render pass. We want to show *both* since we want to simultaneously
 * animate elements in and out. This function takes a previous set of keys
 * and a new set of keys and merges them with its best guess of the correct
 * ordering. In the future we may expose some of the utilities in
 * ReactMultiChild to make this easy, but for now React itself does not
 * directly have this concept of the union of prevChildren and nextChildren
 * so we implement it here.
 *
 * @param {object} prev prev children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @param {object} next next children as returned from
 * `ReactTransitionChildMapping.getChildMapping()`.
 * @return {object} a key set that contains all keys in `prev` and all keys
 * in `next` in a reasonable order.
 */

/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.5.7
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2016
 * @license MIT
 */

/**
 * [js-sha3]{@link https://github.com/emn178/js-sha3}
 *
 * @version 0.8.0
 * @author Chen, Yi-Cyuan [emn178@gmail.com]
 * @copyright Chen, Yi-Cyuan 2015-2018
 * @license MIT
 */

/**
 * `ButtonBase` contains as few styles as possible.
 * It aims to be a simple building block for creating a button.
 * It contains a load of style reset and some focus/ripple logic.
 */

/**
 * https://github.com/facebook/react/issues/14099#issuecomment-440013892
 *
 * @param {function} fn
 */

/**
 * litecoinAddress
 *
 * @method  faker.finance.litecoinAddress
 */

/**
 * var basex = require("base-x");
 *
 * This implementation is heavily based on base-x. The main reason to
 * deviate was to prevent the dependency of Buffer.
 *
 * Contributors:
 *
 * base-x encoding
 * Forked from https://github.com/cryptocoinjs/bs58
 * Originally written by Mike Hearn for BitcoinJ
 * Copyright (c) 2011 Google Inc
 * Ported to JavaScript by Stefan Thomas
 * Merged Buffer refactorings from base58-native by Stephen Pair
 * Copyright (c) 2013 BitPay Inc
 *
 * The MIT License (MIT)
 *
 * Copyright base-x contributors (c) 2016
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 *
 */

/**
* Find adjacent modules in row/column with the same color
* and assign a penalty value.
*
* Points: N1 + i
* i is the amount by which the number of adjacent modules of the same color exceeds 5
*/

/** @license
 * eventsource.js
 * Available under MIT License (MIT)
 * https://github.com/Yaffle/EventSource/
 */

/** @license React v0.20.2
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v16.13.1
 * react-is.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v17.0.2
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/** @type {!Array} */

/** @type {!Object} */

/** @type {string} */

/** string repeat helper, alternative to String.prototype.repeat.... See PR #382
   *
   * @method faker.helpers.repeatString
   * @param {string} string
   * @param {number} num
   */

/*** CLEAR_HASH(s); ***/

/*** FLUSH_BLOCK(s, 0); ***/

/*** FLUSH_BLOCK(s, 1); ***/

/*** FLUSH_BLOCK_ONLY(s, 0) ***/

/*** INSERT_STRING(s, s.strstart, hash_head); ***/

/*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/

/*** _tr_tally_dist(s, s.strstart - s.match_start,
                     s.match_length - MIN_MATCH, bflush); ***/

/*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/

/*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/

/*** pqremove ***/

/******************************************************************************
 * Created 2008-08-19.
 *
 * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.
 *
 * Copyright (C) 2008
 *   Wyatt Baldwin <self@wyattbaldwin.com>
 *   All rights reserved
 *
 * Licensed under the MIT license.
 *
 *   http://www.opensource.org/licenses/mit-license.php
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 *****************************************************************************/

/************************************************************************/

/******/

/***/

/***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,
                     s.prev_length - MIN_MATCH, bflush);***/

/**/

/*.*/

/*.Code*/

/*.Dad*/

/*.Freq*/

/*.Len*/

/*/*/

/*</replacement>*/

/*<replacement>*/

/*== Z_NULL*/

/*============================================================================*/

/*BITS(1)*/

/*BITS(2)*/

/*BITS(4)*/

/*BITS(5)*/

/*BITS(8)*/

/*BITS(last.bits + last.op)*/

/*BITS(state.distbits)*/

/*BITS(state.extra)*/

/*BITS(state.lenbits)*/

/*MAX_DIST(s)*/

/*NIL*/

/*RicMoo:ethers:require(./edwards)*/

/*RicMoo:ethers:require(./elliptic/eddsa)*/

/*RicMoo:ethers:require(./mont)*/

/*RicMoo:ethers:require(./precomputed/secp256k1)*/

/*RicMoo:ethers:require(brorand)*/

/*SMALLEST*/

/*TOO_FAR*/

/*UPDATE(state.check, put - _out, _out);*/

/*UPDATE(state.check, strm.next_out - _out, _out);*/

/*Z_NULL*/

/*Z_UNKNOWN*/

/*adler32(0L, Z_NULL, 0)*/

/*crc32(0L, Z_NULL, 0)*/

/*from1, from2, from3, ...*/

/*global setTimeout, clearTimeout */

/*global window, global*/

/*here.bits*/

/*here.op*/

/*here.val*/

/*int /2*/

/*jslint bitwise: true */

/*jslint indent: 2, vars: true, plusplus: true */

/*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/

/*max_insert_length*/

/*state.head.comm_max*/

/*state.head.name_max*/

/*table.op[low] = curr;
      table.bits[low] = root;
      table.val[low] = next - opts.table_index;*/

/*|| strm->zfree == (free_func)0*/

//

//                    output[_out++] = 0;

//                    output[_out++] = output[from++];

//                  continue top;

//                  do {

//                  from = _out - dist;

//                  output[_out++] = 0;

//                  } while (--len);

//                do {

//                if (len <= op - whave) {

//                if (op === 0) {

//                len -= op - whave;

//                }

//                } while (--op > whave);

//               Q = r^-1 (sR + -eG)

//            output[put++] = 0;

//          Trace((stderr, "inflate.c too far\n"));

//          break;

//          copy -= state.whave;

//          do {

//          if (copy > left) { copy = left; }

//          if (copy > state.length) { copy = state.length; }

//          if (state.length === 0) { state.mode = LEN; }

//          left -= copy;

//          state.length -= copy;

//          } while (--copy);

//         * strstart == 0 && lookahead == 1 (input done a byte at time)

//         */

//         nextStatus = ENTERING

//         nextStatus = EXITING

//        "inconsistent bit counts");

//        "inflate:         literal '%c'\n" :

//        "inflate:         literal 0x%02x\n", here.val));

//        "too many codes");

//        /* Very unlikely, but possible on 16 bit machine if

//        Call update_hash() MIN_MATCH-3 more times

//        init = WIN_INIT;

//        init = s->window_size - s->high_water;

//        more = wsize;

//        more--;

//        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,

//        s->last_lit));

//        s->opt_len, s->static_len));

//        s->static_len));

//        s.block_start >= s.w_size)) {

//        state.last ? " (last)" : ""));

//        state.length));

//        throw  new Error("slide too late");

//       (ush)d_code(dist) < (ush)D_CODES,  "_tr_tally: bad match");

//       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&

//       * bytes or up to end of window, whichever is less.

//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up

//       * to end of window, whichever is less.

//       */

//       2) `positive` is true if unsigned mod is requested

//       if (status !== ENTERING && status !== ENTERED) {

//       if (status === ENTERING || status === ENTERED) {

//       request both div & mod

//       return merge(acc, handlers[prop](props));

//       to `div` to request div only, or be absent to

//       }

//      /* High water mark at or above current data, but below current data

//      /* Previous high water mark below current data -- zero WIN_INIT

//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||

//      if (init > WIN_INIT)

//      if (init > s->window_size - s->high_water)

//      init = (ulg)curr + WIN_INIT - s->high_water;

//      init = s.window_size - curr;

//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);

//      return true;

//      s->high_water += init;

//      s->high_water = curr + init;

//      zmemzero(s->window + curr, (unsigned)init);

//      zmemzero(s->window + s->high_water, (unsigned)init);

//      }

//     #doubling-dbl-2009-l

//     #doubling-mdbl-2007-bl

//     1         // No comma at the end!

//     acc[prop] = style;

//     const { status } = this.state

//     if (handlers[prop]) {

//     if (this.props.in) {

//     return acc;

//     }

//     } else {

//    "not enough room for search");

//    /* Compute an upper bound for the compressed length */

//    //       100L - out_length*100L/in_length));

//    //       s->last_lit, in_length, out_length,

//    //Tracev((stderr,"\nlast_lit %u, in %ld, out ~%ld(%ld%%) ",

//    another readable later.

//    buffer.fill(buffer[, offset[, end]])

//    buffer.fill(number[, offset[, end]])

//    buffer.fill(string[, offset[, end]][, encoding])

//    care of it.

//    else if (s->high_water < (ulg)curr + WIN_INIT) {

//    for (dcode = 0; dcode < D_CODES; dcode++) {

//    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {

//    if (s.block_start < 0) throw new Error("block gone");

//    if (s.high_water < curr) {

//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {

//    in_length = s.strstart - s.block_start;

//    out_length = s.last_lit*8;

//    out_length >>>= 3;

//    put_byte(s, (uch)((ush)(w) >> 8));

//    put_byte(s, (uch)((w) & 0xff));

//    put_byte(s, *buf++);

//    return (isSecretStorageWallet(json) || isCrowdsaleWallet(json));

//    var curr = s.strstart + s.lookahead;

//    var init = 0;

//    }

//   'data' event.

//   - 32 bytes   AES key to encrypt mnemonic with (required here to be Ethers Wallet)

//   - 32 bytes   As normal for the Web3 secret storage (derivedKey, macPrefix)

//   - Mainnet: public=0x0488B21E, private=0x0488ADE4

//   - Testnet: public=0x043587CF, private=0x04358394

//   - argument: The argument name that was invalid

//   - call

//   - cancelled: true if reason == "cancelled" or reason == "replaced")

//   - count: The number of arguments received

//   - estimateGas

//   - event ("noNetwork" is not re-thrown in provider.ready; otherwise thrown)

//   - expectedCount: The number of arguments expected

//   - fault: the reason this faulted

//   - hash: original transaction hash

//   - kiyoku

//   - kyoku

//   - operation

//   - operation: the operation being executed

//   - populateTransaction (and therefor sendTransaction)

//   - reason: "cancelled", "replaced" or "repriced"

//   - receipt: the receipt of the replacement

//   - replacement: the full TransactionsResponse for the replacement

//   - sendTransaction

//   - transaction: the transaction attempted

//   - transaction: the transaction passed to estimateGas

//   - value: The value of the argument

//   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])

//   [

//   ]

//   appreciated but is not required.

//   call read here would abort the flow and there's no other mechanism for

//   called push() with new data. In this case we skip performing more

//   case where the the stream has called the implementation defined _read()

//   claim that you wrote the original software. If you use this software

//   container,

//   continuing the flow if the stream consumer has just subscribed to the

//   if (prevProps !== this.props) {

//   in a product, an acknowledgment in the product documentation would be

//   is available. If highWaterMark is 0 and we are not in the flowing mode

//   is responsible for filling the buffer with enough data if such data

//   let nextStatus = null

//   method, but they are processing the call asynchronously and have _not_

//   misrepresented as being the original software.

//   modals: [],

//   read()s. The execution ends in this method again after the _read() ends

//   restore: null,

//   return Object.keys(props).reduce((acc, prop) => {

//   return acc;

//   return { nextStatus }

//   style.filterProps.forEach(prop => {

//   the loop below is responsible for ensuring read() is called. Failing to

//   up calling push() with more data.

//   we should _not_ attempt to buffer any extra data. We'll get more data

//   when the stream consumer calls read() instead.

//   }

//   });

//   }, {});

//  - We allow gasPrice for EIP-1559 as long as it matches maxFeePerGas

//  - address?: the contract address

//  - args?: The arguments passed into the function

//  - errorArgs?: The EIP848 error parameters

//  - errorSignature?: The EIP848 error signature

//  - method?: The Solidity method signature

//  - name: The name of the class

//  - reason: The reason (only for EIP848 "Error(string)")

//  - transaction: the transaction

//  /* Try to guess if it is profitable to stop the current block here */

//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,

//  Export the twister class

//  Exports: Public API

//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {

//  if (s.high_water < s.window_size) {

//  put_byte(s, (Byte)(b & 0xff));

//  put_byte(s, (Byte)(b >> 8));

//  s->block_start >= (long)s->w_size, "slide too late");

//  while (len--) {

//  }

//  } else if (more == (unsigned)(-1)) {

// "/*"            => ["/", undefined, undefined, undefined, undefined, "*"]

// "/:test(\\d+)?" => ["/", "test", "\d+", undefined, "?", undefined]

// "/route(\\d+)"  => [undefined, undefined, undefined, "\d+", undefined, undefined]

// "Software"), to deal in the Software without restriction, including

// "consumed" by the delegate iterator. If context.method was

// "name": intentionally not styling

// "return" to "throw", let that override the TypeError below.

// "return", allow the original .return call to continue in the

// "the first render", or "memo dropped the value"

// "the promise rejected with null" or "the promise fulfilled with undefined".

// #91 (XMLHttpRequest onprogress not fired for streaming response in Edge 14-15-?)

// #StrictMode ready

// $FlowFixMe[incompatible-call]

// $FlowFixMe[incompatible-type]

// $FlowFixMe[invalid-tuple-index]

// $FlowFixMe[prop-missing]

// $FlowFixMe[prop-missing] We can safely assume that rule has the style property

// 'A' - 'F'

// 'a'

// 'a' - 'f'

// 'abxxcd' will be treated as 'ab')

// 'chunk' is an input chunk.

// 'error'

// 'path' module extracted from Node.js v8.11.1 (only the posix part)

// 'readable' etc.

// (!) This block is disabled in zlib defaults,

// (0x7ffffff)

// (C) 1995-2013 Jean-loup Gailly and Mark Adler

// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin

// (after initialization).

// (but the first byte was read already read and therefore skipped)

// (e.g. a Uint8Array and a Uint16Array with the same memory content

// (or whatever flag was provided using opts.finishFlush).

// *below* the call to _read.  The reason is that in certain

// +   2

// - No data in the buffer, and the stream is in flowing mode. In this mode

// - Not enough data buffered (state.length < state.highWaterMark). The loop

// - The stream has ended (state.ended).

// - There is already a pending 'read' operation (state.reading). This is a

// - adds "from" is not present

// - badCodepoint = the computed codepoint; already bounds checked

// - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range

// - badCodepoint = the computed codepoint; outside the UTF-8 range

// - buffer - a Buffer to search

// - byteOffset - an index into `buffer`; will be clamped to an int32

// - clock_seq_hi_and_reserved[6] = 0b0

// - clock_seq_hi_and_reserved[7] = 0b1

// - dir - true for indexOf, false for lastIndexOf

// - does NOT require a provider

// - encoding - an optional encoding, relevant is val is a string

// - no need for additional size check

// - offset       = start of this codepoint

// - offset = the index the codepoint began in

// - offset = the index the continuation byte was expected at

// - returns a COPY (safe to mutate the result)

// - time_hi_and_version[12:16] = 0b0100

// - val - a string, Buffer, or number

// -0 = 0

// -0 === +0

// -1 - if `this` < `num`

// -121665 * (121666^(-1)) (mod P)

// -this - num = -(this + num)

// ...

// ... we need to consider *all* matching keys, not just the first we find.

// ...and explore the edges that connect u to those nodes, updating

// ...but they are trying to use EIP-1559 properties

// .constructor.prototype properties for functions that return Generator

// .end() fully uncorks

// .mui-fixed is a global helper.

// .throw, and .return (see defineIteratorMethods).

// .throw, and .return methods.

// .toUpperCase handles XHTML

// 0 - if `this` == `num`

// 0x36 ^ 0x5c = 0x6a

// 0xxx xxxx

// 1 - if `this` > `num`

// 1. Figure out what the state of things will be after we do

// 1. It is not flowing, as the flow mechanism will take

// 1. The origin of this software must not be misrepresented; you must not

// 1.1. Let x = r + jn.

// 1.6.1 Compute Q = r^-1 (sR -  eG)

// 10

// 10-kana words

// 110x xxxx 10xx xxxx

// 12M + 4S + 7A

// 15

// 1M + 2S + 1A + N * (4S + 5M + 8A)

// 1M + 5S + 14A

// 1M + 5S + 15A

// 1kb of data being output.  In this case, you could write a very small

// 2 ^ 255 - 19

// 2 ^ 53 (unsafe)

// 2 leads in a row

// 2. Altered source versions must be plainly marked as such, and must not be

// 2. If that resulting state will trigger a _read, then call _read.

// 2. It is not ended.

// 20

// 24-bits chunks

// 25

// 256 = 9 * 26 + 22

// 26 Feb 16:19:34

// 2M + 5S + 13A

// 2P = O

// 3. Actually pull the requested chunks out of the buffer and return.

// 3. It is below the highWaterMark, so we can schedule

// 3. This notice may not be removed or altered from any source distribution.

// 3.74

// 30

// 32 x 32bit words

// 35

// 3M + 5S

// 4-kana words

// 4/5

// 4M + 6S + 10A

// 5

// 5-kana words

// 5018 xxxx xxxx xxxx xxL

// 5M + 10S + ...

// 6-kana words

// 7-kana words

// 8-kana words

// 8M + 3S + 7A

// 9 = Tab

// 9-kana words

// 9/2018 - Added faker random to ensure mersenne and seed

// :focus-ring CSS pseudo-class will help.

// === Z_NULL

// =============

// ===============

// ================

// => Check whether `dest` is still a piping destination.

// => No way to polyfill Promise#finally

// >>> 0;

// @@iterator function is called on it. Some browsers' implementations of the

// @TODO: Any??

// @TODO: Put more checks to make sure it has kdf, iv and all that good stuff

// @TODO: hexValue?

// @see {@link Mode.getCharCountIndicator}.

// @see {@link initTables}

// @see {@link mul}

// A * x + B * y = x

// A .throw or .return when the delegate iterator has no .throw

// A = X1^2

// A Generator should always return itself as the iterator object when the

// A bit simpler than readable streams.

// A chainId was provided; if non-zero we'll use EIP-155

// A change of the browser zoom change the scrollbar size.

// A collection of common colors.

// A continuation byte was present where there was nothing to continue

// A few bytes payload overhead when lodash/debounce is ~3 kB and debounce ~300 B.

// A hashchange doesn't always == location change.

// A linked list is used to store data chunks instead of an array because the

// A lot of common tools do not prefix private keys with a 0x (see: #1166)

// A missing continuation byte was expected but not found

// A modal manager used to track and manage the state of open Modals.

// A reduce context, could be using montgomery or something better, depending

// A strict capitalization should uppercase the first letter of each word a the sentence.

// A type of promise-like that resolves synchronously and supports only one observer

// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION

// ARMv6 (Raspberry Pi) has bug in bitwise operations

// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN

// About 1.5x faster than the two-arg version of Array#splice()

// Accept native ES6 promises and promises that are implemented in a similar

// Acceptable error states depend on the type of zlib stream.

// Access the stack to generate the error message including the error code

// Acute accent

// Add !important, because it was ignored.

// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else

// Add `num` to `this`

// Add `num` to `this` in-place

// Add a "0x" prefix if missing

// Add a terminator.

// Add all cached information to the result before adding other things

// Add bit and propagate, if needed

// Add data codewords

// Add default alpha value

// Add function modules

// Add iOS momentum scrolling.

// Add linkage

// Add pad bytes if the string is still shorter than the total number of required bits.

// Add padding to key

// Add plain number `num` to `this`

// Add position indicator for the first mismatch in case it is a

// Add some space to avoid collision as `ListItemSecondaryAction`

// Add support for document.body.requestFullScreen().

// Add temporary dummy bits for format info just to set them as reserved.

// Add the actual line to the result and cache the expected diverging

// Add the actual line to the result.

// Add the error code to the name to include it in the stack trace.

// Add the expected line to the cache.

// Add the unit if available, except for the special case of 0px.

// Adding the second element, need to change to array.

// After adding the terminator, if the number of bits in the string is not a multiple of 8,

// Alias for "off"

// Alias for "on"

// Alignment properties

// All identical values are equivalent, as determined by ===.

// All of the following functions must throw an AssertionError

// All the actual chunk generation logic needs to be

// Allocate matrix buffer

// Allow a recid to be used as the v

// Allow empty style in this case, because properties will be added dynamically.

// Allow for deprecating things in the process of starting up.

// Allow for unix-like usage: A.pipe(B).pipe(C)

// Allow the keys array to be GC'ed.

// Already transformed.

// Also, if we have no data yet, we can stand some more bytes.

// Also, update the availInBefore to the availInAfter value,

// Alternative approach that doesn't yield any performance gain.

// An invalid (non-continuation) byte to start a UTF-8 codepoint was found

// And `num` with `this`

// And `num` with `this` in-place

// And first word and num

// And remove leading zeroes

// And try to decode again

// Animation name ref replacer.

// Animation properties

// Antialiasing.

// Apache License 2.0

// Apped EC codewords

// Append length

// Append the current lastEventId to the request URL.

// Apply babel-plugin-transform-template-literals in loose mode

// Apply fallbacks first.

// Apply mask pattern

// Are we oob?

// Argument Errors

// Arguments:

// Array

// Array is sparse.

// Array syntax {fallbacks: [{prop: value}]}

// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass

// ArrayBuffer view

// Arrays are mutable, so we need to create a copy

// Assert (s->compressed_len == s->bits_sent, "bad compressed size");

// Assert compares only enumerable properties (with a few exceptions).

// Assert does not detect proxies currently.

// Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, "need lookahead");

// Assert(*scan == *match, "match[2]?");

// Assert(buf != (char*)0, "lost buf");

// Assert(cur_match < s->strstart, "no future");

// Assert(s->hash_bits >= 8 && MAX_MATCH == 258, "Code too clever");

// Assert(scan <= s->window+(unsigned)(s->window_size-1), "wild scan");

// Assign the result of the finished delegate to the temporary

// Assume big-endian

// Assumes that `num` is less than `P^2`

// AsyncIterator objects; they just return a Promise for the value of

// Asynchronously await a promise and pass the result to a finally continuation

// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing

// Asynchronously iterate through an object's values

// At least give some kind of context to the user

// At some point, it would be better to keep it for keyboard users.

// At this point both numbers are positive

// At this point both numbers have the same sign

// At this point the path should be resolved to a full absolute path, but

// Attempt to read more data if we should.

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer

// Avoid failures from read-only properties

// Avoid nesting of li > li.

// Avoid propagating failures to Promises returned by later

// Avoid prototype pollution

// Avoids applying same plugin twice, at least based on ref.

// Azerbaijan

// B = Y1^2

// BBAN 2c,16n

// BN

// Background properties

// Backward compatibility, to remove in v5.

// Backwards-compat with node 0.10.x

// Backwards-compat with node 0.4.x

// Base path

// Base reduction engine

// Based on http://stackoverflow.com/a/22747272/680742, the browser with

// Basic encoder type (address, bool, uint256, etc)

// Be forgiving, per 25.3.3.3.3 of the spec:

// Because `null` is a special error value in callbacks which means "no error

// Block the scroll even if no scrollbar is visible to account for mobile keyboard

// Blockchain Errors

// Bootstrap the async incremental smix

// Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59

// Border Properties

// Both close and finish should trigger unpipe, but only once.

// Both inflateSetDictionary() and inflate() return Z_DATA_ERROR.

// Both numbers are positive at this point

// Buffer Overrun

// Buffer#write(string)

// Buffer.compare returns true, so val1.length === val2.length. If they both

// Build optimized segments

// Bundle may contain multiple JSS versions at the same time. In order to identify

// But allow more writes to happen in this tick.

// By convention, when a data property is converted to an accessor

// By default EventEmitters will print a warning if more than 10 listeners are

// By default called from: (overriding these prevents it)

// By directly retrieving the value we prevent another b.has(key) check in

// By explicitly using `prop-types` you are opting into new production behavior.

// Bytes remain in input buffer. Perhaps this is another compressed

// CHECK FUNCTIONS

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/classCallCheck.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/inherits.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArray.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js

// CONCATENATED MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js

// CONCATENATED MODULE: ./node_modules/@emotion/is-prop-valid/dist/is-prop-valid.browser.esm.js

// CONCATENATED MODULE: ./node_modules/@emotion/memoize/dist/memoize.browser.esm.js

// CONCATENATED MODULE: ./node_modules/@emotion/stylis/dist/stylis.browser.esm.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/abstract-provider/lib.esm/index.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/abstract-signer/lib.esm/index.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/address/lib.esm/_version.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/basex/lib.esm/index.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/bignumber/lib.esm/bignumber.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/bytes/lib.esm/_version.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/hash/lib.esm/id.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/hash/lib.esm/typed-data.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/_version.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/crowdsale.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/index.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/inspect.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/json-wallets/lib.esm/utils.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/keccak256/lib.esm/index.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/logger/lib.esm/index.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/pbkdf2/lib.esm/pbkdf2.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/properties/lib.esm/index.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/random/lib.esm/_version.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/rlp/lib.esm/_version.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/sha2/lib.esm/_version.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/signing-key/lib.esm/_version.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/signing-key/lib.esm/elliptic.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/strings/lib.esm/_version.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/transactions/lib.esm/index.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/wallet/lib.esm/index.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/_version.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/lang-es.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/lang-ja.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/lang-ko.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/lang-zh.js

// CONCATENATED MODULE: ./node_modules/@ethersproject/wordlists/lib.esm/wordlists.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/AppBar/AppBar.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Backdrop/Backdrop.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Box/Box.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ButtonBase/ButtonBase.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ButtonBase/Ripple.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ButtonBase/TouchRipple.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Container/Container.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Drawer/Drawer.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Fade/Fade.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/IconButton/IconButton.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/List/List.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/ListItemText/ListItemText.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Modal/Modal.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Modal/ModalManager.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Modal/SimpleBackdrop.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Portal/Portal.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Slide/Slide.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Typography/Typography.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/Unstable_TrapFocus/Unstable_TrapFocus.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/createTheme.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/createTypography.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/makeStyles.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/useTheme.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/styles/withStyles.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/createSvgIcon.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/deprecatedPropType.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/getScrollbarSize.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/index.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/requirePropFactory.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/unstable_useId.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/unsupportedProp.js

// CONCATENATED MODULE: ./node_modules/@material-ui/core/esm/utils/useControlled.js

// CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/ThemeProvider/ThemeProvider.js

// CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/getStylesCreator/getStylesCreator.js

// CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/jssPreset/jssPreset.js

// CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/makeStyles/makeStyles.js

// CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/mergeClasses/mergeClasses.js

// CONCATENATED MODULE: ./node_modules/@material-ui/styles/esm/styled/styled.js

// CONCATENATED MODULE: ./node_modules/@material-ui/system/esm/borders.js

// CONCATENATED MODULE: ./node_modules/@material-ui/system/esm/compose.js

// CONCATENATED MODULE: ./node_modules/@material-ui/system/esm/sizing.js

// CONCATENATED MODULE: ./node_modules/@material-ui/system/esm/spacing.js

// CONCATENATED MODULE: ./node_modules/@material-ui/system/esm/style.js

// CONCATENATED MODULE: ./node_modules/@material-ui/system/esm/styleFunctionSx.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/browser-utils/dist/esm/browser.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/browser-utils/dist/esm/index.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/browser-utils/dist/esm/json.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/browser-utils/dist/esm/local.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/browser-utils/dist/esm/mobile.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/browser-utils/dist/esm/registry.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/client/dist/esm/index.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/core/dist/esm/events.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/core/dist/esm/index.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/core/dist/esm/storage.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/crypto/dist/esm/browser/aes.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/crypto/dist/esm/browser/hmac.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/crypto/dist/esm/constants/length.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/crypto/dist/esm/lib/browser.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/iso-crypto/dist/esm/index.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/randombytes/dist/esm/browser/index.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/safe-json/dist/esm/index.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/socket-transport/dist/esm/network.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/utils/dist/esm/constants.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/utils/dist/esm/encoding.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/utils/dist/esm/ethereum.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/utils/dist/esm/misc.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/utils/dist/esm/url.js

// CONCATENATED MODULE: ./node_modules/@walletconnect/utils/dist/esm/validators.js

// CONCATENATED MODULE: ./node_modules/history/esm/history.js

// CONCATENATED MODULE: ./node_modules/hyphenate-style-name/index.js

// CONCATENATED MODULE: ./node_modules/jss-plugin-camel-case/dist/jss-plugin-camel-case.esm.js

// CONCATENATED MODULE: ./node_modules/jss-plugin-default-unit/dist/jss-plugin-default-unit.esm.js

// CONCATENATED MODULE: ./node_modules/jss-plugin-nested/dist/jss-plugin-nested.esm.js

// CONCATENATED MODULE: ./node_modules/jss-plugin-props-sort/dist/jss-plugin-props-sort.esm.js

// CONCATENATED MODULE: ./node_modules/jss-plugin-vendor-prefixer/dist/jss-plugin-vendor-prefixer.esm.js

// CONCATENATED MODULE: ./node_modules/mini-create-react-context/dist/esm/index.js

// CONCATENATED MODULE: ./node_modules/preact/compat/dist/compat.module.js

// CONCATENATED MODULE: ./node_modules/preact/dist/preact.module.js

// CONCATENATED MODULE: ./node_modules/preact/hooks/dist/hooks.module.js

// CONCATENATED MODULE: ./node_modules/react-router-dom/esm/react-router-dom.js

// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/Transition.js

// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/TransitionGroup.js

// CONCATENATED MODULE: ./node_modules/react-transition-group/esm/utils/ChildMapping.js

// CONCATENATED MODULE: ./node_modules/resolve-pathname/esm/resolve-pathname.js

// CONCATENATED MODULE: ./node_modules/styled-components/dist/styled-components.browser.esm.js

// CONCATENATED MODULE: ./node_modules/tiny-invariant/dist/tiny-invariant.esm.js

// CONCATENATED MODULE: ./node_modules/value-equal/esm/value-equal.js

// CONCATENATED MODULE: ./src/services/frontend/components/Admin.jsx

// CONCATENATED MODULE: ./src/services/frontend/components/App.jsx

// CONCATENATED MODULE: ./src/services/frontend/components/Drawer.jsx

// CONCATENATED MODULE: ./src/services/frontend/components/Footer/index.jsx

// CONCATENATED MODULE: ./src/services/frontend/components/GlobalStyle.jsx

// CONCATENATED MODULE: ./src/services/frontend/components/Header/index.jsx

// CONCATENATED MODULE: ./src/services/frontend/components/Integration.tsx

// CONCATENATED MODULE: ./src/services/frontend/components/Modal.tsx

// CONCATENATED MODULE: ./src/services/frontend/components/wc/Button.tsx

// CONCATENATED MODULE: ./src/services/frontend/components/wc/Buttons.tsx

// CONCATENATED MODULE: ./src/services/frontend/components/wc/WCButtons.tsx

// CONCATENATED MODULE: ./src/services/frontend/index.client.jsx

// CSP to forbid Function, and you're not willing to fix either of those

// CUSTOM ERRORS

// Cache for the finalized classes value.

// Cache for the last used classes prop pointer.

// Cache for the last used rendered classes pointer.

// Cached version of prime

// Calculate EC codewords for this data block

// Calculate EC for this data block

// Calculate penalty

// Calculate required number of bits

// Call `cb(err)` when you are done with this chunk.  If you pass

// Call `push(newChunk)` to pass along transformed output

// Call delegate.iterator[context.method](context.arg) and handle the

// Call exception

// Call the callback with the progress (optionally stopping us)

// Call toHex on the positive component

// Caller may invoke .close after a zlib error (which will null _handle).

// Can typed array instances be augmented?

// Can typed array instances can be augmented?

// Cannot have mulitple negative signs (e.g. "--0x04")

// Carry

// Change from `box-sizing: content-box` so that `width`

// Character count indicator + mode indicator bits

// Cheap key test

// Check bit and return

// Check each field has a unique name

// Check for all required parameters

// Check for circular type references

// Check for listener leak

// Check for overlong sequences (more bytes than needed)

// Check for sparse arrays and general fast path

// Check if 'transition' or 'transform' natively supported in browser.

// Check if key is already down to avoid repeats being counted as multiple activations

// Check if module is in cache

// Check if the specified version can contain the data

// Check if we're actually ready to finish, but don't emit yet

// Check more closely if val1 and val2 are equal.

// Check that value is an object with an inspect function on it

// Check that we didn't get one last unshift.

// Check the address matches the private key

// Check the mnemonic (if any) matches the private key

// Check/generate the salt

// Checking for a Stream.Duplex instance is faster here instead of inside

// Checks a transaction does not contain invalid keys and if

// Checks at most 3 bytes at the end of a Buffer in order to detect an

// Checks that a user-supplied chunk is valid, especially for the particular

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a

// Choose a random provider

// Choose the lambda that is matching selected beta

// Choose the smallest beta

// Clean-up references to points and coefficients

// Cleanup functions are executed lazily in React 17.

// Coerce to Number.

// Column properties

// Comb small window NAFs

// Common case.

// Common error handing strategies

// Compare two numbers and return:

// Compile all the patterns before compilation.

// Compile all the tokens into regexps.

// Compute _vs from recoveryParam and s

// Compute beta and lambda, that lambda * P = (beta * Px; Py)

// Compute each fully describe type

// Compute recoveryParam from v

// Compute the checksum bits

// Compute the size before applying overflow hidden to avoid any scroll jumps.

// Consistency between these values is important.

// Consume the whole byte (with still more to go)

// Consumes a specified amount of bytes from the buffered data.

// Consumes a specified amount of bytes or characters from the buffered data.

// Consumes a specified amount of characters from the buffered data.

// Contain can be called between the component being unmounted and its cleanup function being run.

// Convenience methods.

// Convert from short to long form (fff -> ffffff)

// Convert message to array, pad it, and join into 32bit blocks

// Convert result to a 13-bit binary string

// Cooley-Tukey algorithm for FFT

// Copy 0 bytes; we're done

// Copy properties from require('buffer')

// Copy rest of the words

// Copy static methods from Buffer

// Copyright (c) 2009 Thomas Robinson <280north.com>

// Copyright Joyent, Inc. and other Node contributors.

// Correctly detect the Edge browser.

// Correctly detect the Safari browser.

// Corresponds to 10 frames at 60 Hz.

// Cost of s to u plus the cost of u to v across e--this is *a*

// Costs of shortest paths from s to all nodes encountered.

// Costs of shortest paths from s to all nodes encountered; differs from

// Could use `inherits` module, but don't want to move from single file

// Count zeroes

// Crawl up the constructor chain to find a static method

// Create a Getter for all definitions.foo.bar properties

// Create a new module (and put it into the cache)

// Create an object with no prototype

// Create cache key for current value.

// Create error message including the error code in the name.

// Create final data

// Create lookup table

// Create lookup table for `toString('hex')`

// Create placeholder objects to create a nice output.

// Create possibly bigger array to ensure that it fits the number

// Create table on load. Just 255 signed longs. Not a problem.

// Credit cards are in a object structure

// Credit https://github.com/twbs/bootstrap/blob/3ffe3a5d82f6f561b82ff78d82b32a7d14aed558/js/src/modal.js#L512-L519

// Crypto is kind of old and crusty.  Historically, its default string

// Currently in sync with Node.js lib/assert.js

// Currently in sync with Node.js lib/internal/assert/assertion_error.js

// Currently in sync with Node.js lib/internal/errors.js

// Currently in sync with Node.js lib/internal/util/comparisons.js

// Currently in sync with Node.js lib/internal/util/types.js

// Currently works in chrome only.

// Curve configuration, optional

// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR

// DCE check should happen before ReactDOM bundle executes so that

// DEFLATE header

// Data += ser_32(i)

// Data = 0x00 || ser_256(k_par)

// Data = ser_p(point(k_par))

// Deal with range `[min-max]` (only works with numbers for now)

// Deal with range repeat `{min,max}`

// Deal with repeat `{num}`

// Decode as big chunks as possible

// Decode in chunks to avoid "call stack size exceeded".

// Decryption is symetric

// Deduce the primary type

// Default value

// Define Generator.prototype.{next,throw,return} in terms of the

// Define the unified helper method that is used to implement .next,

// Delay the execution of the ripple effect.

// Delete the diacritic marks

// Deliberately forget the last sent value so that we don't

// Denormalize

// Derive the EIP712Domain Struct reference type

// Detect buggy property enumeration order in older V8 versions.

// DevTools can report bad minification during injection.

// Didn't find one. :'(

// Disable link interactions

// Disable the vendor prefixer server-side, it does nothing.

// Disabled text have even lower visual prominence.

// Dispatch the exception by looping back around to the

// Divide the buffer into the required number of blocks

// Do not allow "-0x00"

// Do not allow mixing pre-eip-1559 and eip-1559 proerties

// Do not cache `Buffer.isEncoding` when checking encoding names as some

// Do not compare the stack as it might differ even though the error itself

// Do nothing

// Do we have enough bytes in our data?

// Do we need to look up the domain's verifyingContract?

// Doesn't matter what the args are here.

// Don't do anything if add isn't an object

// Don't do anything if the value has not changed.

// Don't emit readable right away in sync mode, because this can trigger

// Don't have enough

// Don't insert rule directly if there is no stringified version yet.

// Don't need mem init magic for JS.

// Don't raise the hwm > 1GB

// Don't use 'blue' not visible on cmd.exe

// Don't want the source array exposed to modification, so return a copy

// Done; don't break (which would reschedule)

// Dummy constructor functions that we use as the .constructor and

// Duplex streams are both readable and writable, but share

// E = 3 * A

// E.g. rules inside of @media container

// E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })

// E.g., shift from Red 500 to Red 300 or Red 700.

// ECDH

// ECDSA

// EIP-1559 fees; otherwise they may not understand what they

// ES6 symbol

// ESM COMPAT FLAG

// EXPORTS

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/createClass.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/defineProperty.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/extends.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/slicedToArray.js + 3 modules

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js + 3 modules

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/typeof.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js

// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js

// EXTERNAL MODULE: ./node_modules/@ethersproject/keccak256/node_modules/js-sha3/src/sha3.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/styles/colorManipulator.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/styles/defaultTheme.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/styles/transitions.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/styles/withStyles.js + 1 modules

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/styles/zIndex.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/capitalize.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/createChainedFunction.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/debounce.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/isMuiElement.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/ownerDocument.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/ownerWindow.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/setRef.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/useEventCallback.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/useForkRef.js

// EXTERNAL MODULE: ./node_modules/@material-ui/core/esm/utils/useIsFocusVisible.js

// EXTERNAL MODULE: ./node_modules/@material-ui/icons/Menu.js

// EXTERNAL MODULE: ./node_modules/@material-ui/icons/MoveToInbox.js

// EXTERNAL MODULE: ./node_modules/@material-ui/styles/esm/StylesProvider/StylesProvider.js + 1 modules

// EXTERNAL MODULE: ./node_modules/@material-ui/styles/esm/getThemeProps/getThemeProps.js

// EXTERNAL MODULE: ./node_modules/@material-ui/styles/esm/jssPreset/jssPreset.js + 9 modules

// EXTERNAL MODULE: ./node_modules/@material-ui/styles/esm/makeStyles/makeStyles.js + 5 modules

// EXTERNAL MODULE: ./node_modules/@material-ui/styles/esm/useTheme/ThemeContext.js

// EXTERNAL MODULE: ./node_modules/@material-ui/styles/esm/useTheme/useTheme.js

// EXTERNAL MODULE: ./node_modules/@material-ui/system/esm/breakpoints.js

// EXTERNAL MODULE: ./node_modules/@material-ui/system/esm/merge.js

// EXTERNAL MODULE: ./node_modules/@material-ui/system/esm/spacing.js + 1 modules

// EXTERNAL MODULE: ./node_modules/@material-ui/utils/esm/deepmerge.js

// EXTERNAL MODULE: ./node_modules/@material-ui/utils/esm/formatMuiErrorMessage.js

// EXTERNAL MODULE: ./node_modules/@walletconnect/environment/dist/cjs/index.js

// EXTERNAL MODULE: ./node_modules/@walletconnect/qrcode-modal/dist/cjs/index.js

// EXTERNAL MODULE: ./node_modules/@walletconnect/utils/node_modules/bn.js/lib/bn.js

// EXTERNAL MODULE: ./node_modules/@walletconnect/window-getters/dist/cjs/index.js

// EXTERNAL MODULE: ./node_modules/@walletconnect/window-metadata/dist/cjs/index.js

// EXTERNAL MODULE: ./node_modules/aes-js/index.js

// EXTERNAL MODULE: ./node_modules/bn.js/lib/bn.js

// EXTERNAL MODULE: ./node_modules/clsx/dist/clsx.m.js

// EXTERNAL MODULE: ./node_modules/faker/index.js

// EXTERNAL MODULE: ./node_modules/hash.js/lib/hash.js

// EXTERNAL MODULE: ./node_modules/is-in-browser/dist/module.js

// EXTERNAL MODULE: ./node_modules/js-sha3/src/sha3.js

// EXTERNAL MODULE: ./node_modules/jss/dist/jss.esm.js

// EXTERNAL MODULE: ./node_modules/path-browserify/index.js

// EXTERNAL MODULE: ./node_modules/qr-image/lib/qr.js

// EXTERNAL MODULE: ./node_modules/query-string/index.js

// EXTERNAL MODULE: ./node_modules/react-router/node_modules/path-to-regexp/index.js

// EXTERNAL MODULE: ./node_modules/scrypt-js/scrypt.js

// EXTERNAL MODULE: ./node_modules/shallowequal/index.js

// Emits a 'removeListener' event if and only if the listener was removed.

// Empty buffer means no match

// Empty object will remove all currently defined props

// Enable rule without name for inline styles.

// Enable/Disable typed arrays use, for testing

// Encrypted Seed

// Enough data, try updating

// Ensure readable listeners eventually get something

// Ensure that the priv won't be bigger than n, otherwise we may fail

// Ensure the hash is encoded properly before doing anything else.

// Ensure we always have a properly-encoded hash.

// Errors are being censored

// Escape control characters but not \n and \t to keep the line breaks and

// Estimate best version that can contain raw splitted segments

// Ethereum Address

// EventEmitters, we do not listen for `error` events here.

// EventTarget does not have `error` event semantics like Node

// Every written chunk gets output as-is.

// Everything else in the universe uses 'utf8', though.

// Exception thrown outside of any try block that could handle

// Execute the module function

// Explicit Legacy or EIP-2930 transaction

// Explicitly set the default value to solve a bug on IE 11.

// Explicitly set untyped transaction to legacy

// Explicitly using EIP-1559

// Exported Abstracts

// Exported Types

// Exported mostly for testing purposes, use plain name instead

// Exporting

// Expose a strict only variant of assert

// Extend the buffer to fill the data capacity of the symbol corresponding to

// Extend the buffer with leading zeroes

// Extended mode, copy masked part

// Extension does not match, so our result is the entire path

// F = E^2

// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE

// FIXME: this is strange passing in an array index.

// Fail in case no promise is returned.

// Fall through

// Fallback to a more advanced decoder

// Fallback to ordinary array

// Fallback to this default id when possible.

// Fallback: Return an object instance of the Buffer class

// Fast case

// Fast case - exact division

// Fast case, write everything using _writev()

// Fast case: bit is much higher than all existing words

// Fast length reduction

// Fast path to detect missing string, symbol, undefined and null

// Fast path to detect missing string, symbol, undefined and null values.

// Fast path: If `val` fits into a single byte, use that numeric value.

// Fatal error conditions

// Fill with NIL (= 0);

// Filter all frames existing in err.stack.

// Filter out the util module, it's inspect function is special

// Finally, add the keys which didn't appear before any key in `next`

// Finally, search either indexOf (if dir is true) or lastIndexOf

// Find Q and S, that Q * 2 ^ S = (P - 1)

// Find Round(`this` / `num`)

// Find `this` % `num`

// Find `this` / `num`

// Find a plugin for current prefix property.

// Find a position.

// Find best mask pattern

// Find length of limb in base

// Find roots of for x^2 + x + 1 in F

// Find the first non-zero entry

// Find the first occurrence of the frame.

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,

// Firefox 2

// Firefox 3.5 - 3.6 - ? < 9.0

// Firefox 52 fires "readystatechange" (xhr.readyState === 4) without final "readystatechange" (xhr.readyState === 3)

// Firefox < 3.5

// Firefox can even throw an error for invalid properties, e.g., "0".

// First chunk is a perfect match.

// First coord is always 6

// First phase

// Fix a bug on Chrome where the scroll isn't initially 0.

// Fix for https://github.com/facebook/react/issues/7769

// Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97

// Fixed-width field

// Flag the module as loaded

// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves

// Font and text properties

// For BN, call on the hex string

// For IE11 support

// For UTF-16LE we do not explicitly append special replacement characters if we

// For UTF-8, a replacement character is added when ending on a partial

// For all remaining Object pairs, including Array, objects and Maps,

// For cases like 'first argument'

// For characters with Shift JIS values from 0x8140 to 0x9FFC:

// For characters with Shift JIS values from 0xE040 to 0xEBBF

// For each key of `next`, the list of keys to insert before that key in

// For example: from='/'; to='/foo'

// For example: from='/foo'; to='/'

// For example: from='/foo/bar'; to='/foo/bar/baz'

// For example: from='/foo/bar/baz'; to='/foo/bar'

// For now when you opt-in to autoDestroy we allow

// For now, handle legacy JSON-ified values (goes away in v6)

// For server-side rendering.

// For some reason kyoku and kiyoku are flipped in node (!!).

// For some reason the animation is broken on Mobile Chrome if the size if even.

// For some reason typeof null is "object", so special case here.

// For strict comparison, objects should have

// For the native GeneratorFunction constructor, the best we can

// Force coercion to uint32. This will also coerce falsey/NaN values to 0.

// Force redgomery representation when loading from JSON

// From a fully qualified source

// From a source that does not preserve the mnemonic (e.g. neutered)

// From a source that does not preserve the path (e.g. extended keys)

// From zutil.h

// Fully-formed EIP-1559 transaction (skip getFeeData)

// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS

// GEkk bbbb cccc cccc cccc cccc cccc

// GZIP header

// GenStateExecuting and loop back for another invocation.

// Generalized Greg Maxwell's trick

// Generate a rich color object.

// Generate the relative path based on the path difference between `to`

// Generator Polynomial

// Generic Errors

// Get NAF form

// Get a function to be used for $ref replacement.

// Get a list of all the addresses

// Get basis vectors, used for balanced length-two representation

// Get headers: implemented according to mozilla's example code: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/getAllResponseHeaders#Example

// Get nodes adjacent to u...

// Get non-dir info

// Get the base type (drop any array specifiers)

// Get the cost of the edge running from u to v.

// Get the min version that can contain data

// Get the next highest power of 2 to prevent increasing hwm excessively in

// Get the r, s and v

// Go looking.

// Goto emulation

// Grid properties

// Guard instanceof against arrow functions as they don't have a prototype.

// HELPER FUNCTIONS

// HTMLStyleElement needs fixing https://github.com/facebook/flow/issues/2696

// Handle complete words

// Handle primitives properly.

// Handle rules like @font-face, which can have multiple styles in an array

// Handle string cases:

// Handle the residue

// Hardcode test to convert "flex" to "-ms-flexbox" for IE10.

// Hardened path

// Hash for function for DRBG

// Having a long line as error is better than wrapping the line for

// Helper for defining the .next, .throw, and .return methods of the

// Here's how this works:

// Hexable interface (takes piority)

// How many blockmix_salsa8 can we do per step?

// How many decimal digits can we process? (for 64-bit float, this is 15)

// However, even in such a pathological case, only a single written chunk

// However, if we're not ended, or reading, and the length < hwm,

// However, some cases require setting options to different

// IE 11

// IE 11 sometimes throws when accessing window.history.state

// IE 8 - 9 (XMLHTTPRequest)

// IE 8 - 9 with XMLHttpRequest

// IE 8 - 9: XDomainRequest#abort() does not fire any event

// IE 8 does not throw here

// IE 8 fires "onload" without "onprogress

// IE 8 fires "onload" without "onprogress"

// IE 8 has a broken Object.defineProperty that only works on DOM objects.

// IE 8 has a broken defineProperty

// IE 8 has a broken gOPD

// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')

// IE < 10 throws exception for `xhr.status` when xhr.readyState === 2 || xhr.readyState === 3

// IE < 9, Firefox 3.6

// IE can even throw an error in some cases, for e.g. style.content = 'bar'.

// IE does not have builtin `{ once: true }` support so we

// IE doesn't make error fields non-enumerable

// IE may throw if property is unknown.

// IE, Edge

// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

// Idempotent

// If "actual" and "expected" fit on a single line and they are not strictly

// If 'transition' or 'transition-property' property.

// If --no-deprecation is set, then it is a no-op.

// If _read pushed data synchronously, then `reading` will be false,

// If a locale name was passed in, find the associated wordlist

// If a rejected Promise was yielded, throw the rejection back

// If an EIP-155 v (directly or indirectly; maybe _vs) was provided, check it!

// If an exception is thrown from innerFn, we leave state ===

// If anyone actually needs to optimize this specific code path, please open a support issue on github

// If bytes.length is odd, the last 8 bits must be ignored (same as node.js)

// If context.method was "throw" but the delegate handled the

// If enqueue has been called before, then we want to wait until

// If estimated version is undefined, try with the highest version

// If it's explicitly flushing at some other time, then we use

// If it's the last chunk, or a final flush, we use the Z_FINISH flush flag

// If maybeInvokeDelegate(context) changed context.method from

// If negative, prepend the negative sign to the normalized positive value

// If no version is found, data cannot be stored

// If not specified, use min version as default

// If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.

// If parameters are populated here, they are always going to be of string type

// If selector setter is not implemented, rerender the rule.

// If setEncoding(null), decoder.encoding equals utf8

// If that was the last modal in a container, clean up the container.

// If the 'end' option is not supplied, dest.end() will be called when

// If the _vs is available, use it to populate missing s, v and recoveryParam

// If the avail_out is left at 0, then it means that it ran out

// If the bit string is fewer than four bits shorter, add only the number of 0s that

// If the bit string is more than four bits shorter than the required number of bits,

// If the bit string is shorter than the total number of required bits,

// If the character length of "actual" and "expected" together is less than

// If the curve is endomorphic, precalculate beta and lambda

// If the delegate iterator has a return method, give it a

// If the dispatched exception was caught by a catch block,

// If the expected line has a trailing comma but is otherwise identical,

// If the last diverging line is exactly one line above or if it is the

// If the last diverging line is more than one line above and the

// If the modal we are adding is already in the DOM.

// If the number of input data characters is not a multiple of two,

// If the number of input digits is not an exact multiple of three,

// If the path exists, push it onto the end.

// If the specified value doesn't exist in the second set its an not null

// If the user unpiped during `dest.write()`, it is possible

// If the user uses them, then switch into old mode.

// If the writable side ended, then we're ok.

// If there is an explicit gasPrice, make sure it matches the

// If there is an invalid prefix (including stray continuation), skip any additional continuation bytes

// If there is no 'error' event listener then throw.

// If there is no coordinate, the best we can do is return a random GPS coordinate.

// If this is our first dot, mark it as the start of our extension

// If user specifies an insertion point and it can't be found in the document -

// If we don't have the locale wordlist installed to

// If we don't know, then assume that we are waiting for one.

// If we don't see a visibility change within 100ms, it's probably a

// If we have a fn values map, it is a rule with function values.

// If we have a mnemonic, encrypt it into the JSON wallet

// If we have a style function, the entire rule is dynamic and style object

// If we have nothing in the buffer, then we want to know

// If we haven't visited v yet OR if the current known cost from s to

// If we reached a path separator that was not part of a set of path

// If we return false, then we need a drain event, so set that flag.

// If we started with zeros, strip them

// If we tried to read() past the EOF, then emit end on the next tick.

// If we're asking for more than the current hwm, then raise the hwm.

// Ignore already escaped sequences.

// Ignore extraneous popstate events in WebKit.

// Ignore the finally entry if control is not jumping to a

// Ignore the first characters.

// Ignore this change; we already setState in push/replace.

// Implement an async ._write(chunk, encoding, cb), and it'll handle all

// Important!

// Improve Gatsby support

// Improve scrollable dialog support.

// In IE 11 it is possible for document.activeElement to be null resulting

// In a transform stream, the written data is placed in a buffer.  When

// In addition to the above conditions to keep reading data, the following

// In case "actual" is an object, it should not be reference equal.

// In case both values are objects explicitly mark them as not reference equal

// In case of duplex streams we need a way to detect

// In case previous insertion fails, passed index might be wrong

// In case the modal wasn't in the DOM yet.

// In case the objects are equal but the operator requires unequal, show

// In non-strict mode we allow a slash at the end of match. If the path to

// In order to preserve the right order, we need to queue all `.addRule` calls,

// In the Shift JIS system, Kanji characters are represented by a two byte combination.

// In the case the element node is external and it is already in the DOM.

// In the context of a TransitionGroup all enters are really appears

// In the documentation, we are using `autoprefixer` to solve this problem.

// In the most browsers, rules inserted using insertRule() API will be lost when style element is removed.

// In the nodes remaining in graph that have a known cost from s,

// In true node style we process the callback on `nextTick` with all the

// In-place Multiplication

// In-place division by number

// Increment at the bit position in-line

// Indefinite length or overflow

// Initial children should all be entering, dependent on appear

// Initialize as zero

// Initialize quotient

// Inject custom styles

// Input data characters are divided into groups of two characters

// Inspect getters as we also check them when comparing entries.

// Inspected object to big (Show ~20 rows max)

// Inspired by stringToUtf8ByteArray() in closure-library by Google

// Instantiate Hmac_DRBG

// Instead, we just default to 0 for keys we don't know.

// Instead, we just default to 0 for paths we don't know.

// Insufficien funds (< value + gasLimit * gasPrice)

// Interleave the data and error correction codewords from each block

// Invalid argument (e.g. value is incompatible with type) to a function:

// Invalid bytes are ignored

// Invalid continuation byte

// Invalid ranges are not set to a default, so can range check early.

// Invert number in the field F(num)

// Is a global static MUI style?

// Is a vertical scrollbar displayed?

// Is this a base encoding type?

// It can't be configured as it's used statically for propTypes.

// It contains the same rule registered by name and by selector.

// It is a checksummed address with a bad checksum

// It is a rules container like for e.g. ConditionalRule.

// It is a string or a number as a string like '1'.

// It is also done this way as a slight performance increase instead of using a

// It is an ICAP address with a bad checksum

// It is an at-rule and it has no instance.

// It is an ugly unfortunate mess of history.

// It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)

// It is used to specify a word in context, which may differ from a stand-alone word

// It isn't worth it to make additional optimizations as in original.

// It seems a linked list but it is not

// It seems to kick-off the source order specificity algorithm.

// It should not recurse.

// It should to be noted that this function isn't equivalent to `text-transform: capitalize`.

// It will be inserted all together when .attach is called.

// It's a Transition like component

// It's a getter.

// It's an array; check it is a valid representation of a byte

// It's inspired by

// It's not a shorthand notation.

// Iterate over current buffer to convert already stored Buffers:

// Iterate over the tokens and create our regexp string.

// Iterator interface in terms of a single ._invoke method.

// J +- J

// J +- P

// JIS X 0208 gives details of the shift coded representation.

// JS ints have 32 bit, block below not needed

// JS specific, because we have no pointers

// JS specific: little magic to add zero terminator to end of string

// Javascript can handle integers safely up to 15 (decimal) digits

// Join array of chunks to single array.

// Just truncate output

// K = 0x1000003d1 = [ 0x40, 0x3d1 ]

// K = 0x13

// Keep in mind that @media is inclusive by the CSS specification.

// Keep longitude in range [-180, 180]

// Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.

// Keep track of all the replacements and prefill the map with the `BOM`

// Key might contain a unique suffix in case the `name` passed by user was duplicate.

// KeyPair(ec, { priv: ..., pub: ... })

// Keyboard accessibility for non interactive elements

// Keyframes is already prefixed. e.g. key = '@-webkit-keyframes a'

// L  M  Q  H

// LIFO order

// Last coord is always (size - 7)

// Lastly, append the rest of the destination (`to`) path that comes after

// Later, we gonna translate back the node to his original location

// Lazily create the ref replacer function just once for

// Lazy loaded

// Leading zeroes

// Legacy Transaction Fields

// Legacy Transactions and EIP-155

// Legacy and EIP-155 Transactions

// Length 28

// Length is the combined lengths of all the buffers in the list.

// Link struct types to their direct child structs

// Link structs to structs which contain them as a child

// Load all the words

// Load it

// Look up all ENS names

// Look up the keys of the object.

// Lookup each name

// Loose equal entries exist only if the string is possible to convert to

// Lots of people expect this, which we do not support, so check (See: #889)

// M = 3 * XX + a

// M = 3 * XX + a; a = 0

// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN

// Make Array say that they are Array

// Make RegExps say that they are RegExps

// Make a copy to isolate it from the object passed in

// Make dates with properties first say the date

// Make error with message first say the error

// Make functions say that they are functions

// Make it possible for After() to tell a bad dictionary from bad

// Make sure N is a power of 2

// Make sure all forms of normalization are supported

// Make sure any provided address matches this signer

// Make sure data can be encoded

// Make sure our error handler is attached before userland ones.

// Make sure the linked list only shows the minimal necessary information.

// Make sure the next tab starts from the right place.

// Make sure we actually have a stack trace!

// Make the range inclusive of the max value

// Make the string even length

// Manually shove something into the read() buffer.

// Maps each character into its kana value (the index)

// Margin properties

// Mark all ancestors as having this decendant

// Mark that a method should not be used.

// Mark the current line as the last diverging one.

// Mask properties

// Match Express-style parameters and un-named parameters with a prefix

// Match any characters still remaining.

// Match escaped characters that would otherwise appear in future matches.

// Material Design layouts are visually balanced. Most measurements align to an 8dp grid applied, which aligns both spacing and the overall layout.

// Math.pow(`this`, `num`)

// Maximum code point

// Mimic the behavior of DOM histories by

// Missing `=` should be `null`:

// Missing argument to a function:

// Missing new operator to an object

// Missing the 0x prefix

// Modals don't open on the server so this won't conflict with concurrent requests.

// Modules 10 straight summation.

// Montgomery method engine

// Montgomery points only have an `x` coordinate.

// Motion properties

// Move to ROMix 2

// Move to ROMix 6

// Multibyte; how many bytes left for this character?

// Multiply `this` by `num`

// Multiply employing FFT

// Multiply most significant byte of result by 0xC0

// Must force callback to be called on nextTick, so that we don't

// N = 1 => 6M + 6S + 9A

// N = Cpu cost, r = Memory cost, p = parallelization cost

// NAMESPACE OBJECT: ./node_modules/@walletconnect/iso-crypto/dist/esm/index.js

// NB: crc32 stored as signed 32-bit int, zswap32 returns signed too

// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,

// NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max

// NOTE: 1) `mode` can be set to `mod` to request mod only,

// NOTE: Greg Maxwell's trick, inspired by:

// NOTE: These type checking functions intentionally don't use `instanceof`

// NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb

// NOTE: `hint` is a lowest bit before trailing zeroes

// NOTE: at this stage it is known that the top bit is set

// NOTE: deprecated test name instead

// NOTE: if `extended` is present - it will be filled with destroyed bits

// NOTE: lo is 27bit maximum

// Name the function so it is clearer in the documentation

// Negate the value

// Network Error (i.e. Ethereum Network, such as an invalid chain ID)

// Network doesn't support EIP-1559...

// New properties may be added only to objects.

// New-form JSON

// No chainId provided, but the signature is signing with EIP-155; derive chainId

// No efficient endomorphism

// No error code for this since it is a Warning

// No need for transitions when the component is hidden

// No need to prefix IE/Edge. Older browsers will ignore unsupported rules.

// No need to render an empty rule.

// No need to verify that "this.length <= MAX_UINT32" since it's a read-only

// Node allows for non-padded base64 strings (missing trailing ===), base64-js does not

// Node converts strings with length < 2 to ''

// Node strips out invalid characters like \n and \t from the string, base64-js does not

// Node takes equal signs as end of the Base64 encoding

// Node's code seems to be doing this and not & 0x7F..

// Node.js LazyTransform implementation, which has a non-trivial getter for

// Nonce has already been used

// Normalize byteOffset

// Normalize byteOffset: negative offsets start from the end of the buffer

// Normalize signs

// Normalize the case and spacing in the mnemonic (throws if the mnemonic is invalid)

// Normalize the hex string

// Normalize the path

// Normalize val

// Normalize words using the transform

// Normalize zero

// Not Implemented

// Not ``this`` with ``width`` bitwidth

// Not actually done.  Need to reprocess.

// Not all elements in IE 11 have a focus method.

// Not existing properties.

// Not sure about the optimal order of these conditions:

// Not used

// Note that simple async functions are implemented on top of

// Note that this may be asynchronous, or synchronous.  Yes, it is

// Note: 0 is a valid value, means "don't call _read preemptively ever"

// Note: 0 is a valid value, means that we always return false if

// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:

// Note: Checking for the objects first improves the performance for object

// Note: The comments on the `throw` lines are intentional, they show

// Note: ["return"] must be used for ES3 parsing compatibility.

// Note: adler32 takes 12% for level 0 and 2% for level 6.

// Note: cannot use `length < K_MAX_LENGTH` here because that fails when

// Note: this accounts for both named and indexed properties on Arrays.

// Note: we can't get significant speed boost here.

// Note: we experience a small performance hit here due to JSON.parse try / catch

// Notes:

// Notes: Type tags are historical [[Class]] properties that can be set by

// Nothing to skip

// Now check this child...

// Now data ready and we can init static trees

// Number of trailing zero bits

// Numeric Fault

// O + P = P

// O(n log n) complexity we have to copy these values in a new set first.

// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF

// OR the last index of `val` in `buffer` at offset <= `byteOffset`.

// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

// Object syntax {fallbacks: {prop: value}}

// Objects enter the screen at full velocity from off-screen and

// Objects leave the screen at full velocity. They do not decelerate when off-screen.

// Obviously not all Emitters should be limited to 10. This function allows

// Once IE 11 support is dropped the focus() call can be unconditional.

// Once tested, result is cached. It gives us up to 70% perf boost.

// One-arg form: push(location)

// Only convert the first 3 values to int (i.e. not alpha)

// Only extra expected lines exist

// Only flow one buffer at a time

// Only inspect one level.

// Only keep new frames.

// Only pass in null as object!

// Only print a single input.

// Only remove lines in case it makes sense to collapse those.

// Only special HTML elements have these default behaviors.

// Only warn about passing 10 into radix once

// Opaque objects are not mutable, so safe to copy by assignment

// Opera 12

// Opera < 10: XMLHttpRequest#abort() does not fire any event

// Opera < 11 throws exception for `xhr.status` when xhr.readyState === 2

// Opera < 12

// Operational  Errors

// Optimization - zeroify

// Optimization: double the size of the anti-log table so that we don't need to mod 255 to

// Optimize the case of one listener. Don't need the extra array object.

// Optional additional data

// Optional encoding

// Optional entropy enc

// Options has been already created, now we only increase index.

// Or `num` with `this`

// Or `num` with `this` in-place

// Order is important, because we can't use insertRule API if style element is not attached.

// Order matters. We need to check Webkit the last one because

// Original styles object.

// Originally from narwhal.js (http://narwhaljs.org)

// Other elements, if background transparent, are not supported.

// Otherwise insert after the last attached.

// Otherwise make sure the next top modal is visible to a screen reader.

// Otherwise people can pipe Writable streams, which is just wrong.

// Otherwise we risk emitting data in the flow()

// Otherwise, if either of them == null they are not equal.

// Outline properties

// Overflow

// Overlong representations are otherwise "valid" code points; just non-deistingtished

// Override initialization vector

// Override the scrypt password-based key derivation function parameters

// Override the uuid

// P + (-P) = O

// P + O = P

// P + P = 2P

// P + Q = O

// P = 2 ^ N - K

// Pad values

// Pad with zeroes

// Padding

// Padding properties

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)

// Pass through all other types to `Buffer.from`

// Peel one iteration (compiler can't do it, because of code complexity)

// Perform primitive values validation

// Performs "tweedling" phase, therefore 'emulating'

// Perhaps a Uint8Array

// Permission is granted to anyone to use this software for any purpose,

// Permission is hereby granted, free of charge, to any person obtaining a

// Permission is hereby granted, free of charge, to any person obtaining a copy

// Perspective properties

// Place conditional right after the parent rule to ensure right ordering.

// Pluck off n bytes from an array of buffers.

// Plugins can create rules.

// Point on curve

// Polyfill comb

// Populate any ENS names

// Populate missing fee data

// Populate missing gasPrice

// Populates "from" if unspecified, and calls with the transation

// Populates "from" if unspecified, and estimates the gas for the transation

// Populates ALL keys for a transaction and checks that "from" matches

// Populates all fields in a transaction, signs it and sends it to the network

// Ported from https://github.com/mafintosh/end-of-stream with

// Ported from https://github.com/mafintosh/pump with

// Position properties

// Possible sign change

// Possibly expensive deep test:

// Possibly include param to function that allows user to choose between distributions.

// Preact uses an empty array as children by

// Precompute window

// Precomputed endomorphism

// Predecessor map for each node that has been encountered.

// Prefill cache with known css properties to reduce amount of

// Prefix data with character count indicator.

// Prepare data buffer

// Prepare the ripple effect.

// Prepend partial segment prefixes.

// Prevent padding issue with the Modal and fixed positioned AppBar.

// Prevent the app bar to be visible on each printed page.

// Prevent the error stack from being visible by duplicating the error

// Prevent this error from causing an UnhandledPromiseException

// Prime numbers with efficient reduction

// Primitive types cannot have properties

// Private Key

// Process pending data in blocks

// Properties that cannot be correctly detected using the

// Property "abbr_context" is optional, if not set then "abbr" will be used instead

// Property "wide_context" is optional, if not set then "wide" will be used instead

// Protocols

// Provide a hook for user-specified inspect functions.

// Provide default props

// Provide the theme to the wrapped component.

// Proxy hash functions to the main object

// Pseudo-Mersenne prime

// Public Key

// Public interface

// Pure assertion tests whether a value is truthy, as determined

// Push carried bits as a mask

// Push the current path onto the tokens.

// Put the replacement character into the output

// ROMix - 1

// ROMix - 10

// ROMix - 2

// ROMix - 3

// ROMix - 6

// ROMix - 7

// ROMix - 8 (inner)

// Radius of the Earth (http://nssdc.gsfc.nasa.gov/planetary/factsheet/earthfact.html)

// Rather than returning an object with a next method, we keep

// Re-assign `events` because a newListener handler could have caused the

// React 15 compat

// React v16.11 and below

// React v16.12 and above

// Readable class this is attached to

// Recursively check children

// Reduction context

// Regardless of whether this script is executing as a CommonJS module

// Remove all ending lines that match (this optimizes the output for

// Remove cache for benchmark tests or return property from the cache.

// Remove cache for benchmark tests or return value from cache.

// Remove common factor of two

// Remove leading `0` from `this`

// Remove props.

// Remove the lastEventId parameter if it's already part of the request URL.

// Remove the length prefix from the char

// Remove the margin in Safari

// Remove the matching element to make sure we do not check that again.

// Remove the padding in Firefox

// Renderable is defined if StyleSheet option `link` is true.

// Replace all $refs.

// Replace all & by the parent or prefix & with the parent.

// Replace all ENS names with their address

// Replace all decoded components

// Replace format info bits with correct values

// Replace the domain verifyingContract if needed

// Replaces all address types with ENS names with their looked up address

// Represent k1, k2 in a Joint Sparse Form

// Represent num in a w-NAF form

// Request header field Last-Event-ID is not allowed by Access-Control-Allow-Headers.

// Requesting an unsigned transation

// RequireJS/AMD

// Reserved for UTF-16 surrogate halves

// Reset

// Reset browser default style.

// Reset default value

// Reset on each call to make sure we handle dynamically set environment

// Reset on touch devices, it doesn't add specificity

// Reset styles for current property.

// Reset the name to the actual name.

// Reset the name.

// Resetting context._sent for legacy support of Babel's

// Resolve default props, code borrow from React source.

// Resolve incomplete/relative pathname relative to current location.

// Resolves . and .. elements in a path with directory names

// Respect the "view", i.e. byteOffset and byteLength, without doing a copy

// Resume execution at the desired location (see delegateYield).

// Rethrow the error if it exists to avoid swallowing it

// Return a rejected promise if `promiseFn` throws synchronously.

// Return already prefixed value without prefixing.

// Return an augmented `Uint8Array` instance

// Return an augmented `Uint8Array` instance, for best performance

// Return an iterator with no values.

// Return custom CSS variable without prefixing.

// Return early if start > this.length. Done here to prevent potential uint32

// Return false from a transition hook to cancel the transition.

// Return false if setter was not successful.

// Return false if value not supported.

// Return max number of storable codewords

// Return negative clone of `this`

// Return negative clone of `this` % `red modulo`

// Return not function with Error if BigInt not supported

// Return number of used bits in a BN

// Return only lowers bits of number

// Return only lowers bits of number (in-place)

// Return the exports of the module

// Returns a byte with the LSB bits set

// Returns a byte with the MSB bits set

// Returns a function which generates unique class names based on counters.

// Returns a modified function which warns once by default.

// Returns a new copy of object, such that no properties may be replaced.

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a

// Returns binary-reversed representation of `x`

// Returns only complete characters in a Buffer

// Reverse the bytes

// Ripple is used for user feedback (e.g. click or press) so we want to apply styles with the highest priority

// Romanian

// Root = (-1 +- Sqrt(-3)) / 2

// Round down

// Round up

// Rule 1

// Rule 2

// Rule 3

// Rule 4

// Rules registry for access by .get() method.

// Run EGCD, until r(L + 1) < aprxSqrt

// Run the smix state machine until completion

// Run up to 1000 steps of the first inner smix loop

// Run up to 1000 steps of the second inner smix loop

// SVG-related properties

// Sadly it is not possible to detect corresponding values properly in case the

// Sadly this is not cacheable as some libraries bundle their own

// Safari 5.0 bug

// Safari 5.1.7, Opera 12

// Save printer ink.

// Say we render `open={false}` -> `open={true}` but never commit.

// Scan 24-bit chunks and add them to the number

// Schedule the next steps

// Search for a byte value [0-255]

// Search for a child object with a case-insensitive matching key

// Second phase

// Secondary text.

// Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.

// Section 4.4

// Section: 4.1.3:

// See above loop for invalid contimuation byte

// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using

// See https://github.com/ReactTraining/history/pull/289

// See https://github.com/facebook/regenerator/issues/274 for more details.

// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring

// See state defs from inflate.js

// See: https://eips.ethereum.org/EIPS/eip-1559

// See: https://en.wikipedia.org/wiki/Base64#URL_applications

// See: https://en.wikipedia.org/wiki/International_Bank_Account_Number

// See: https://github.com/beatgammit/base64-js/issues/42

// See: https://github.com/dchest/scrypt-async-js

// See: https://github.com/ethereum/pyethsaletool

// See: https://github.com/feross/buffer/issues/154

// See: https://github.com/feross/buffer/issues/166

// See: https://github.com/feross/buffer/issues/219

// See: https://www.ietf.org/rfc/rfc4122.txt (Section 4.4)

// See: https://www.npmjs.com/package/scryptsy

// See:https://tools.ietf.org/html/rfc2315

// Send the result to the callback

// Set `bit` of `this`

// Set limit ~ twice less than 5552, to keep

// Set or check the _vs

// Set or check the recid

// Set or check the s

// Sets and maps don't have their entries accessible via normal object

// Setting context._sent for legacy support of Babel's

// Shadow properties

// Shift by 9 limbs

// Shift the checksum into the word indices

// Shift the register

// Shift-left

// Shift-left in-place

// Shift-right

// Shift-right in-place

// Shims for environments that are missing some required constants and functions

// Short-cut

// Shortcut `elliptic.ec(curve-name)`

// Shortcut for `elliptic.ec(elliptic.curves.curveName)`

// Shorten key, if needed

// Should .destroy() be called after 'end' (and potentially 'finish')

// Should .destroy() be called after 'finish' (and potentially 'end')

// Should close be emitted on destroy. Defaults to true.

// Simplified versions from Node, changed for Buffer-only usage

// Since JS doesn't have multiple prototypal inheritance, this class

// Since tags can be altered, they only serve fast failures

// Skip configuration where the position is screen size invariant.

// Skip empty entries

// Skip if position is occupied by finder patterns

// Skip leading zeroes

// Slow case, write chunks one-by-one

// Small size is preferable.

// Smaller components, such as icons and type, can align to a 4dp grid.

// So copying it here would give us the same result in the wrapper as well.

// So the animation always start from the start.

// So we don't have to use the `withTheme()` Higher-order Component.

// So we take precedent over the style of a native <a /> element.

// So write code to minimize size - no pregenerated tables

// So, if this is awaiting a drain, then we just call it now.

// So, the steps are:

// Some random properties

// Some simple transforms that sort out most of the order

// Some sort of bad response from the server

// Some type of object without properties can be shortcutted.

// Some versions of I.E. have different rules for clearTimeout vs setTimeout

// Something else, but behaves like an array (maybe a Buffer? Arguments?)

// Sort how the Japanese list is sorted

// Sort object keys, not values

// Sorted ASC by size. That's important.

// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1799

// Source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1847

// Source: https://unicode.org/cldr/trac/browser/trunk/common/main/pt.xml?rev=14409#L1811

// Source: https://unicode.org/cldr/trac/browser/trunk/common/main/pt_PT.xml?rev=14409#L491

// Special case: looking for empty string/buffer always fails

// Special handle errors to make sure the name and the message are compared

// Split the array in 2 parts

// Square root over p

// Start the next word

// Store a copy of SharedArrayBuffer in case it's deleted elsewhere

// Strict equal with identical objects that are not identical by reference.

// StringDecoder provides an interface for efficiently splitting a series of

// Strip both numbers to approximate shift value

// Strip off the negative sign

// Struct

// Style sheet was created without link: true and attached, in this case we

// Sub-classes MAY override these

// Sub-classes MUST call super

// Sub-classes SHOULD leave these alone

// Subclasses may override this

// Subset of jss-preset-default with only the plugins the Material-UI components are using.

// Subtract 0x8140 from Shift JIS value

// Subtract 0xC140 from Shift JIS value

// Subtract `num` from `this`

// Subtract `num` from `this` in-place

// Subtract plain number `num` from `this`

// Subtraction overflow

// Sum all words with the same `i + j = k` and accumulate `ncarry`,

// Support CSSTOM.

// Support decoding URL-safe base64 strings, as Node.js does.

// Support space separated values via `[['5px', '10px']]`.

// Surrogate Pair

// Swallow the event, in case someone is listening for the escape key on the body.

// Swap `a` and `b` to make `a` always bigger than `b`

// Switch to use dynamic table

// T = M ^ 2 - 2*S

// T = M^2 - 2 * S

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS

// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

// TODO deflate

// TODO v5: consider to make it private

// TODO v5: remove

// TODO(BridgeAR): Improve the output by showing `null` and similar.

// TODO(BridgeAR): Write a test for these two error cases

// TODO(BridgeAR): `breakLength` should be limited as soon as soon as we

// TODO(indutny): implement me

// TODO(indutny): it may be reasonable to omit it for users who don't need

// TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.

// TODO: 2 or 1 bytes?

// TODO: Accept env to always show the full error.

// TODO: If another transition starts while we're still confirming

// TODO: We could probably make this more reliable by

// TODO: change all these methods that accept a boolean to instead accept an options hash.

// TODO: defer error events consistently everywhere, not just the cb

// TODO: have ability to return specific type of word? As in: noun, adjective, verb, etc

// TODO: implement either a gaussian/uniform distribution of points in cicular region.

// TODO: may be {}

// TODO: remove fallback for next major

// TODO: thenables are checked up until they have the correct methods,

// Take note if the _read call is sync or async (ie, if the read call

// Taken from here and modified for better browser support

// Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js

// Takes a background color and returns the text color that maximizes the contrast.

// Temporary arrays

// Test for A's keys different from B.

// Test for strict equality first.

// Test if n bit is set

// Test prefixed value.

// Test value as it is.

// Text hints.

// That we got here means that the readable side wants more data.

// That's alias to max_lazy_match, don't use directly

// The (right-most) trimmed path component is exactly '..'

// The ._invoke method unifies the implementations of the .next,

// The AssertionError is defined in internal/error.

// The QR code specification says to use byte-wise modulo 100011101 arithmetic.

// The SHA256 and PBKDF2 implementation are from scrypt-async-js:

// The Transform stream has all the aspects of the readable and writable

// The above copyright notice and this permission notice shall be included

// The above copyright notice and this permission notice shall be included in

// The background color of a disabled action.

// The background colors used to style the surfaces.

// The block cipher

// The character count indicator is a string of bits that represents the

// The character count indicator must be placed after the mode indicator

// The character value of the first character is multiplied by 45

// The character value of the second digit is added to the product

// The color of a disabled action.

// The color of a selected action.

// The color of an active action like an icon button.

// The color of an hovered action.

// The color used to divide different elements.

// The colors used to indicate the successful completion of an action that user triggered.

// The colors used to present information to the user that is neutral and not necessarily important.

// The colors used to represent interface elements that the user should be made aware of.

// The colors used to represent potentially dangerous actions or important messages.

// The colors used to represent primary interface elements for a user.

// The colors used to represent secondary interface elements for a user.

// The colors used to style the action elements.

// The colors used to style the text.

// The computed code point is outside the range for UTF-8

// The conditions for reading more data are (one of):

// The context.catch method must only be called with a location

// The delegate iterator is finished, so forget it and continue with

// The element was already mounted.

// The equality assertion tests shallow, coercive equality with ==.

// The equivalence assertion tests a deep equality relation.

// The following is an adaptation of scryptsy

// The gas limit could not be estimated

// The grey colors.

// The handler doesn't take event.defaultPrevented into account:

// The input data string is divided into groups of three digits,

// The maximum size for an array is 2 ** 32 -1.

// The modal might be closed before it had the chance to be mounted in the DOM.

// The module cache

// The most important text.

// The network supports EIP-1559!

// The non-equality assertion tests for whether two objects are not

// The non-equivalence assertion tests for any deep inequality.

// The only available byte was already read.

// The options are optional, so adjust the call as needed

// The order SHOULD be:

// The pair must have equivalent values for every corresponding key.

// The pair must have the same number of owned properties.

// The palette type, can be light or dark.

// The private key

// The public key

// The replacement fee for the transaction is too low

// The require function

// The root entry object (effectively a try statement without a catch

// The sharp curve is used by objects that may return to the screen at any time.

// The splitSignature will ensure the transaction has a recoveryParam in the

// The stream needs another readable event if

// The string is an overlong reperesentation

// The string is too short to process the expected codepoint

// The sum is then stored as 11-bit binary number

// The touch interaction occurs too quickly.

// The transaction was replaced by one with a higher gas price

// The user chose an optional scheme

// The util.inspect default values could be changed. This makes sure the

// The way the read on `nodeToRestore` is setup could make this actually safe.

// The whatwg spec defines how the browser should behave but does not explicitly mention any events:

// The whole point behind this internal module is to allow Node.js to no

// The wrapper receives only user supplied props, which could be a subset of

// There are some unspecified tags in the wild too (e.g. typed array tags).

// There chould be multiple formats

// There is no actual difference between INFLATE and INFLATERAW

// There is no sheet when the renderer is used from a standalone StyleRule.

// There was no camel case in place

// These blocks will be replaced with correct values later in code.

// These byte values are shifted from the JIS X 0208 values.

// These options can be provided separately as readableXXX and writableXXX.

// This allows the user to escape special characters that won't transform.

// This approach will likely result in a higher density of points near the center.

// This behaves neither like String nor Uint8Array in that we set start/end

// This byte runs us past the end of the string, so just jump to the end

// This entry need to be wrapped in an IIFE because it need to be in strict mode.

// This environment has a native %IteratorPrototype%; use it instead

// This function is designed to be inlinable, so please take care when making

// This implementation is based heavily on node's url.parse

// This is *not* part of the readable stream interface.

// This is a bit of a hack. We have to start listening for location

// This is a hack to make sure that our error handler is attached before any

// This is a lazily initiated Set of entries which have to be compared

// This is a polyfill for %IteratorPrototype% for environments that

// This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}

// This is reduced incarnation of the binary EEA

// This is relevant for synchronous Transform streams

// This is the _flush function called by the transform class,

// This is the most common easing curve.

// This is the part where you do stuff!

// This is to work around cases where hwm=0, such as the repl.

// This limits the `actual` and `expected` property default inspection to

// This means that when a number is 256 or larger, it should be XORed with 0x11D.

// This module should not be running in strict mode, so the above

// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)

// This returns true if the highWaterMark has not been hit yet,

// This should ignore "if", but that doesn't work here??

// This shouldn't be necessary, but there are weird race conditions with

// This software is provided 'as-is', without any express or implied

// This thing manages the queue of requests, and returns

// This time we are not capturing the char before `[]`

// This wallet format is weird... Convert the binary encoded hex to a string.

// This way, back-pressure is actually determined by the reading side,

// This way, we can get a performance boost.

// This will be used to encrypt the wallet (as per Web3 secret storage)

// This will remove any duplicated frames from the error frames taken

// Though IE will keep them and we need a consistent behavior.

// Timeout

// To avoid a copy, use the typed array's underlying ArrayBuffer to back new Buffer

// To avoid creating an additional object, we just hang the .value

// To avoid recursion in the case that type === "newListener"! Before

// To be able to handle cases like:

// To detect a tab/window switch, we look for a blur event followed

// To support composition of theme.

// Tonelli-Shanks algorithm (Totally unoptimized and slow)

// Too many arguments

// Total codewords for this QR code version (Data + Error correction)

// Total number of error correction codewords

// Touche devices

// Trace((stderr,"\nbit length overflow\n"));

// Trace((stderr,"code %d bits %d->%d\n", m, tree[m].Len, bits));

// Tracev((stderr, "\ndist data: dyn %ld, stat %ld", s->opt_len,

// Tracev((stderr, "\nlit data: dyn %ld, stat %ld", s->opt_len,

// Tracev((stderr, "\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u ",

// Tracks if either the rendered classes or classes prop has changed,

// Trailing zero bytes are okay, though, since they are frequently

// Transform properties

// Transforms for normalizing (sort is a not quite UTF-8)

// Transition properties

// Translate into more windowed form

// Translate the node so he can't be seen on the screen.

// Trick from scrypt-async; if there is a setImmediate shim in place, use it

// Trim any leading backslashes

// Trim off extra bytes after placeholder bytes are found

// Trim to smallest even-length string

// True if the error was already emitted and should not be thrown again

// Truncate at 3 digits

// Try start flowing on next tick if stream isn't explicitly paused

// Try the built in decoder first

// Try to avoid Projective points, if possible

// Try to decode the entire string first

// Try to find a comment placeholder if registry is empty.

// Try to insert before the next higher sheet.

// Try to match the explicit extension

// Try webkit fallback.

// Try/catch helper to minimize deoptimizations. Returns a completion

// Trying to use the custom `instanceof` for Writable here will also break the

// Two-arg form: push(path, state)

// Typed Transactions (EIP-2718)

// Typed arrays and buffers are checked by comparing the content in their

// U = (M + E)^2 - MM - EE - T

// UNUSED EXPORTS: createMuiTheme

// UNUSED EXPORTS: sheetsManager

// USE OR OTHER DEALINGS IN THE SOFTWARE.

// UTF-16LE typically needs two bytes per character, but even if we have an even

// UTF-8 strings may not contain UTF-16 surrogate pairs

// Undo previously applied mask

// Unhandled 'error' event

// Unhandled stream error in pipe.

// Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/

// Unix :) . Don't detect, use this default.

// Unknown Error

// Unshift should *always* be something directly out of read()

// Unsigned comparison

// Unsupported Operation

// Update and add props.

// Upgrade transaction from null to eip-1559

// Usage:

// Use '|' instead of '+' to make sure that result is signed

// Use Byte mode as default

// Use Mode.BYTE if Kanji support is disabled

// Use Montgomery, when there is no fast reduction for the prime

// Use a for loop to avoid recursion

// Use a negative lookahead to match only capturing groups.

// Use a user provided seed if it is an array or number

// Use built-in when available, missing from IE11

// Use complement of `s`, if it is > `n / 2`

// Use computed style, here to get the real padding to add our scrollbar width.

// Use div by default.

// Use flat array of DOUBLE size, with interleaved fata,

// Use higher error correction level as default

// Use memos to handle cycles.

// Use ordinary array, since untyped makes no boost here

// Use recid and v to populate each other

// Use the random value for client-side rendering only.

// Use the same logic as

// Use untyped array for more convenient processing later

// Used by `getContrastText()` to maximize the contrast between

// Used by the functions below to shift a color's luminance by approximately

// Used to avoid issues with jss-plugin-expand integration.

// Used to ensure correct rules order.

// Used to filter out mouse emulated events on mobile.

// Useful for many curves

// Using a hash computation over an array iteration could be faster, but with only 28 items,

// Using components as a low-level styling construct can be simpler.

// Using legacy gasPrice property on an eip-1559 network,

// Utils

// Validate signature

// Validate the data structures and types

// Validate the domain fields

// Validates as many continuation bytes for a multi-byte UTF-8 character as

// Value is empty and wasn't defined before.

// Value with a vendor prefix.

// Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss

// Variable-width (with a maximum)

// Verify that the code above has been dead code eliminated (DCE'd).

// Verify the computed list matches the official list

// Version 0.1 x-ethers metadata must contain an encrypted mnemonic phrase

// Very short reduction

// WARNING: Potentially unsafe in concurrent mode.

// WARNING: Prevents the instance from being garbage collected. Should only

// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

// Warning: maxLength not taken into account in base64Write

// We DO NOT return the promise as it gives the user a false sense that

// We allow 0, but anything false-ish uses the default 1

// We are going to remove this value.

// We are going to use the encoder to visit all the base values

// We can push more data if we are below the highWaterMark.

// We can use a shorthand class name, we never use the keys to style the components.

// We can't add rules to a detached style node.

// We can't use it server-side.

// We can't use window.location.hash here because it's not

// We cannot tell if a hashchange was caused by a PUSH, so we'd

// We cannot tell if a hashchange was caused by a REPLACE, so we'd

// We disable the focus ring for mouse, touch and keyboard users.

// We do this comparison to avoid unneeded `rule.prop()` calls, since we have the old `style` object here.

// We don't expect any of the above to throw, but better to be safe.

// We don't need to extract functions on each style update, since this can happen only once.

// We don't support function values inside of function rules.

// We don't want to display the ripple for touch scroll events.

// We get here if `from` is the exact base path for `to`.

// We get here if `from` is the root

// We get here if `to` is the exact base path for `from`.

// We get here if `to` is the root.

// We go 1 magnitude less, for safety

// We have an EIP-155 transaction (chainId was specified and non-zero)

// We have no pointers in JS, so keep tables separate

// We have now written a state that wasn't committed. But no committed effect

// We have separate tables & no pointers. 2 commented lines below not needed.

// We have tests that rely on errors being emitted

// We have to check if a primitive value is already

// We have to get the result again. The lines were all removed before.

// We matched the extension, so mark this as the end of our path

// We may want to compute this more accurately in the future,

// We might render an empty child.

// We need to auto-detect the intended type of this transaction...

// We need to check if there is someone still listening to

// We need to clone array because if we modify the index somewhere else during a loop

// We need to defer via nextTick because if .destroy(err) is

// We need to do that only once.

// We need to extract function values from the declaration, so that we can keep core unaware of them.

// We need to get fee data to determine things

// We need to ignore the next contain as

// We need to render the container without children first.

// We need to reset the rule counter for SSR for each request.

// We need to run the plugins in case new `style` relies on syntax plugins.

// We need to save the original decl before creating the rule

// We need to update the position of the drawer when the direction change and

// We need to use `force: true` because `rule.style` has been updated during onUpdate hook, so `rule.prop()` will not update the CSSOM rule.

// We only handle the first word.

// We only support the mainnet values for now, but if anyone needs

// We only want to reference the top level rules, deleteRule API doesn't support removing nested rules

// We prevent up to two map.has(x) calls by directly retrieving the value

// We pushed a chainId and null r, s on for hashing only; remove those

// We rely on a new `style` ref in case it was mutated during onUpdate hook.

// We saw a non-dot and non-path separator before our dot, so we should

// We saw a non-dot character immediately before the dot

// We saw the first non-path separator

// We saw the first non-path separator, mark this as the end of our

// We saw the first non-path separator, remember this index in case

// We should not do anything if required serverside.

// We still want to show ripple effect.

// We take 64 bytes:

// We test every property on vendor prefix requirement.

// We use React.Children.forEach instead of React.Children.toArray().find()

// We use a timer in order to only show the ripples for touch "click" like events.

// We want only prefixable values here.

// We will redeploy the sheet once user will attach it.

// Weierstrass/Edwards points on the other hand have both `x` and

// When a yielded Promise is resolved, its final value becomes

// When new generator function is created, rule counter is reset.

// When rendering in a static context,

// When rule is being stringified before selector was defined.

// When rules are inserted using `insertRule` API, after `sheet.detach().attach()`

// When the callback is used in an async write, the callback's

// When the writable side finishes, then flush out anything remaining.

// When there is no prior location and pathname is empty, set it to /

// When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally

// When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally

// While the output is causally related to the input, it's not a

// Why replace a native EventSource ?

// Width and height properties

// Will be empty if link: true option is not set, because

// With Edge, Safari and Firefox, no focus related events are fired when the focused area stops being a focused area

// Within the body of any async function, `await x` is transformed to

// Without it, IE will have a broken source order specificity if we

// Workaround problem in Float point arithmetics for e.g. 6681493 / 0.01

// Works with iframes and any node types.

// Writable ctor is applied to Duplexes, too.

// Writable.

// Write current value to cache.

// Writing a hex string, for example, that contains invalid characters will

// X3 = 4 * (X1 * EE - 4 * YY * U)

// X3 = F - 2 * D

// X3 = T

// X3 = alpha^2 - 8 * beta

// XDomainRequest#abort removes onprogress, onerror, onload

// XMLHttpRequest#getAllResponseHeaders returns null for CORS requests in Firefox 3.6.28

// XX = X1^2

// XXX Is there any way to tell if the number is odd without converting it

// XXX This code assumes that zero is always zero in red

// XXX: Do we actually need both `costs` and `open`?

// Xor `num` with `this`

// Xor `num` with `this` in-place

// Y3 = 8 * Y1 * (U * (T - U) - E * EE)

// Y3 = E * (D - X3) - 8 * C

// Y3 = M * (S - T) - 8 * YYYY

// Y3 = alpha * (4 * beta - X3) - 8 * gamma^2

// YY = Y1^2

// Z = 1

// Z3 = (Y1 + Z1)^2 - gamma - delta

// Z3 = (Z1 + E)^2 - ZZ - EE

// Z3 = 2 * Y1

// Z3 = 2 * Y1 * Z1

// Z3 = 2*Y1

// Z_FULL_FLUSH. Otherwise, use Z_NO_FLUSH for maximum compression

// Zero-extend key to provide enough entropy

// Zeroify references

// [browserify] This triggers on certain types in IE (Map/Set) so we don't

// _prime_ fields F(p) at a maximal speed

// _read(n) is called, it transforms the queued up data, calling the

// _transform does all the work.

// `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).

// `_writableState` that would lead to infinite recursion.

// `catch` handler.

// `costs` in that it provides easy access to the node that currently has

// `hasOwn.call(value, "__await")` to determine if the yielded value is

// `msg` could be array or buffer

// `realHasInstance` is necessary because using plain `instanceof`

// `slice` is the same for buffers and strings.

// `this` * `this`

// `this` * `this` in-place

// `y` coordinates.

// `yield regeneratorRuntime.awrap(x)`, so that the runtime can test

// a > b

// a duplex stream is just a stream that is both readable and writable.

// a few lines down. This is needed to support once('readable').

// a flag to be able to tell if the event 'readable'/'data' is emitted

// a flag to be able to tell if the onwrite cb is called immediately,

// a flag to know if we're processing previously buffered items, which

// a flag to see when we're in the middle of a write.

// a nextTick recursion warning, but that's not so bad.

// a passthrough stream.

// a pathological inflate type of transform can cause excessive buffering

// a read from the buffer.

// a regular number and not NaN.

// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding

// a terminator of up to four 0s must be added to the right side of the string.

// a transform stream is a readable/writable stream where you do

// a zlib stream might take multiple plain-text writes(), and then

// a) The same built-in type tags

// a) The same number of owned enumerable properties

// a.length > b.length

// a^0 x^0

// a^0 x^1 + a^0 x^0

// above, designated to invert members of the

// abstract method.  to be overridden in specific implementation classes.

// accessing global.localStorage can trigger a DOMException in sandboxed iframes

// accidentally pass it on to the delegate.

// actions that shouldn't happen until "later" should generally also

// add a comma at the end of the actual line. Otherwise the output could

// add binary data sequence to buffer

// add four 0s to the end.

// added to it. This is a useful default which helps finding memory leaks.

// adding it to the listeners, first emit "newListener".

// adler32(0, Z_NULL, 0)

// after error

// after readable has been emitted but before I/O (nextTick) to

// all copies or substantial portions of the Software.

// all nested rules within the sheet.

// all other browsers

// all previous Promises have been resolved before calling invoke,

// allocate the first CorkedRequest, there is always

// allows for nested Transitions

// almost all possible cases.

// already have a bunch of data in the buffer, then just trigger

// already have an existing method we want to call, so there's no need

// also add dots to indicate skipped entries.

// also ensures that the minifier will not anonymize the function.

// also returned false.

// also, that means that the chunk and cb are currently

// alternative to using Object.keys for old browsers

// always follow error

// amount of input, and end up with a very large amount of output.  In

// an `originalValue` property. Here, when we detect this, we

// an almost straight conversion from the original program, mt19937ar.c,

// an error, then that'll put the hurt on the whole operation.  If you

// and .done properties off the next function object itself. This

// and 00010001 (0x11) alternately.

// and `from`

// and add least significant byte to product

// and array tools dependencies.

// and called read() to consume some data.  that may have triggered

// and checking for undefined. The map can only contain numbers, so it is

// and data mode

// and each group is converted to its 10-bit binary equivalent.

// and encoded as 11-bit binary codes.

// and hitting left arrow to move the cursor in a text input etc.

// and in Firefox 3.6

// and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54

// and modified a little at july 20, 2006, but there are not any substantial differences.

// and must be a certain number of bits long, depending on the QR version

// and optional suffixes. Matches appear as:

// and reset the cache.

// and retrieved using Object.prototype.toString.call(obj) in JS

// and that the callback throwing will reject the promise.

// and undefined/non-string values are only allowed in object mode.

// and verify non-missing s, v and recoveryParam

// and we need to re-evaluate how much data we can return to the user.

// another read() call => stack overflow.  This way, it might trigger

// any actions that shouldn't happen until "later" should generally also

// any necessary setup in a predictable way. This predictability

// apply round transforms

// aprxSqrt >= sqrt(this.n)

// arbitrary, and perhaps not very meaningful.

// architecture yet.

// are needed to reach the required number of bits.

// are running

// argument that corresponds to a known catch block.

// aria-hidden because the dom element doesn't exist either

// arising from the use of this software.

// array.shift()

// as soon as a modal is adding its modalRef is undefined. it can't set

// as soon as we *do* get something into the buffer.

// as the hot path ends with doWrite

// as well.

// ascending copy from start

// assert.doesNotThrow does not accept objects.

// assign options

// assign the function from the module.function namespace

// assignment should always work unless something is misconfigured. Just

// assume utf8

// async functions in terms of async generators, it is especially

// async version

// at the start of calling end()

// at this point, the user has presumably seen the 'readable' event,

// auto-detect header.

// avoid extra slice()

// b = National bank code (alpha)

// b = min-length(num, this)

// b) The same prototypes.

// b) The same set of keys/indexes (although not necessarily the same order)

// backward compatibility, the user is explicitly

// backwards compatibility.

// bad specificity issues may appear.

// base64 is 4/3 + up to two characters of the original data

// based on awesome response : http://stackoverflow.com/questions/43044/algorithm-to-randomly-generate-an-aesthetically-pleasing-color-palette

// basically just the most minimal sort of Transform stream.

// be a valid example of a transform, of course.)

// because JS does not support effective

// because cache plugin needs to use it as a key to return a cached rule.

// because it is fragile and can be easily faked with `Object.create()`.

// because otherwise some prototype manipulation in

// before there was *not* enough.

// before using this version, create at least one instance of MersenneTwister19937 class, and initialize the each state, given below in c comments, of all the instances.

// behavior. The continuation byte check is included three times in the case

// behaviour of the recursive algorithm

// being processed, so move the buffer counter past them.

// best way to handle this.

// both the actual and expected values to the assertion error for

// bottom-left

// bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390

// browsers not implementing :focus-visible will throw a SyntaxError

// buffered _write cb's as it consumes chunks.  If consuming a single

// buffered up.  When you call read(), that calls _read(n) until

// buffers into a series of JS strings without breaking apart multi-byte

// but according to documentation, the `then` method should receive

// but that's not a great name for it, since that implies a thing where

// but we can use a longhand property instead.

// by !!value.

// byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer

// bytes

// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in

// bytesXX

// c = Account number

// c) Equivalent values for every corresponding key/index

// cache prefill method.

// cached from whatever global is present so that test runners that stub it

// calculate data length

// call cb(er, data) where data is <= n in length.

// call internal read method

// call invoke immediately, without waiting on a callback to fire,

// call the write() cb

// callback(error, progress, key)

// called, the error will be emitted via nextTick, and

// calling preventDefault in keyUp on a <button> will not dispatch a click event if Space is pressed

// can match lots of different string values (e.g., 1n == '+00001').

// can stay in memory longer than the callback and buffer are needed.

// can-promise has a crash in some versions of react native that dont have

// case that the signTransaction function only adds a v.

// cause everything after the first invalid character to be ignored. (e.g.

// cause the system to run out of memory.

// causing a render after a cancelled POP.

// chance to clean up.

// change. The NodeError classes here all expose a `code` property whose

// changes here in the constructor in case there are any <Redirect>s

// changes to the function body.

// character.

// characters.

// check that this isn't another touchstart due to multitouch

// check_match(s, s.strstart, s.match_start, s.match_length); // for debug only

// cleanup event handlers once the pipe is broken

// clicking a checkbox to check it, hitting a button to submit a form,

// coercion fail below.

// common error handler for messages

// compact is optional argument

// comparison for now.

// component

// component at different URLs.

// compress password if it's longer than hash block length

// compress/decompress a string or buffer in one step.

// conditions prevent the data from being read:

// consistent across browsers - Firefox will pre-decode it!

// console.log('attempting to parse', str);

// console.log('conflict', result);

// console.log('entering', key)

// console.log('leaving', key)

// console.log('unchanged', key)

// console.log(now - startTime)

// const fn = props => {

// const handlers = styles.reduce((acc, style) => {

// const naming scheme zlib uses.

// contains buffers or objects.

// context is the `req` object that was created. The req object

// context.dispatchException(context.arg) call above.

// context.method was "next", forget context.arg since it has been

// continuation byte. If an invalid byte is detected, -2 is returned.

// continuing only obscures problems.

// convert `msg` to array

// convert digits to a string

// copies of the 'buffer' package in use. This method works even for Buffer

// copy of this software and associated documentation files (the

// copy over the last transition props;

// copy values into round key arrays

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)

// cost from s to v that may or may not be less than the current

// cost of u to v across e), update v's cost in the cost list and

// could still be different because they will be interpreted differently).

// count buffered requests

// create an irreducible generator polynomial

// created ones.

// current iteration.

// current line is at least line three, add some of the former lines and

// d) For Sets and Maps, equal contents

// deal in the Software without restriction, including without limitation the

// deal with leading zeros

// decode the last character properly.

// decryption round keys

// deeply ugly to write APIs this way, but that still doesn't mean

// default options

// default symbol is '#'

// default values required for calling method without arguments

// default, so use null if that's the case.

// defer the callback if we are being called synchronously

// define __esModule on exports

// define getter functions for harmony exports

// delegate iterator, or by modifying context.method and context.arg,

// delta = Z1^2

// deprecated, use svg_object method

// descending copy from end

// designed to be sync/async agnostic.

// destroy(err, cb) is a private API

// determiner: 'must be' or 'must not be'

// dictionary = dictionary.slice(dictLength - s.w_size);

// didn't get any data, stop spinning.

// display purposes.

// distribute, sublicense, and/or sell copies of the Software, and to permit

// do check in _tr_init()

// do is to check its .name property.

// do not inherit user-select (it may be `none`)

// doWrite is almost always async, defer these to save a bit of time

// don't break things.  But we need to wrap it in a try catch in case it is

// don't enable it for binary compatibility

// don't hoist over string (html) components

// don't leave dangling pipes when there are errors.

// don't natively support it.

// don't skip over falsy values in objectMode

// drain event flag.

// e.g. https://bugzilla.mozilla.org/show_bug.cgi?id=559561.

// e.g. options.readableObjectMode vs. options.writableObjectMode, etc.

// effect.

// emit 'drain' before the write() consumer gets the 'false' return

// emit 'readable' now to make sure it gets picked up.

// emit a single compressed chunk some time in the future.

// emit an error with process.nextTick

// emit prefinish if the only thing we're waiting for is _write cbs

// emit removeListener for all listeners on all events

// empty string to avoid regexp issues

// encode to utf16 (surrogate pair dance)

// encode utf8

// encoding is 'binary' so we have to make this configurable.

// encryption round keys

// end on a partial character, we simply let v8 handle that.

// end up in an overlapped onwrite situation.

// enqueue has not been called before, then it is important to

// equal with !=.

// equal, check further special handling.

// equivalence is determined by having:

// error messages contain the necessary information nevertheless.

// eslint-disable-line consistent-return

// eslint-disable-line eqeqeq

// eslint-disable-line func-name-matching

// eslint-disable-line no-alert

// eslint-disable-line no-eval

// eslint-disable-line no-new-wrappers

// eslint-disable-line no-restricted-syntax, no-unreachable-loop

// eslint-disable-line no-self-compare

// eslint-disable-line no-unused-expressions

// eslint-disable-line react-hooks/exhaustive-deps

// eslint-disable-next-line camelcase

// eslint-disable-next-line consistent-this

// eslint-disable-next-line eqeqeq

// eslint-disable-next-line no-control-regex

// eslint-disable-next-line no-restricted-globals

// eslint-disable-next-line no-restricted-syntax

// eslint-disable-next-line no-unused-vars

// eslint-disable-next-line no-unused-vars, no-restricted-syntax

// eslint-disable-next-line prefer-rest-params

// eslint-disable-next-line prefer-spread

// eslint-disable-next-line react-hooks/rules-of-hooks

// event emitter implementation with them.

// event.preventDefault() is meant to stop default behaviours like

// example IBAN AZ21 NABZ 0000 0000 1370 1000 1944

// exception, let the outer generator proceed normally. If

// execute code before the first await. Since we implement simple

// execute the provided method to find a potential satifised value

// execution once rather than once for the test and for the exec again below

// executor callback, and why async functions synchronously

// exhausted the output buffer, or used all the input create a new one.

// expose all the zlib constants

// exposed for testing purposes only.

// extends data size to data+genPoly size

// extension

// extra field is limited to 65536 bytes

// extract a block of data from buffer

// extract method name from between the {{ }} that we found

// fallthrough

// fast path needed to support multiple this.push()

// fewer than 64 bytes per chunk is stupid.

// find first matching {{ and }}

// find the node, u, that currently has the shortest path from s.

// finished with the chunk.

// fixed module

// flowing again.

// flowing needs to be set to true now, otherwise

// focusable events only

// following conditions:

// for (var i = 0; i < N; i++)

// for (var i = 0; i < N; i++)...

// for (var i = 0; i < p; i++)...

// for a list of tags pre-defined in the spec.

// for example: {{name.firstName}}

// for gzip header write only

// for readable, but we still have to call

// for tests

// for the `strictEqual` operator.

// for virtual (non-string, non-buffer) streams, "length" is somewhat

// freely, subject to the following restrictions:

// from the name.

// from within `ifError` and add the original error frames to the newly

// function because try/catches deoptimize in certain engines.

// function.sent implementation.

// furnished to do so, subject to the following conditions:

// gamma = Y1^2

// generates fake data for many computer systems properties

// generic zlib

// get a new location before the <Router> is mounted.

// getDefaultExport function for compatibility with non-harmony modules

// getFeeData has failed us.

// getSnapshotBeforeUpdate(prevProps) {

// go back to the normal behavior.

// go through the array every three bytes, we'll deal with trailing stuff later

// goodness.

// got a match.

// got an "options" object

// goto emulation

// gzip - bigger header, same deflate compression

// handle relative paths to be safe (might happen when process.cwd() fails)

// handler in flow(), but adding and removing repeatedly is

// handling at a lower level.

// has a stable shape and so hopefully should be cheap to allocate.

// has it been destroyed

// has not been initialized yet

// has returned yet), so that we know whether or not it's safe to emit

// have a good chance at having a non-empty extension

// have been (and was previously) designed to take a closure to be

// have meta information about the inspected properties (i.e., know where

// have to do it manually.

// he.app = require("./app");

// he.business = require("./business");

// he.company = require("./company");

// he.database = require("./database");

// he.finance = require("./finance");

// he.hacker = require("./hacker");

// he.internet = require("./internet");

// he.system = require("./system");

// he.team = require("./team");

// he.vehicle = require("./vehicle");

// heavy sets but it is a minor slow down for primitives. As they are fast

// here because toArray adds keys to all child elements and we do not want

// here.  For example, imagine a stream where every byte of input is

// hold a weak ref.

// horizontal

// however, don't suppress the throwing behavior for this.

// however, if we've ended, then there's no point, and if we're already

// http://davidwalsh.name/vendor-prefix

// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics

// http://fb.me/prop-types-in-prod

// http://ixti.net/development/javascript/2011/11/11/base64-encodedecode-of-utf8-in-browser-with-js.html

// http://jsperf.com/element-style-object-access-vs-plain-object

// http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx

// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499

// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array

// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters

// http://www.requirejs.org/docs/api.html

// https://bugs.chromium.org/p/v8/issues/detail?id=3056

// https://bugs.chromium.org/p/v8/issues/detail?id=4118

// https://bugs.webkit.org/show_bug.cgi?id=29121

// https://bugzilla.mozilla.org/show_bug.cgi?id=428916

// https://bugzilla.mozilla.org/show_bug.cgi?id=444328

// https://bugzilla.mozilla.org/show_bug.cgi?id=736723

// https://bugzilla.mozilla.org/show_bug.cgi?id=831392

// https://bugzilla.mozilla.org/show_bug.cgi?id=880200

// https://caniuse.com/#search=appearance

// https://caniuse.com/#search=color-adjust

// https://caniuse.com/#search=keyframes

// https://caniuse.com/#search=mask

// https://caniuse.com/#search=text-orientation

// https://code.google.com/p/chromium/issues/detail?id=153570

// https://code.google.com/p/chromium/issues/detail?id=225654

// https://code.google.com/p/chromium/issues/detail?id=260144

// https://code.google.com/p/v8/issues/detail?id=3757

// https://codesandbox.io/s/button-keyup-preventdefault-dn7f0

// https://css-tricks.com/snippets/css/force-vertical-scrollbar/

// https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest_in_IE6

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat

// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith

// https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

// https://git.io/vad3K

// https://github.com/alexeyten/qr-image/issues/13

// https://github.com/amdjs/amdjs-api/wiki/AMD

// https://github.com/cssinjs/jss/blob/4e6a05dd3f7b6572fdd3ab216861d9e446c20331/src/utils/createGenerateClassName.js

// https://github.com/facebook/react/blob/15a8f031838a553e41c0b66eb1bcf1da8448104d/packages/react/src/ReactElement.js#L221

// https://github.com/feross/buffer/pull/148

// https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143

// https://github.com/google/closure-library/blob/master/LICENSE

// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js

// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c

// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9

// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b

// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f

// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js

// https://github.com/soldair/node-qrcode/issues/157

// https://html.spec.whatwg.org/multipage/interaction.html#focus-fixup-rule.

// https://material.io/design/layout/understanding-layout.html#usage

// https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume

// https://stackoverflow.com/questions/41328728/force-casting-in-flow

// https://transferwise.com/fr/iban/azerbaijan

// https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10

// hunting for something thats deep-(strict-)equal to it. To make this

// hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html

// hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl

// hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html

// hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b

// i - 2

// if (!(symObj instanceof Symbol)) { return false; }

// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }

// if (sym instanceof Symbol) { return false; }

// if (typeof Symbol.prototype.toString !== 'function') { return false; }

// if (typeof range == 'undefined') { range = 7; }

// if _final has been called

// if a Content Security Policy forbids using Function, but in that case

// if clearTimeout wasn't available but was latter defined

// if incoming str parameter is not provided, return error message

// if it is a % sign, encode the following 2 bytes as a hex value

// if no {{ and }} is found, we are done

// if setTimeout wasn't available but was latter defined

// if the client passed in a different separator than `:`, 

// if the dest has an error, then stop piping into it.

// if the length is currently zero, then we *need* a readable event.

// if the readable side is ready for autoDestroy as well

// if the reader is waiting for a drain event from this

// if the result has not been previously found, add it to the found array and return the value as it's unique

// if the second value is one of these values and the first isn't.

// if the writable side is ready for autoDestroy as well

// if there's nothing in the write buffer, then that means

// if there's something in the buffer waiting, then process it

// if this is a duplex stream mark the writable part as destroyed as well

// if true, a maybeReadMore has been scheduled

// if we are mounting and running this it means appear _must_ be set

// if we are sync, wait until next tick to emit the data.

// if we currently have less than the highWaterMark, then also read some

// if we didn't call the onwrite immediately, then

// if we have detected an error in the meanwhile

// if we have multiple next() calls

// if we need a readable event, then we need to do some reading.

// if we're already writing something, then just put this

// if we're doing read(0) to trigger a readable event, but we

// if we're not piping anywhere, then do nothing.

// if we've ended, and we're now clear, then finish it up.

// if zip format is not specified, use the zip format defined for the locale

// ignore everything but left clicks

// ignore unnecessary end() calls.

// immediately, or on a later tick.  We set this to true at first, because

// implementation from standard node.js 'util' module

// implications (stack, `uncaughtException`, `async_hooks`)

// important to get this right, even though it requires care.

// important when wrapping filters and duplexes.

// improper fix to match Firefox behaviour, but it is better than just ignore abort

// in

// in a very close way to the original in case both sides are actually

// in all copies or substantial portions of the Software.

// in case function rule returns a falsy value.

// in case runtime.js accidentally runs in strict mode, in modern engines

// in every case, so we don't have to touch the arguments object. The

// in fixed multiplication method

// in nodeToRestore.current being null.

// in non-ending mode, where "/test/" shouldn't match "/test//route".

// in other case %= will fail.

// in particular locales first and last names split by gender,

// in the queue, and wait our turn.  Otherwise, call _write

// in the same tick, so changing this is semver major.

// in this program, procedure descriptions and comments of original source code were not removed.

// in turn another _read(n) call, in which case reading = true if

// in what line the property starts and ends).

// in_len

// in_off

// including commercial applications, and to alter it and redistribute it

// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)

// increments counter inside inner

// indentation intact.

// inf_leave <- here is real place for "goto inf_leave", emulated via "break inf_leave"

// injected easily by `bin/regenerator --include-runtime script.js`.

// inlined manually

// inner = (password ^ ipad) || salt || counter

// input values.

// input.

// insert rules after we insert the style tag.

// instances of Error.

// instances that were created from another copy of the `buffer` package.

// intXX and uintXX

// internally, and returns false if there's a lot of pending writes

// internally, when the last chunk has been written.

// interpreted as an integer from 0-255, and then results in that many

// into the async generator function so it can be handled there.

// inverse-cipher-ify the decryption round key (fips-197 section 5.3)

// invocations of the iterator.

// invoked without arguments, but in all the cases we care about we

// is === this._handle, and that's why it's important to null

// is absolutely positioned.

// is absurdly low.  Usually a MB or more is best.

// is not affected by `padding` or `border`.

// is otherwise identical.

// is surrogate component

// is that other hash histories in the page will consider it a POP.

// is valid at the end of a path match, not in the middle. This is important

// is why the Promise constructor synchronously invokes its

// it is async

// it is only for use together with insertRule API.

// it means that we need to wait until it does.

// it will try to move the focus back to the rootRef element.

// it'll have the correct byte counts.

// it's doesn't worth the bundle size.

// it's in progress.

// it, so set the completion value of the entire function to

// item hasn't changed transition states

// item is new (entering)

// item is old (exiting)

// iterator prototype chain incorrectly implement this, causing the Generator

// itself.

// join chunks

// jscs:ignore disallowUnusedVariables

// just one destination.  most common case.

// kMaxShortLength and if neither is an object and at least one of them is

// keeping a list of keys we've seen in sessionStorage.

// keeping a list of paths we've seen in sessionStorage.

// key expansion (fips-197 section 5.2)

// key expansion (for non-256 bit)

// key expansion for 256-bit keys is "slightly different" (fips-197)

// keys.

// known cost to v.

// last char was a lead

// legacy

// legacy streams

// legacy.

// legacy...

// length is NaN (which is otherwise coerced to zero.)

// like rules inside media queries or keyframes

// line so consecutive diverging lines show up as +++--- and not +-+-+-.

// lines commented with /* and */ are original comments.

// lines commented with // are additional comments in this JavaScript version.

// lines commented with //c// were originally descriptions of c procedure. and a few following lines are appropriate JavaScript descriptions.

// linked list can remove elements from the beginning faster than

// loading indicator in Safari < ? (6), Chrome < 14, Firefox

// location outside the try/catch block.

// locations where there is no enclosing try statement.

// log is just a thin wrapper to console.log that prepends a timestamp

// longer be forced to treat every error message change as a semver-major

// look weird as in:

// loop.

// loose mode is safe iff we're concatenating primitives

// make all the buffer merging and length checks go away

// making it explicit this property is not enumerable

// managing destroyed

// mark that we need a transform, so that any data that comes in

// match already ends with a slash, we remove it for consistency. The slash

// matching and only if it's not, go hunting for it.

// may be a completely synchronous operation which may change

// may be undefined if not provided. All assertion methods provide

// may call the _write() callback in the same tick, so that we don't

// meant to be awaited.

// member in the same archive, or just trailing garbage.

// message may change, the code should not.

// method always terminates the yield* loop.

// minifier not to mangle the names of these two functions.

// minimal 2-byte header

// mnemonic

// mode the stream is in. Currently this means that `null` is never accepted

// modified from https://github.com/es-shims/es5-shim

// modules monkey-patch it to support additional encodings

// most basic recommended timing

// most browsers create a new CSSStyleSheet, except of all IEs.

// multiplication (like elliptic secp256k1).

// multiply by 2

// must be multiple of 3

// naive approach... going back to loop unrolling may yield additional performance

// name and withTheme are invariant in the outer scope

// necessarily symmetric or synchronous transformation.  For example,

// necessary. v is the node across the current edge from u.

// need to emulate goto via "continue"

// needed or are available. If we see a non-continuation byte where we expect

// needed to complete the UTF-8 character (if applicable) are returned.

// negative + positive

// never call cb(), then you'll never get another chunk.

// nextStatus will always be ENTERING or EXITING.

// no "from" is provided, populates it.

// no combination of Error Correction Level and data mask pattern

// no enter animation skip right to ENTERED

// no exit animation skip right to EXITED

// no lead yet

// no more data can be written.

// no need for validFocusTarget check. the user does that by attaching it to

// node ID => cost

// node ID => predecessor node ID

// node is `undefined` when user provided `nodeRef` prop

// node.js

// node.js module exports

// node::ParseEncoding() requires lower case.

// normal statuses, not fatal

// normalized

// not `zero`, use the strict equal comparison to visualize the output.

// not an actual buffer we keep track of, but a measurement

// not happen before the first read call.

// not happen before the first write call.

// not listening for removeListener, no need to emit

// not used by this implementation

// note that ncarry could be >= 0x3ffffff

// nothing buffered

// num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)

// number of bytes are available.

// number of bytes available, we need to check if we end on a leading/high

// number of characters that are being encoded.

// number of pending user-supplied write callbacks

// object (or non strict only: a not matching primitive) we'll need to go

// object stream flag to indicate whether or not this stream

// object stream flag. Used to make read(n) ignore n and to

// object to not be returned from this call. This ensures that doesn't happen.

// objects. For full spec compliance, you may wish to configure your

// occurred", we error-wrap so the callback consumer can distinguish between

// of how much we're waiting to get pushed to some underlying

// of room.  If there was avail_out left over, then it means

// of the polyfill.

// of this software and associated documentation files (the 'Software'), to

// old school shim for old browsers

// old-style streams.  Note that the pipe method (the only relevant

// on the `m` itself.

// on the initial render. If there are, they will replace/push when

// on the source.  This would be more elegant with a .once()

// onClick prevented default

// onEnterXxx and onExitXxx callbacks have a different arguments.length value.

// once we've flushed the last of the queue, stop flushing and

// one allocated and free to use, and we maintain at most two

// one, we "replace" the validated continuation bytes we've seen so far with

// only additional allocation required is the completion record, which

// only contain numeric keys, we don't need to exam further than checking

// only svg for now.

// onprogress is not fired sometimes or delayed

// opted for using reduce here rather than Array#first with a regex.test call

// or a finally block) gives us a place to store values thrown from

// or not, return the runtime object so that we can declare the variable

// or on a later tick.  We set this to true at first, because any

// original length, plus the receiver, minus any additional arguments (after the receiver)

// original notice:

// other vendors use to add Webkit prefixes to some properties

// otherwise we will only clear a single timer when unmounting while two

// out

// out the values after they are done being used. `this._handle`

// out_len

// outer generator.

// outerKey = password ^ opad

// output blocks = SHA256(outerKey || SHA256(inner)) ...

// outputted bit calls the readcb, and subsequent chunks just go into

// override this function in implementation classes.

// pad the end with zeros, but make sure to not forget the extra bytes

// pad the string on the right with 0s to make the string's length a multiple of 8.

// pairwise.

// part of this class) is overridden in the Readable class.

// partial character, the character's bytes are buffered until the required

// passed in one, but it's not the right one.

// path component

// path.resolve([from ...], to)

// pause() and resume() are remnants of the legacy readable stream API

// permission from the author, Mathias Buus (@mafintosh).

// persons to whom the Software is furnished to do so, subject to the

// poor man optimization - use if-else instead of switch,

// positive + negative

// pre-compute lookup table

// prefix data with mode indicator (4 bits)

// prevents scrolling to the end of the page

// probably something that needs to be benchmarked though

// problems, please detail your unique predicament in a GitHub issue.

// properties we need to feature test at runtime.

// properties.

// property of a typed array.

// property to emulate a data property that does not suffer from

// property, i.e., returning the value rather than the getter

// prototypally inherits from Readable, and then parasitically from

// proxy all the other methods.

// proxy certain important events.

// r is BN v4 instance

// r is BN v5 instance

// randomly pick from the many faker methods that can generate words

// rapidly by a visibility change.

// rather setState here and ignore the hashchange. The caveat here

// raw - no header

// react-transition-group#onExit

// react-transition-group#onExited

// read it all, truncate the list

// read part of list

// read this mnemonic, just bail and don't set the

// readability by reducing the number of total changed lines).

// readable and reset the state. However this needs to happen

// reading, then it's unnecessary.

// reasonable to interpret their underlying memory in the same way,

// recommended when something is entering screen

// recommended when something is leaving screen

// record like context.tryEntries[i].completion. This interface could

// reduce buffer size, avoiding mem copy

// regeneratorRuntime in the outer scope, which allows this module to be

// regular focus change.

// reject if we are waiting for data in the Promise

// reject straight away

// reliably in a browserify context because there could be multiple different

// remove all the event listeners that were added.

// remove all zeros from buffer head

// remove all.

// replace ### with random numbers

// replace [4-9] with a random number in range etc...

// replacement char (U+FFFD) and advance only 1 byte

// request.destroy just do .end - .abort is what we want

// require('getprototypeof');

// requiring the generation of a new finalized classes object.

// reset user styles for span element

// rest params over-transpile for this case

// restoreLastFocus()

// result, either by returning a { value, done } result from the

// resume within the same tick will have no

// resume()

// rethrow might be better if it's not the expected error but do we really

// return the response recursively until we are done finding all tags

// returned by next() and store the error

// reuse the free corkReq.

// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or

// run the map function here instead so that the key is the computed one

// s->gzhead == Z_NULL

// s2 in 31-bits, because we force signed ints.

// safe to check for undefined only.

// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error

// same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.

// screensize shrink.

// see #118 (Promise#finally with polyfilled Promise)

// see #123 (data URLs crash Edge)

// see #125 (CSP violations)

// see above comment of firstName method

// see also #64 (significant lag in IE 11)

// see https://babeljs.io/docs/en/babel-plugin-transform-template-literals#loose

// see https://bugzilla.mozilla.org/show_bug.cgi?id=768596

// see https://github.com/promises-aplus/promises-spec/issues/179

// see pull/#138

// sell copies of the Software, and to permit persons to whom the Software is

// semver major update we should change the default to this.

// separators at the end of the string, stop now

// serve some output to the consumer.

// set default options

// set the new location immediately.

// set up data events if they are asked for

// setState callbacks and unmounting in testing, so always make sure that

// setting context.delegate to null, and returning the ContinueSentinel.

// shim for using process in browser

// shortcut if Array.from is available

// should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized

// should we decode strings into buffers before passing to _write?

// show if `static_tree` has data or dummy - needed for monomorphic objects

// similar to how Writable.write() returns true if you should

// similar to x >= 256, but a lot faster (because 0x100 == 256)

// since JSON.parse threw an error, assume parameters was actually a string

// since _read has to be called to start processing a new chunk.  However,

// since the masking operation must be performed only on the encoding region.

// since we are requiring the top level of faker, load all locales by default

// since we might actually be dealing with an object or array,

// single equals check for both `null` and `undefined`

// single line and the input length is less than the column length.

// slightly revisited to rely on looping instead of recursion

// slow case. multiple pipe destinations.

// slowly decelerate to a resting point.

// so Buffer.isBuffer(Buffer.prototype) will be false

// so that if we have to hit it a third (fourth, etc.) time,

// so that results are always delivered in the correct order. If

// so that the async generator function has the opportunity to do

// so use gasPrice as both fee properties

// socket or file.

// some bits pass through, and others are simply ignored.  (That would

// some locale datasets ( like ru ) have first_name split by gender. since the name.first_name field does not exist in these datasets,

// some locale datasets ( like ru ) have last_name split by gender. i have no idea how last names can have genders, but also i do not speak russian

// some time from now to N days ago, in milliseconds

// some time from now to N days later, in milliseconds

// some time from now to N years ago, in milliseconds

// some time from now to N years later, in milliseconds

// something else.

// something with the data.  Sometimes it's called a "filter",

// source gets the 'end' or 'close' events.  Only dest.end() once.

// source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/en.xml#L1799

// source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/ru.xml#L1734

// source: http://unicode.org/cldr/trac/browser/tags/release-27/common/main/ru.xml#L1825

// specific writer, then it would cause it to never start

// split the method into module and function

// standard global objects

// start out asking for a readable event once data is transformed.

// start the flow if it hasn't been started already.

// state.distcode = state.next;

// state.lencode = state.next;

// state.next_index = opts.table_index;

// stay inside the bounds (because we will mainly use this table for the multiplication of

// strange issue with the node_min_test failing for captialize, please fix and add faker.lorem.back

// stream classes.  When you write(chunk), that calls _write(chunk,cb)

// strict mode using a global Function call. This could conceivably fail

// struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */

// struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */

// struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */

// styled-components's API removes the mapping between components and styles.

// such a pathological inflating mechanism, there'd be no way to tell

// support once('readable', fn) cycles. This means that calling

// support single exclude argument as string

// surrogate. In that case, we need to wait for the next two bytes in order to

// switch min and max

// sync guard flag.

// sync version

// synthetic stream cases, such as passthrough streams, _read

// technically it could work with as few as 8, but even 64 bytes

// tell the dest that it's being piped to

// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4

// temp disabled per https://github.com/ljharb/object.assign/issues/17

// temporary style

// testing XMLHttpRequest#responseText too many times is too slow in IE 11

// testnet values, let me know. I believe current senitment is that

// that Readable wants before the first _read call, so unset the

// that all of the input was consumed.

// that nothing more will ever be provided

// that the Readable class should behave improperly, as streams are

// that to be increased. Set to zero for unlimited.

// that we're awaiting a 'readable' event emission.

// that were committed on `open={true}`

// the 'readable' event and move on.

// the .value of the Promise<{value,done}> result for the

// the ReadableState constructor, at least with V8 6.5

// the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)

// the WritableState constructor, at least with V8 6.5

// the Zlib class they all inherit from

// the `fulfill` and `reject` arguments as well or it may be never resolved.

// the `instanceof` check but they should be treated as of that type.

// the `unique` module

// the actual props Component might receive due to merging with defaultProps.

// the amount that is being written when _write is called.

// the background and the text.

// the callback that the user supplies to write(chunk,encoding,cb)

// the callback that's passed to _write(chunk,cb)

// the caller expect this to happen before if

// the character value of the final character is encoded as a 6-bit binary number.

// the combined list

// the common path parts

// the cost of the shortest paths to any or all of those nodes as

// the current version with just one short number and use it for classes generation

// the drain event emission and buffering.

// the entire buffer is not flushed immediately on write()

// the error to be emitted nextTick. In a future

// the final one or two digits are converted to 4 or 7 bits respectively.

// the final result produced by the iterator.

// the first object and say A equals B

// the known shortest path from s.

// the last round is special

// the lowest limit is Chrome, with 0x10000 args.

// the matched portion of the URL

// the method takes exactly one argument, since that happens to be true

// the minimum depth. Otherwise those values would be too verbose compared

// the module.

// the no-half-open enforcer

// the number of writers that are awaiting a drain event in .pipe()s

// the outer generator.

// the override mistake, that accessor's getter is marked with

// the path used to match

// the point at which it stops calling _read() to fill the buffer

// the point at which write() starts returning false

// the prependListener() method. The goal is to eventually remove this hack.

// the previous one, we may end up in a weird state. Figure out the

// the promise is actually somehow related to the callback's execution

// the proper solution is to fix the accidental strict mode problem. If

// the read buffer, and will cause it to emit 'readable' if necessary.

// the readable code triggers during a read() call

// the results of the previous transformed chunk were consumed.

// the same options object.

// the state of the read buffer, providing enough data when

// the symbols.

// the system to stop doing the transform.  A single 4MB write could

// the upcoming resume will not flow.

// then go ahead and try to read some more preemptively.

// then let that catch block handle the exception normally.

// there chould be multiple formats

// there is no version 0

// there is no way to cleanly recover.

// there will be only 2 of these for each stream

// there's enough pending readable data buffered up.

// these names are taken from the list of most popular names in 2019 for boys: https://www.svbkindernamen.nl/int/nl/kindernamen/wizard/zoeknaam/jongensnamen/jongens_alfabetisch.html

// these names are taken from the list of most popular names in 2019 for girls: https://www.svbkindernamen.nl/int/nl/kindernamen/wizard/zoeknaam/meisjesnamen/meisjes_alfabetisch.html

// they mount and since cDM fires in children before parents, we may

// things simple and return the next function itself.

// think they are setting in terms of fee.

// this - (-num) = this + num

// this Signer. Should be used by sendTransaction but NOT by signTransaction.

// this can emit finish, and it will always happen

// this can emit finish, but finish must

// this is IE 8, which has a broken gOPD

// this is here so that some node-core streams can optimize string

// this is primarily because using the reduce we only perform the regex

// this is to be used in complex animations

// this logic is optimized to support for await loops,

// this must be 0 before 'finish' can be emitted

// this program is a JavaScript version of Mersenne Twister, with concealment and encapsulation in class,

// this same function

// this._events to be assigned to a new object

// this.containers[containerIndex] = {

// this.modals[modalIndex] = modal

// throw the exception.

// thus we keep consistency by passing 0 as male and 1 as female

// time the script started

// tiny amounts

// to avoid deopts in old v8

// to avoid piling up things on the stack

// to check this improves the worst case scenario instead.

// to continue to work with older versions of Node.js that do not include

// to create a new function object. We can even get away with assuming

// to detect a Buffer instance. It's not possible to use `instanceof Buffer`

// to get stuck in a permanently paused state if that write

// to is absolute

// to is relative, drop the filename

// to learn the context in which each easing should be used.

// to make it re-entrance safe in case destroy() is called within callbacks

// to non-red form?

// to the actual error message which contains a combined view of these two

// to the readable side.  You may call 'push' zero or more times.

// to their upper/lower bounds if the value passed is out of range.

// to trigger an unmount/remount for two <Route>s that render the same

// to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit

// too slow.

// top-left

// top-right

// total number of codewords, (number of ec codewords, number of blocks) * ( L, M, Q, H )

// translated by y. okada on July 17, 2006.

// translation table for return codes.

// transplited with Babel

// true or false if there is anything in the queue when

// try to find the right one.

// two GF numbers, no more).

// two indexes within its tonal palette.

// type is a string, number, bigint or boolean. The reason is that those values

// uint or int

// uncompressed, hybrid-odd, hybrid-even

// undefined

// undefined is handled specially as per ECMA-262 6th Edition,

// underlying ArrayBuffer. This optimization requires that it's

// underlying stream.

// undocumented cb() API, needed for core, not for public API

// unexpected trail

// unified ._invoke helper method.

// unpaired lead

// up in Node's output if this results in an unhandled exception.

// update readableListening so that resume() may be a no-op

// update the buffer info.

// update v's predecessor in the predecessor list (it's now u).

// uphold the illusion by pretending to see that original data

// used for padding.

// used to preserve spaces and line breaks

// userland ones.  NEVER DO THIS. This is here only because this code needs

// userland will fail

// using the formula "check if the base fee is correct".

// v is greater than the new cost we just found (cost of s to u plus

// v8 likes predictible objects

// valid lead

// valid surrogate pair

// value should have no prefix

// value statically and permanently identifies the error. While the error

// value, and has a chance to attach a 'drain' listener.

// values for the readable and the writable sides of the duplex stream,

// values for the readable and the writable sides of the duplex stream.

// var SMALLEST = 1;

// var groupBase = Math.pow(base, groupSize);

// var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));

// var startTime = 0;

// variable specified by delegate.resultName (see delegateYield).

// variables correct.

// variant === temporary

// vertical

// very first line, add the line to the result.

// waiting to be emitted.

// wan't to early return out of the rest of the checks. However we can check

// want to crash if focus-visible malfunctioned?

// warranty. In no event will the authors be held liable for any damages

// way. Do not accept thenables that use a function as `obj` and that have no

// we always attempt to the parse the incoming parameters into JSON

// we can be expecting either 'end' or

// we can cancel any pending setState callbacks after we unmount.

// we can explicitly access globalThis. In older engines we can escape

// we can guarantee we have that here, because we control the

// we cannot guarantee that there is no error lingering around

// we defer if data is null

// we did not generate a valid codePoint so insert a

// we end up with very hard-to-track-down side effects.

// we flow only if there is no one listening

// we have implemented the _read method, and done the other things

// we ignore the value if the stream

// we must ensure that previous needDrain will not be reset to false.

// we must randomly pick a name from either gender array so faker.name.firstName will return the correct locale data ( and not fallback )

// we need it if the extension ends up not matching

// we set destroyed to true before firing error callbacks in order

// we should always use mainnet, and use BIP-44 to derive the network

// we use a counter. Also it is more accurate, because user can manually reevaluate

// we use our own heuristic for those browsers

// we wait for the next tick, because it might

// we will use it if it is in the list of acceptable separators (dash or no separator)

// we will wait for the previous Promise to finish

// webpackBootstrap

// when 'finish' is emitted

// when a corresponding condition is not met, with a message that

// when end() has been called, and returned

// when it's hidden.

// when modal was unmounted before modalRef gets null

// when the dest drains, it reduces the awaitDrain counter

// when true all writes will be buffered until .uncork() call

// when we try to consume some more bytes, simply unpause the

// when when somebody has screwed with setTimeout but no I.E. maddness

// whenever we return null, then we set a flag to say

// where all of the continuation bytes for a character exist in the same buffer.

// where next() is only called once at a time

// whether or not we matched exactly

// which happen after the first `rules.add()` call.

// which is checked by comparing their type tags.

// will be returned from that function.

// will get processed, now that we've asked for it.

// will read this wrong value. We only read from `nodeToRestore` in effects

// will result in an all-zero data string

// window index

// with `none`.`

// withCredentials should be set after "open" for Safari and Chrome (< 19 ?)

// without limitation the rights to use, copy, modify, merge, publish,

// without triggering the next() queue

// won't be able to remove the CSS rule from the DOM.

// workaround for Opera 12 issue with "progress" events

// would be consumed, and then the rest would wait (un-transformed) until

// would return false, as no `_writableState` property is attached.

// wrap an old-style stream as the async data source.

// wrapped in strict mode code which doesn't define any globals.  It's inside a

// write() some more.

// written chunk would result in multiple output chunks, then the first

// x1 * z2^2 == x2 * z1^2

// xhr.send(); throws "Not enough arguments" in Firefox 3.0

// xor final data with mask pattern in order to ensure that

// y1 * z2^3 == y2 * z1^3

// you call the .write() method.

// you can override either this method, or the async _read(n) below.

// you've misconfigured your bundler to force strict mode and applied a

// zlib doesn't provide these, so kludge them in following the same

// zlib modes

// zmemcpy(buf, strm->next_in, len);

// {{{1 8bit encode

// {{{1 All-in-one

// {{{1 All-in-one function

// {{{1 Calculate penalty

// {{{1 Choose encode mode and generates struct with data for different version

// {{{1 Fill data

// {{{1 Fill reserved areas

// {{{1 Fill reserved areas with zeroes

// {{{1 Fill template

// {{{1 Galois Field Math

// {{{1 Generator Polynomials

// {{{1 Get version template

// {{{1 Initialize matrix with zeros

// {{{1 Put align and timinig

// {{{1 Put finders into matrix

// {{{1 Versions

// {{{1 alphanumeric encode

// {{{1 export functions

// {{{1 numeric encode

// {{{1 url encode

// }

// }, {});

// };

// ⚠️ sticky is not supported by IE 11.

//# sourceMappingURL=_version.js.map

//# sourceMappingURL=aes.js.map

//# sourceMappingURL=bignumber.js.map

//# sourceMappingURL=browser.js.map

//# sourceMappingURL=clipboard-polyfill.text.esm.js.map

//# sourceMappingURL=compat.module.js.map

//# sourceMappingURL=constants.js.map

//# sourceMappingURL=crowdsale.js.map

//# sourceMappingURL=crypto.js.map

//# sourceMappingURL=encoding.js.map

//# sourceMappingURL=env.js.map

//# sourceMappingURL=error.js.map

//# sourceMappingURL=ethereum.js.map

//# sourceMappingURL=events.js.map

//# sourceMappingURL=id.js.map

//# sourceMappingURL=index.js.map

//# sourceMappingURL=inspect.js.map

//# sourceMappingURL=keystore.js.map

//# sourceMappingURL=local.js.map

//# sourceMappingURL=message.js.map

//# sourceMappingURL=mobile.js.map

//# sourceMappingURL=network.js.map

//# sourceMappingURL=payload.js.map

//# sourceMappingURL=pbkdf2.js.map

//# sourceMappingURL=random.js.map

//# sourceMappingURL=registry.js.map

//# sourceMappingURL=session.js.map

//# sourceMappingURL=sha2.js.map

//# sourceMappingURL=storage.js.map

//# sourceMappingURL=styled-components.browser.esm.js.map

//# sourceMappingURL=typed-data.js.map

//# sourceMappingURL=url.js.map

//# sourceMappingURL=utils.js.map

//# sourceMappingURL=validators.js.map

//# sourceMappingURL=wordlist.js.map

//# sourceMappingURL=wordlists.js.map

//#endif

//#if MIN_MATCH != 3

//#ifdef GZIP

//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR

//#ifdef INFLATE_STRICT

//#ifdef TRUNCATE_BLOCK

//#ifndef PKZIP_BUG_WORKAROUND

//---

//--- BYTEBITS() ---//

//--- BYTEBITS() ---// /* go to byte boundary */

//--- DROPBITS(1) ---//

//--- DROPBITS(2) ---//

//--- DROPBITS(3) ---//

//--- DROPBITS(4) ---//

//--- DROPBITS(5) ---//

//--- DROPBITS(7) ---//

//--- DROPBITS(here.bits) ---//

//--- DROPBITS(last.bits) ---//

//--- DROPBITS(state.extra) ---//

//--- LOAD() ---

//--- PULLBYTE() ---//

//--- RESTORE() ---

//--- zmemcpy(put, next, copy); ---

//---//

///////////////////

///////////////////////

///////////////////////////////

//=== CRC2(state.check, hold);

//=== CRC4(state.check, hold)

//=== INITBITS();

//=== NEEDBITS(14); */

//=== NEEDBITS(16);

//=== NEEDBITS(16); */

//=== NEEDBITS(3);

//=== NEEDBITS(3); */

//=== NEEDBITS(32);

//=== NEEDBITS(32); */

//=== NEEDBITS(here.bits + 2);

//=== NEEDBITS(here.bits + 3);

//=== NEEDBITS(here.bits + 7);

//=== NEEDBITS(state.extra);

//===//

//Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,

//Assert (code < D_CODES, "bad d_code");

//Assert (dist == 256, "tr_static_init: 256+dist != 512");

//Assert (dist == 256, "tr_static_init: dist != 256");

//Assert (flush != Z_NO_FLUSH, "no flush?");

//Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,

//Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, "not enough codes");

//Assert (length == 256, "tr_static_init: length != 256");

//Assert((ush)dist < (ush)MAX_DIST(s) &&

//Assert(count >= 3 && count <= 6, " 3_6?");

//Assert(more >= 2, "more < 2");

//Assert(s->block_start >= 0L, "block gone");

//Assert(s->lookahead < MIN_LOOKAHEAD, "already enough lookahead");

//Assert(s->strstart < s->w_size+MAX_DIST(s) ||

//Assert(scan <= s->window+(uInt)(s->window_size-1), "wild scan");

//Assert(strm->avail_out > 0, "bug2");

//BITS(2);

//BITS(3);

//BITS(7);

//Fall back to non-gendered names if they exist and gender wasn't specified

//NOTE: this returns a string representation of the value, if you want a number use parseFloat and no symbol

//Note: bytes in textDecoder are ignored

//T.copy(DK, destPos, 0, len)

//TODO: add a ranged date method

//TODO: implement for letters e.g. [0-9a-zA-Z] etc.

//Tracev((stderr, "\nbl code %2d ", bl_order[rank]));

//Tracev((stderr, "\nbl counts: "));

//Tracev((stderr, "\nbl tree: sent %ld", s->bits_sent));

//Tracev((stderr, "\ndyn trees: dyn %ld, stat %ld",

//Tracev((stderr, "\nlit tree: sent %ld", s->bits_sent));

//Tracev((stderr, "inflate:       code lengths ok\n"));

//Tracev((stderr, "inflate:       stored end\n"));

//Tracev((stderr, "inflate:       stored length %u\n",

//Tracev((stderr, "inflate:       table sizes ok\n"));

//Tracev((stderr, "inflate:     dynamic codes block%s\n",

//Tracev((stderr, "inflate:     fixed codes block%s\n",

//Tracev((stderr, "inflate:     stored block%s\n",

//Tracev((stderr, "inflate:   zlib header ok\n"));

//Tracev((stderr, "inflate: allocated\n"));

//Tracev((stderr, 'inflate:       codes ok\n'));

//Tracev((stderr,"\ngen_codes: max_code %d ", max_code));

//Tracevv((stderr, "inflate:         distance %u\n", dist));

//Tracevv((stderr, "inflate:         distance %u\n", state.offset));

//Tracevv((stderr, "inflate:         end of block\n"));

//Tracevv((stderr, "inflate:         length %u\n", len));

//Tracevv((stderr, "inflate:         length %u\n", state.length));

//Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?

//Tracevv((stderr,"%c", s->window[s->strstart-1]));

//Tracevv((stderr,"%c", s->window[s->strstart]));

//Tracevv((stderr,"%c", s.window[s.strstart]));

//U = createHmac(password).update(U).digest();

//U.copy(T, 0, 0, hLen)

//Z_ASCII:                1, // = Z_TEXT (deprecated)

//Z_MEM_ERROR:     -4,

//Z_VERSION_ERROR: -6,

//_tr_flush_bits(s);

//block1.writeUInt32BE(i, salt.length)

//c//	+ init_key[j] + j; /* non linear */

//c//#define LOWER_MASK 0x7fffffffUL /* least significant r bits */

//c//#define M 397

//c//#define MATRIX_A 0x9908b0dfUL   /* constant vector a */

//c//#define N 624

//c//#define UPPER_MASK 0x80000000UL /* most significant w-r bits */

//c//(1812433253 * (mt[mti-1] ^ (mt[mti-1] >> 30)) + mti);

//c//- i; /* non linear */

//c//double genrand_real1(void)

//c//double genrand_real2(void)

//c//double genrand_real3(void)

//c//double genrand_res53(void)

//c//init_genrand(19650218);

//c//int i, j, k;

//c//int kk;

//c//long genrand_int31(void)

//c//mt[0]= s & 0xffffffff;

//c//mt[N-1] = mt[M-1] ^ (y >> 1) ^ mag01[y & 0x1];

//c//mt[i] &= 0xffffffff; /* for WORDSIZE > 32 machines */

//c//mt[i] = (mt[i] ^ ((mt[i-1] ^ (mt[i-1] >> 30)) * 1566083941))

//c//mt[i] = (mt[i] ^ ((mt[i-1] ^ (mt[i-1] >> 30)) * 1664525))

//c//mt[kk] = mt[kk+(M-N)] ^ (y >> 1) ^ mag01[y & 0x1];

//c//mt[kk] = mt[kk+M] ^ (y >> 1) ^ mag01[y & 0x1];

//c//mt[mti] &= 0xffffffff;

//c//return ((genrand_int32()) + 0.5)*(1.0/4294967296.0);

//c//return (genrand_int32()>>1);

//c//return genrand_int32()*(1.0/4294967295.0);

//c//return genrand_int32()*(1.0/4294967296.0);

//c//static int mti=N+1; /* mti==N+1 means mt[N] is not initialized */

//c//static unsigned long mag01[2]={0x0UL, MATRIX_A};

//c//static unsigned long mt[N]; /* the array for the state vector  */

//c//unsigned long genrand_int32(void)

//c//unsigned long y;

//c//void init_by_array(unsigned long init_key[], int key_length)

//c//void init_genrand(unsigned long s)

//c//y = (mt[N-1]&UPPER_MASK)|(mt[0]&LOWER_MASK);

//c//y = (mt[kk]&UPPER_MASK)|(mt[kk+1]&LOWER_MASK);

//c//y ^= (y << 15) & 0xefc60000;

//c//y ^= (y << 7) & 0x9d2c5680;

//c//y ^= (y >> 11);

//c//y ^= (y >> 18);

//calling rnd() with no arguments is identical to rnd(0, 100)

//check_match(s, s.strstart, s.strstart - 1, s.match_length);

//check_match(s, s.strstart-1, s.prev_match, s.prev_length);

//console.log(Base58.decode("Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj"))

//console.log(Base58.encode(Base58.decode("Qmd2V777o5XvJbYMeMb8k2nU5f8d3ciUQ5YpYuWhzv8iDj")))

//console.log(currentIterations)

//crc32(0L, Z_NULL, 0);

//create a template for length

//dots = 2 returns .x.y where x & y are between 0 and 9

//export function isJsonWallet(json: string): boolean {

//generate a random revision

//generate random numbers

//here = opts.here; /* table entry for duplication */

//here = state.here;

//http://msdn.microsoft.com/en-us/library/ie/ms537503(v=vs.85).aspx

//http://www.opera.com/docs/history/

//https://developer.mozilla.org/en-US/docs/Gecko_user_agent_string_reference

//if (sizeof(int) <= 2) {

//if (state === Z_NULL) return Z_MEM_ERROR;

//if (static_init_done) return;

//if (strm.avail_out <= 0) { throw new Error("bug2");}

//int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */

//int val;

//let U = createHmac(password).update(block1).digest();

//min and max take in minimum and maximum amounts, dec is the decimal place you want rounded to, symbol is $, €, £, etc

//normal enviroments in sane situations

//opts.table_index += used;

//out_off

//overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);

//pqremove(s, tree, n);  /* n = node of least frequency */

//prefix with ellipsis

//put_byte(s, (Byte)s->bi_buf);

//return  faker.lorem.words(wordCount + Helpers.randomNumber(range)).join(' ').capitalize();

//returns a random element from array (a), even weighting

//returns a random key from the passed object; keys are weighted by the decimal probability in their value

//s->d_buf = overlay + s->lit_bufsize/sizeof(ush);

//s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;

//s->pending_buf = (uchf *) overlay;

//s.high_water = 0;  /* nothing written to s->window yet */

//salt.copy(block1, 0, 0, salt.length)

//set defaults

//state = 2;

//state.distcode.copy(state.codes);

//state.lencode = state.distcode = state.next = state.codes;

//state.lencode = state.next;

//state.next = state.codes;

//strm.msg = Z_NULL;                 /* in case we return an error */

//table.bits[next + huff] = len - drop;

//table.bits[opts.table_index] = 1;

//table.bits[opts.table_index] = 1;   //here.bits = (var char)1;

//table.op[next + huff] = 64;            /* invalid code marker */

//table.op[opts.table_index] = 64;

//table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */

//table.val[next + huff] = 0;

//table.val[opts.table_index++] = 0;

//table.val[opts.table_index++] = 0;   //here.val = (var short)0;

//this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */

//this.max_insert_length = 0;

//uch depth[2*L_CODES+1];

//ush bl_count[MAX_BITS+1];

//var Z_FILTERED          = 1;

//var Z_HUFFMAN_ONLY      = 2;

//var Z_RLE               = 3;

//var out_length, in_length, dcode;

//zmemcpy(state->window + state->wnext, end - copy, dist);

//zmemcpy(state->window, end - copy, copy);

//}
